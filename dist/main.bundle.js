"use strict";
(self["webpackChunksettlement_sheet"] = self["webpackChunksettlement_sheet"] || []).push([["main"],{

/***/ "./src/buildingsStats.js":
/*!*******************************!*\
  !*** ./src/buildingsStats.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   buildings: () => (/* binding */ buildings),
/* harmony export */   setBuildings: () => (/* binding */ setBuildings)
/* harmony export */ });
/* eslint-disable import/no-mutable-exports */
let buildings = [{
  name: 'Walls',
  id: 'wa',
  level: 0,
  status: "You haven't built any walls yet.",
  level0: {
    name: 'No Walls',
    desc: 'Having no walls is the default settlement configuration.',
    prod: 'N/A',
    level: 'N/A'
  },
  level1: {
    name: 'Pallisade Walls',
    desc: 'Pallisade walls are a great first line of defense against unorganized attacks or attacks from mindless creatures. They increase Defensive Infrastructure Bonus by +1 and Settlement Max Health by +5.',
    prod: 14,
    level: 2,
    rewards: {
      di: 1,
      maxHealth: 5
    },
    status: 'You have Pallisade Walls, granting you a Defense Bonus of +1 and Max Health bonus of +5',
    gold: 350,
    supplies: 8
  },
  level2: {
    name: 'Stone Walls',
    desc: 'Stone Walls are a significant improvement over Pallisade Walls, proving difficult for all but the most militant of attackers. They increase Defensive Infrastructure Bonus by +1 and increase Settlement Max Health by +10.',
    prod: 21,
    level: 6,
    rewards: {
      di: 1,
      maxHealth: 10
    },
    status: 'You have Stone Walls, granting you a total Defense Bonus of +2 and total Max Health Bonus of +15 ',
    gold: 1200,
    supplies: 10
  },
  level3: {
    name: 'Reinforced Stone Walls',
    desc: 'Reinforced Stone Walls are the epitome of static settlement protection. They increase Defensive Infrastructure and Intelligence bonuses by +1 and increase Settlement Max Health by +20.',
    prod: 28,
    level: 10,
    rewards: {
      di: 1,
      intel: 1,
      maxHealth: 20
    },
    status: 'You have Reinforced Stone Walls, granting you a total Defense Bonus of +3, an Intelligence Bonus of +1, and a Max Health Bonus of +35.',
    gold: 3200,
    supplies: 20
  }
}, {
  name: 'Wells',
  id: 'we',
  level: 0,
  status: "You haven't built any wells yet.",
  level0: {
    name: 'No Well',
    desc: 'Having no well is the default settlement configuration.',
    prod: 'N/A',
    level: 'N/A'
  },
  level1: {
    name: 'Simple Well',
    desc: 'Building a simple Well reduces the Health damage from being without water for a week from 25 to 20; it also reduces the impact of Drought Events by 1.',
    prod: 7,
    level: 1,
    rewards: {},
    status: 'You have a Simple Well, reducing weekly health loss from a lack of water from 25 to 20; Drought Event Impacts reduced by 1',
    gold: 100,
    supplies: 2
  },
  level2: {
    name: 'Simple Well Network',
    desc: 'Building a Simple Well Network expands the capacity of groundwater access. It further reduces the Health damage from being without water for a week from 20 to 15 and also reduces the impact of Drought Events by 2.',
    prod: 10,
    level: 5,
    rewards: {},
    status: 'You have a Simple Well Network, reducing weekly health loss from a lack of water from 20 - 15; Drought Event Impacts reduced by 2',
    gold: 200,
    supplies: 6
  },
  level3: {
    name: 'Evaporation Collectors',
    desc: 'Building Evaporation Collectors provides much better water retention for the well network. This upgrade ensures the settlement always has access to water and futher decreases the impact from Drought Events by 3.',
    prod: 14,
    level: 8,
    rewards: {},
    status: 'You have Evaporation Collectors, removing health loss from a lack of water; Drought Impact Events reduced by 4',
    gold: 800,
    supplies: 14
  }
}, {
  name: 'Network',
  id: 'ne',
  level: 0,
  status: "You haven't built an Intelligence Network yet.",
  level0: {
    name: 'No Intelligence Network',
    desc: 'Having no Intelligence Network is the default settlement configuration.',
    prod: 'N/A',
    level: 'N/A'
  },
  level1: {
    name: 'Community Watch Hub',
    desc: "Building a Community Watch Hub is a solid start to improving leadership's knowledge of internal affairs - particularly those things that aren't generally made public. It provides and Intelligence Bonus of +1.",
    prod: 10,
    level: 3,
    rewards: {
      intel: 1
    },
    status: 'You have a Community Watch Hub, increasing your Intelligence Bonus by +1',
    gold: 150,
    supplies: 2,
    intelligence: 2
  },
  level2: {
    name: 'Planted Merchants',
    desc: 'Funding Planted Merchants provides a much wider berth of knowledge about the goings on in and around town. It provides an Intelligence Bonus of +1 and prevents you from losing Intelligence every week.',
    prod: 18,
    level: 7,
    rewards: {
      intel: 1
    },
    status: 'You have Planted Merchants, increasing your Intelligence Bonus by +2 and preventing weekly Intel loss.',
    gold: 900,
    supplies: 6,
    intelligence: 4
  },
  level3: {
    name: 'Sensitive Compartmented Information Facility (SCIF)',
    desc: 'Building a SCIF ensures intelligence remains the sole property of the leadership of the settlement. It Increase Intelligence Bonus by +2 and allows you to convert Garrison into Intelligence.',
    prod: 21,
    level: 11,
    rewards: {
      intel: 2
    },
    status: "You have a SCIF, increasing your Intelligence Bonus by +4, preventing weekly Intel Loss, and unlocking the 'Active ISR' Action",
    gold: 3000,
    supplies: 15,
    intelligence: 7
  }
}, {
  name: 'Barracks',
  id: 'ba',
  level: 0,
  status: "You haven't upgraded the Barracks yet.",
  level0: {
    name: 'Standard Barracks',
    desc: 'Having a standard Barracks is the default settlement configuration.',
    prod: 'N/A',
    level: 'N/A'
  },
  level1: {
    name: 'Kitchen',
    desc: "Building a Kitchen ensures garrisoned forces are well fed at all times and can support more strenuous training exercises. This upgrade unlocks Militia Cavalry and Militia Pikemen, as well as the 'Feed the Troops' action, which allows you to convert Food into Garrison at a 6-1 rate. Finally, it grants a Garrison Bonus of +1.",
    prod: 7,
    level: 2,
    rewards: {
      gar: 1
    },
    status: "You have built a Kitchen, increasing your Garrison Bonus by +1. See Troop Info for unlocks; 'Feed the Troops' Action",
    gold: 300,
    supplies: 4,
    food: 4
  },
  level2: {
    name: 'Training Ground',
    desc: 'Building a Training Ground allows garrisoned forces to complete regular training exercises in a variety of circumstances. It unlocks Guard Infantry, Guard Archers, Guard Pikemen, and Guard Cavalry troop and provides a Garrison Bonus of +1.',
    prod: 10,
    level: 6,
    rewards: {
      gar: 1
    },
    status: "You have a Training Ground, increasing Garrison Bonus by +2. See Troop Info for unlocks; 'Feed the Troops' Action",
    gold: 900,
    supplies: 10,
    'medical capacity': 4
  },
  level3: {
    name: 'War Room',
    desc: 'Building a War Room allows garrisoned units to study battles, engage in theoretical wartime discussions, and maintain tactical capabilities on larger scales. It unlocks Soldier Infantry, Longbowmen, Phalanx, and Cannon troops and provides a Garrison Bonus of +1.',
    prod: 20,
    level: 11,
    rewards: {
      gar: 1
    },
    status: "You have a War Room, increasing your Garrison Bonus by +4. See Troop Info for unlocks; 'Feed the Troops' Action",
    gold: 3100,
    supplies: 16,
    intelligence: 4
  }
}, {
  name: 'Granary',
  id: 'gr',
  level: 0,
  status: "You haven't built a Granary yet.",
  level0: {
    name: 'No Granary',
    desc: 'Having no Granary is the default settlement configuration.',
    prod: 'N/A',
    level: 'N/A'
  },
  level1: {
    name: 'Improved Sifters',
    desc: 'Building Improved Sifters allows finer flours to be separated from unrefined grains, increasing operating efficiency of the granary. This increases Food Bonus by +1, grants +2 Food points per week, and unlocks the Harvest Action, allowing you to convert Productivity into Food at a 2-1 ratio.',
    prod: 7,
    level: 2,
    rewards: {
      food: 1
    },
    status: "You have Improved Sifters, increasing your Food Bonus by +1; Food Points +2 per week; 'Harvest' Action",
    gold: 125,
    supplies: 4
  },
  level2: {
    name: 'Reinforced Silos',
    desc: "Building Reinforced Silos greatly improves the settlement's capacity for storing food and ensures it remains viable for longer. This increases Food Bonus by +1 and grants a total of +4 Food points per week.",
    prod: 14,
    level: 6,
    rewards: {
      food: 1
    },
    status: "You have Reinforced Silos, increasing your Food Bonus by +2; Food Points +4 per week; 'Harvest' Action",
    gold: 700,
    supplies: 10
  },
  level3: {
    name: 'Reinforced Grinder',
    desc: 'Building a Reinforced Grinder greatly improves the speed with which harvested grain can be turned into a usable product. This increases Food Bonus by +2 and grants a total of +7 Food points per week.',
    prod: 16,
    level: 10,
    rewards: {
      food: 2
    },
    status: "You have Reinforced Grinder, increasing your Food Bonus by +4; Food Points +7 per week; 'Harvest' Action",
    gold: 2800,
    supplies: 15
  }
}, {
  name: 'Market',
  id: 'ma',
  level: 0,
  status: "You haven't upgraded the Market yet.",
  level0: {
    name: 'Standard Market',
    desc: 'Having a Standard Market is the default settlement configuration.',
    prod: 'N/A',
    level: 'N/A'
  },
  level1: {
    name: 'Legal Fence',
    desc: 'Funding a Legal Fence ensures more products reach the market, driving higher trade. This increases Trade Bonus by +1, increases the sale value of goods by 2%, and decreases buy price by 5%.',
    prod: 7,
    level: 3,
    rewards: {
      trade: 1
    },
    status: 'You have a Legal Fence, increasing Trade Bonus by +1; Buy at 5% discount; Sell at 2% mark-up',
    gold: 200,
    supplies: 3
  },
  level2: {
    name: 'Night Market',
    desc: 'Building a Night Market ensures there is always trade happening, even if its in short supply. This further increases Trade Bonus by +1, increases total sale value of goods by 5%, and decreases the total price by 10%.',
    prod: 12,
    level: 6,
    rewards: {
      trade: 1
    },
    status: 'You have a Night Market, increasing Trade Bonus by +2; Buy at 10% discount; Sell at 5% mark-up',
    gold: 850,
    supplies: 8
  },
  level3: {
    name: 'Auction House',
    desc: "Building an Auction House drastically improves the number of out-of-towners coming in to strike a deal. This futher increases Trade Bonus by +2, increases the total sale value of goods by 10%, and decreases total buy price by 20%. It also unlocks the 'Fire Sale' action, where you decrease each sellable component by 1d6 (roll separately for each). When you do, you gain 150% profit.",
    prod: 21,
    level: 8,
    rewards: {
      trade: 2
    },
    status: "You have an Auction House, increasing Trade Bonus by +4; Buy at 20% discount; Sell at 10% mark-up; 'Firesale' Action",
    gold: 2500,
    supplies: 12
  }
}, {
  name: 'Union',
  id: 'un',
  level: 0,
  status: "You haven't unionized workers yet.",
  level0: {
    name: 'No Unionized Workers',
    desc: 'Having No Unionized Workers is the default settlement configuration.',
    prod: 'N/A',
    level: 'N/A'
  },
  level1: {
    name: 'Unionize Blue Collar Workers',
    desc: 'Unionizing Blue Collar Workers boosts morale for the unskilled laborers in the market, increasing productivity. This increase Productivity Bonus by +1 and reduces repair costs by 1 supply and 1 die.',
    prod: 10,
    level: 3,
    rewards: {
      prod: 1
    },
    status: 'You have Unionized Blue Collar Workers, increasing Productivity Bonus by +1; Repair Supplies cost decreased by 1; Repair Gold cost reduced by 1 die;',
    gold: 175,
    supplies: 6
  },
  level2: {
    name: 'Unionize White Collar Workers',
    desc: 'Unionizing White Collar Workers boosts morale for the tradesmen and artisans in the community, improving overall settlement productivity. This further increases Productivity by +1 and further reduces repair costs by 1 supply and 1 die.',
    prod: 14,
    level: 6,
    rewards: {
      prod: 1
    },
    status: 'You have Unionized White Collar Workers; increasing Productivity Bonus by +2; Repair Supplies cost decreased by 2; Repair Gold cost reduced by 2 die',
    gold: 1000,
    supplies: 7
  },
  level3: {
    name: 'Worker Representation',
    desc: "Funding Worker Representation guarantees workers' needs are heard, understood, and met. A remarkably forward thinking decision to make, it works wonders in motivating the population to work harder. This further increases Productivity Bonus by +2 and further reduces repair costs by 2 supply and 2 die.",
    prod: 18,
    level: 8,
    rewards: {
      prod: 2
    },
    status: 'You have Funded Worker Representation, increasing Productivity Bonus by +4; Repair Supplies cost decreased by 4; Repair Gold cost reduced by 2 die',
    gold: 2750,
    supplies: 12
  }
}, {
  name: 'School',
  id: 'sc',
  level: 0,
  status: "You haven't upgraded the School yet.",
  level0: {
    name: 'Standard School',
    desc: 'Having a Standard School is the fefault settlement configuration.',
    prod: 'N/A',
    level: 'N/A'
  },
  level1: {
    name: 'Expanded Classrooms',
    desc: "Building Expanded Classrooms makes sure more people can receive vital education simultaneously. This increases troop Lore:Warfare by +1, making it easier to issue commands to deployed troops on the battlefield. While this may seem a mior upgrade, it's also required to eventually unlocking Combat Wizards and Battlemages for deployment.",
    prod: 5,
    level: 2,
    rewards: {},
    status: 'You have Expanded Classrooms, increasing Troop Lore: Warfare Bonus by +1',
    gold: 250,
    supplies: 4
  },
  level2: {
    name: 'Basic Magic Curriculum',
    desc: 'Writing a Basic Magic Curriculum ushers in an age of ubiquitous magical representation and application. This further increases troop Lore:Warfare by +1 and unlocks Combat Wizards for deployment.',
    prod: 10,
    level: 6,
    rewards: {},
    status: 'You have a Basic Magic Curriculum, increasing Troop Lore: Warfare Bonus by +2; See Troop Info for unlocks',
    gold: 950,
    supplies: 9,
    'player character with Expert in a spell skill': 1
  },
  level3: {
    name: 'Advanced Magical Theory',
    desc: 'Writing Advanced Magical Theory is a taxing endeavor that calls to it the brightest minds not only in the settlement, but in the nation as a whole. This further increases troop Lore: Warfare by +2 and unlocks Battle Mages for deployment',
    prod: 21,
    level: 10,
    rewards: {},
    status: 'You have Advanced Magical Theory, increasing Troop Lore: Warfare Bonus by +4; See Troop Info for unlocks',
    gold: 2850,
    supplies: 14,
    'player character with Master in a spell skill': 1
  }
}, {
  name: 'Infirmary',
  id: 'in',
  level: 0,
  status: "You haven't built an Infirmary yet.",
  level0: {
    name: 'No Infirmary',
    desc: 'Having No Infirmary is the default settlement configuration.',
    prod: 'N/A',
    level: 'N/A'
  },
  level1: {
    name: 'Sterilization Stations',
    desc: 'Building Sterilization Stations is all one needs to establish a makeshift infirmary, allowing treatment of the sick and injured away from the filth of day-to-day living. This increases Medical Capacity Bonus by +1, increases passive settlement healing by +2, and decreases damage done to settlement health by 10% (minimum -1).',
    prod: 10,
    level: 3,
    rewards: {
      med: 1
    },
    status: 'You have Sterilization Stations, increasing Medical Bonus by +1; Weekly Healing increased by +2; Damage decreased by 10% (min 1)',
    gold: 275,
    'medical capacity': 2
  },
  level2: {
    name: 'Operating Rooms',
    desc: 'Building Operating Rooms allows treatment of criticall ill or injured patients in clean environments to prevent infection and drastically improve prognosis. This further increases Medical Capacity Bonus by +1, further increases passive settlement healing by +2, and decreases damage to settlement health by 20% (minimum -2).',
    prod: 14,
    level: 7,
    rewards: {
      med: 1
    },
    status: 'You have Operating Rooms, increasing Medical Bonus by +2; Weekly Healing increased by + 4; Damage decreased by 20% (min 1)',
    gold: 750,
    'medical capacity': 6
  },
  level3: {
    name: 'Health Education',
    desc: 'Funding Health Education provides baseline education and awareness to the general population. This further increases Medical Capacity by +2, further increases passive settlement healing by 4, and decreases damage to settlement health by 33% (minimum -4).',
    prod: 14,
    level: 11,
    rewards: {
      med: 2
    },
    status: 'You have Health Education, increasing Medical Bonus by +4; Weekly Healing increased by +8; Damage decreased by 33% (min 1)',
    gold: 2900,
    supplies: 15,
    'medical capacity': 11
  }
}, {
  name: 'Commerce Office',
  id: 'co',
  level: 0,
  status: "You haven't built a Commerce Office yet.",
  level0: {
    name: 'No Commerce Office',
    desc: 'Having No Commerice Office is the default settlement configuration.',
    prod: 'N/A',
    level: 'N/A'
  },
  level1: {
    name: 'Census Office',
    desc: 'Building a Census Office allows better tracking of citizens, both old and new. This increases Actual Weekly Taxes by 10% and increases the level of available items by 1.',
    prod: 12,
    level: 1,
    rewards: {},
    status: 'You have a Census Office, increasing Weekly Tax Gain by 10%; Available Item Level increased by +1',
    gold: 225,
    supplies: 2
  },
  level2: {
    name: 'Internal Revenue Office',
    desc: 'Building an Internal Revenue Office allows better tracking of taxation for import and export trade. This increases Actual Weekly Taxes by 15% and increases the level of available items by 2 total.',
    prod: 14,
    level: 5,
    rewards: {},
    status: 'You have an Internal Revenue Office, increasing Weekly Tax Gain by 15%; Available Item Level increased by +2',
    gold: 875,
    supplies: 6
  },
  level3: {
    name: 'Economic Office',
    desc: 'Building an Economic Office enables realtime analysis of how and where gold is moving, both in the local market and the region. This increases Actual Weekly Taxes by 25% total and increases the level of available items by 4.',
    prod: 16,
    level: 9,
    rewards: {},
    status: 'You have an Economic Office, increasing Weekly Tax Gain by 25%; Available Item Level increase by +4',
    gold: 2700,
    supplies: 18
  }
}];
function setBuildings(data) {
  buildings = data;
}


/***/ }),

/***/ "./src/compileEvent.js":
/*!*****************************!*\
  !*** ./src/compileEvent.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   calcCost: () => (/* binding */ calcCost),
/* harmony export */   calcPain: () => (/* binding */ calcPain),
/* harmony export */   compileEvent: () => (/* binding */ compileEvent),
/* harmony export */   count: () => (/* binding */ count),
/* harmony export */   countUp: () => (/* binding */ countUp),
/* harmony export */   setCount: () => (/* binding */ setCount)
/* harmony export */ });
/* harmony import */ var _economyStats__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./economyStats */ "./src/economyStats.js");
/* harmony import */ var _projectBoxRender__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./projectBoxRender */ "./src/projectBoxRender.js");
/* harmony import */ var _safetyStats__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./safetyStats */ "./src/safetyStats.js");
/* harmony import */ var _settlementStats__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./settlementStats */ "./src/settlementStats.js");
/* harmony import */ var _survivalStats__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./survivalStats */ "./src/survivalStats.js");
/* harmony import */ var _weekLog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./weekLog */ "./src/weekLog.js");






let count = 0;
function setCount(data) {
  count = data;
}
function compileEvent(parent) {
  let proj = {};
  let compVals = [];
  let compItems = [];
  let impactVals = [];
  let impactItems = [];
  let compValElements = document.querySelectorAll(".eventCompVal");
  compValElements.forEach(item => {
    compVals.push(item.value);
  });
  let compItemElements = document.querySelectorAll(".eventCompItem");
  compItemElements.forEach(item => {
    compItems.push(item.value);
  });
  let impactValElements = document.querySelectorAll(".eventImpactVal");
  impactValElements.forEach(item => {
    impactVals.push(item.value);
  });
  let impactItemElements = document.querySelectorAll(".eventImpactItem");
  impactItemElements.forEach(item => {
    impactItems.push(item.value);
  });
  proj.duration = document.querySelector("#eventTimeVal").value;
  proj.totalDuration = document.querySelector("#eventTimeVal").value;
  proj.name = document.querySelector("#eventName").value;
  proj.type = document.querySelector("#eventType").value;
  if (proj.type == "Active-Fix") {
    proj.parent = _projectBoxRender__WEBPACK_IMPORTED_MODULE_1__.projectArray[parent].count;
    _projectBoxRender__WEBPACK_IMPORTED_MODULE_1__.projectArray[parent].hasLink = true;
  }
  proj.details = document.querySelector("#eventDetails").value;
  proj.count = count;
  proj.start = _settlementStats__WEBPACK_IMPORTED_MODULE_3__.settlement.weeksPassed;
  proj.end = -1;
  proj.workers = 0;
  proj.impactItems = impactItems;
  proj.impactVals = impactVals;
  proj.costItems = compItems;
  proj.costVals = compVals;
  proj.hide = true;
  for (let i = 0; i < impactItems.length; i++) {
    let item = impactItems[i];
    let num = impactVals[i];
    let namer = "comp" + i;
    let number = "cost" + i;
    proj[namer] = item;
    proj[number] = num;
  }
  if (proj.type == "Indefinite") {
    proj.hasLink = false;
    proj.duration = 99999;
  }
  for (let i = 0; i < proj.impactItems.length; i++) {
    calcPain(proj.impactVals[i], proj.impactItems[i]);
  }
  for (let i = 0; i < proj.costItems.length; i++) {
    calcCost(proj.costVals[i], proj.costItems[i]);
  }
  if (proj.type == "Active" || proj.type == "Passive" || proj.type == "Indefinite") {
    _projectBoxRender__WEBPACK_IMPORTED_MODULE_1__.projectArray.push(proj);
  } else if (proj.type == "Active-Fix") {
    _projectBoxRender__WEBPACK_IMPORTED_MODULE_1__.projectArray.splice(parent + 1, 0, proj);
  }
  countUp();
  _weekLog__WEBPACK_IMPORTED_MODULE_5__.changeLog.eventStart.push(proj);
  if (proj.type == "Immediate") {
    _weekLog__WEBPACK_IMPORTED_MODULE_5__.changeLog.eventEnd.push(proj);
  }
}
function countUp() {
  count++;
}
function calcCost(i, item) {
  if (i == 0 || item == "none" || item == undefined) {
    return;
  }
  switch (item) {
    case "food":
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_4__.foodCurrent)(i);
      break;
    case "supplies":
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_4__.supCurrent)(i);
      break;
    case "medical capacity":
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_4__.medCurrent)(i);
      break;
    case "defensive infrastructure":
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_2__.diCurrent)(i);
      break;
    case "intelligence":
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_2__.intelCurrent)(i);
      break;
    case "garrison":
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_2__.garCurrent)(i);
      break;
    case "trade":
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.tradeCurrent)(i);
      break;
    case "productivity":
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.prodCurrent)(i);
      break;
    case "gold":
      (0,_settlementStats__WEBPACK_IMPORTED_MODULE_3__.vaultAdd)(i);
      break;
    case "health":
      (0,_settlementStats__WEBPACK_IMPORTED_MODULE_3__.health)(i);
      break;
    default:
      break;
  }
}
function calcPain(i, item) {
  if (i == 0 || item == "none" || item == undefined) {
    return;
  }
  switch (item) {
    case "food bonus":
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_4__.foodBonus)(i);
      break;
    case "supplies bonus":
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_4__.supBonus)(i);
      break;
    case "medical capacity bonus":
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_4__.medBonus)(i);
      break;
    case "defensive infrastructure bonus":
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_2__.diBonus)(i);
      break;
    case "intelligence bonus":
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_2__.intelBonus)(i);
      break;
    case "garrison bonus":
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_2__.garBonus)(i);
      break;
    case "trade bonus":
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.tradeBonus)(i);
      break;
    case "productivity bonus":
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.prodBonus)(i);
      break;
    case "survival bonus":
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_4__.survivalBonus)(i);
      break;
    case "safety bonus":
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_2__.safetyBonus)(i);
      break;
    case "economy bonus":
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.economyBonus)(i);
      break;
    case "maximum health":
      (0,_settlementStats__WEBPACK_IMPORTED_MODULE_3__.maxHealth)(i);
      (0,_settlementStats__WEBPACK_IMPORTED_MODULE_3__.health)(i);
      break;
    case "level":
      (0,_settlementStats__WEBPACK_IMPORTED_MODULE_3__.levelUp)(i);
      break;
    case "settlement points":
      (0,_settlementStats__WEBPACK_IMPORTED_MODULE_3__.settlementPoints)(i);
      break;
    default:
      break;
  }
}


/***/ }),

/***/ "./src/economyStats.js":
/*!*****************************!*\
  !*** ./src/economyStats.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   actualTaxes: () => (/* binding */ actualTaxes),
/* harmony export */   commonItem: () => (/* binding */ commonItem),
/* harmony export */   econActions: () => (/* binding */ econActions),
/* harmony export */   economy: () => (/* binding */ economy),
/* harmony export */   economyBonus: () => (/* binding */ economyBonus),
/* harmony export */   economyRating: () => (/* binding */ economyRating),
/* harmony export */   prodBonus: () => (/* binding */ prodBonus),
/* harmony export */   prodBox: () => (/* binding */ prodBox),
/* harmony export */   prodCurrent: () => (/* binding */ prodCurrent),
/* harmony export */   prodMax: () => (/* binding */ prodMax),
/* harmony export */   setEconomy: () => (/* binding */ setEconomy),
/* harmony export */   showEconAction: () => (/* binding */ showEconAction),
/* harmony export */   tradeBonus: () => (/* binding */ tradeBonus),
/* harmony export */   tradeBox: () => (/* binding */ tradeBox),
/* harmony export */   tradeCurrent: () => (/* binding */ tradeCurrent),
/* harmony export */   tradeMax: () => (/* binding */ tradeMax),
/* harmony export */   tradeModifier: () => (/* binding */ tradeModifier),
/* harmony export */   uncommonItem: () => (/* binding */ uncommonItem)
/* harmony export */ });
/* harmony import */ var _settlementStats__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./settlementStats */ "./src/settlementStats.js");
/* harmony import */ var _safetyStats__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./safetyStats */ "./src/safetyStats.js");
/* harmony import */ var _survivalStats__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./survivalStats */ "./src/survivalStats.js");
/* harmony import */ var _weekLog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./weekLog */ "./src/weekLog.js");
/* harmony import */ var _projectBoxRender__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./projectBoxRender */ "./src/projectBoxRender.js");
/* harmony import */ var _renderActionsArea__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./renderActionsArea */ "./src/renderActionsArea.js");
/* harmony import */ var _buildingsStats__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./buildingsStats */ "./src/buildingsStats.js");
/* harmony import */ var _pageRenders__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./pageRenders */ "./src/pageRenders.js");








let economy = {
  Base: 0,
  Adjusted: 0,
  Rating: 0,
  status: "",
  Bonus: 0,
  tradeB: 0,
  tradeC: 6,
  tradeM: 0,
  prodB: 0,
  prodC: 4,
  prodM: 0,
  taxInc: 0,
  taxDec: 0
};
function setEconomy(data) {
  economy = data;
}
function economyRating() {
  let a = 0;
  let b = 0;
  if (economy.tradeC > economy.tradeM) {
    a = economy.tradeM;
  } else a = economy.tradeC;
  if (economy.prodC > economy.prodM) {
    b = economy.prodM;
  } else b = economy.prodC;
  economy.Base = ((a + b) / _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.level * (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.currentHealth / (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.maxHealthBase + _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.maxHealthBonus))).toFixed(1);
  switch (_safetyStats__WEBPACK_IMPORTED_MODULE_1__.safety.Rating) {
    case "Dangerous":
      economy.Adjusted = (economy.Base * 0.2).toFixed(1);
      break;
    case "Lawless":
      economy.Adjusted = (economy.Base * 0.5).toFixed(1);
    case "Unsafe":
      economy.Adjusted = (economy.Base * 0.9).toFixed(1);
    case "Safe":
      economy.Adjusted = (economy.Base * 1).toFixed(1);
    case "Guarded":
      economy.Adjusted = (economy.Base * 1.05).toFixed(1);
    case "Protected":
      economy.Adjusted = (economy.Base * 1.1).toFixed(1);
    case "Impregnable":
      economy.Adjusted = (economy.Base * 1.2).toFixed(1);
  }
  let tax = 0;
  if (economy.taxInc == 0 && economy.taxDec == 0) {
    tax = economy.Adjusted;
  } else {
    if (economy.taxInc > 0 && economy.taxInc <= 25) {
      tax = (economy.Adjusted - economy.taxInc / 25).toFixed(1);
    } else if (economy.taxInc > 25 && economy.taxInc <= 50) {
      tax = (economy.Adjusted - economy.taxInc / 12.25).toFixed(1);
    } else if (economy.taxInc > 50) {
      tax = (economy.Adjusted - economy.taxInc / 6.125).toFixed(1);
    }
    if (economy.taxDec > 0 && economy.taxDec <= 50) {
      tax = (economy.Adjusted - -economy.taxDec / 33).toFixed(1);
    } else if (economy.taxDec > 50) {
      tax = (economy.Adjusted - -economy.taxDec / 22).toFixed(1);
    }
  }
  economy.Adjusted = tax;
  if (economy.Adjusted <= 1) {
    economy.Rating = "Struggling";
    economy.status = "(Available Item Level -2; No Tax Revenue)";
  } else if (economy.Adjusted > 1 && economy.Adjusted <= 2) {
    economy.Rating = "Fragile";
    economy.status = "(Available Item Level -1; Tax Revenue -66%)";
  } else if (economy.Adjusted > 2 && economy.Adjusted <= 3) {
    economy.Rating = "Stagnant";
    economy.status = "(Available Item Level +0; Tax Revenue -33%)";
  } else if (economy.Adjusted > 3 && economy.Adjusted <= 4) {
    economy.Rating = "Growing";
    economy.status = "(Available Item Level +0; Tax Revenue +0%)";
  } else if (economy.Adjusted > 4 && economy.Adjusted <= 5) {
    economy.Rating = "Prosperous";
    economy.status = "(Available Item Level +1; Tax Revenue +5%)";
  } else if (economy.Adjusted > 5 && economy.Adjusted < 6.5) {
    economy.Rating = "Thriving";
    economy.status = "(Available Item Level +1; Tax Revenue +10%)";
  } else if (economy.Adjusted >= 6.5) {
    economy.Rating = "Golden Era";
    economy.status = "(Available Item Level +2; Tax Revenue +20%)";
  }
  return economy.Rating;
}
function economyBonus(i) {
  economy.Bonus += parseInt(i);
  _weekLog__WEBPACK_IMPORTED_MODULE_3__.changeLog.economy += parseInt(i);
  tradeCurrent(i);
  prodCurrent(i);
  tradeMax();
  prodMax();
}
function tradeBonus(i) {
  economy.tradeB += parseInt(i);
  _weekLog__WEBPACK_IMPORTED_MODULE_3__.changeLog.tradeB += parseInt(i);
  tradeCurrent(i);
  tradeMax();
}
function tradeCurrent(i) {
  economy.tradeC += parseInt(i);
  _weekLog__WEBPACK_IMPORTED_MODULE_3__.changeLog.trade += parseInt(i);
}
function tradeMax() {
  economy.tradeM = _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.level * 5 + economy.Bonus + economy.tradeB;
}
function prodBonus(i) {
  economy.prodB += parseInt(i);
  _weekLog__WEBPACK_IMPORTED_MODULE_3__.changeLog.prodB += parseInt(i);
  prodCurrent(i);
  prodMax();
}
function prodCurrent(i) {
  economy.prodC += parseInt(i);
  _weekLog__WEBPACK_IMPORTED_MODULE_3__.changeLog.prod += parseInt(i);
  (0,_projectBoxRender__WEBPACK_IMPORTED_MODULE_4__.distCalcWorkers)();
}
function prodMax() {
  economy.prodM = _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.level * 2 + economy.Bonus + economy.prodB;
}
function actualTaxes() {
  let i = (0,_settlementStats__WEBPACK_IMPORTED_MODULE_0__.baseTaxes)();
  if (economy.taxDec > 0) {
    i = (i * (1 - economy.taxDec / 100)).toFixed(0);
  } else if (economy.taxInc > 0) {
    i = (i * (1 + economy.taxInc / 100)).toFixed(0);
  } else if (economy.taxDec == 0 && _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.taxInc == 0) {}
  switch (economy.Rating) {
    case "Struggling":
      i = (i * 0.125).toFixed(0);
      break;
    case "Fragile":
      i = (i * 0.334).toFixed(0);
      break;
    case "Stagnant":
      i = (i * 0.667).toFixed(0);
      break;
    case "Growing":
    case "Prosperous":
      i = (i * 1).toFixed(0);
      break;
    case "Thriving":
      i = (i * 1.1).toFixed(0);
      break;
    case "Golden Era":
      i = (i * 1.2).toFixed(0);
      break;
  }
  return i;
}
function commonItem() {
  let lvl = _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.level;
  switch (_buildingsStats__WEBPACK_IMPORTED_MODULE_6__.buildings[9].level) {
    case 0:
    case 0.5:
      break;
    case 1:
    case 1.5:
      lvl += 1;
      break;
    case 2:
    case 2.5:
      lvl += 2;
      break;
    case 3:
      lvl += 4;
      break;
    default:
      break;
  }
  switch (economy.Rating) {
    case "Struggling":
      lvl -= 2;
      break;
    case "Fragile":
      lvl -= 1;
      break;
    case "Stagnant":
    case "Growing":
      break;
    case "Prosperous":
    case "Thriving":
      lvl += 1;
      break;
    case "Golden Era":
      lvl += 2;
      break;
  }
  return lvl;
}
function uncommonItem() {
  let lvl = _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.level - 2;
  switch (_buildingsStats__WEBPACK_IMPORTED_MODULE_6__.buildings[9].level) {
    case 0:
    case 0.5:
      break;
    case 1:
    case 1.5:
      lvl += 1;
      break;
    case 2:
    case 2.5:
      lvl += 2;
      break;
    case 3:
      lvl += 4;
      break;
    default:
      break;
  }
  switch (economy.Rating) {
    case "Struggling":
      lvl -= 2;
      break;
    case "Fragile":
      lvl -= 1;
      break;
    case "Stagnant":
    case "Growing":
      break;
    case "Prosperous":
    case "Thriving":
      lvl += 1;
      break;
    case "Golden Era":
      lvl += 2;
      break;
  }
  return lvl;
}
function tradeModifier() {
  let i = 0;
  switch (_safetyStats__WEBPACK_IMPORTED_MODULE_1__.safety.Rating) {
    case "Dangerous":
      i = -3;
      break;
    case "Lawless":
      i = -2;
      break;
    case "Unsafe":
      i = -1;
      break;
    case "Safe":
    case "Guarded":
      i = 0;
      break;
    case "Protected":
      i = 1;
      break;
    case "Impregnable":
      i = 3;
      break;
  }
  return i;
}
function tradeBox() {
  let wrapper = document.querySelector("#tradeBox");
  wrapper.innerHTML = "";
  let label = document.createElement("div");
  label.textContent = "Trade";
  label.classList.add("flexRow", "center", "gap");
  wrapper.appendChild(label);
  let valRow = document.createElement("div");
  valRow.classList.add("flexRow");
  let value = document.createElement("div");
  value.textContent = economy.tradeC;
  value.style = "text-align: center; font-size: 22px";
  valRow.appendChild(value);
  let max = document.createElement("div");
  tradeMax();
  max.textContent = "/" + " " + economy.tradeM;
  max.style = "font-size: 16px; align-self: end;";
  max.classList.add("text-center");
  valRow.appendChild(max);
  let spBuy = document.createElement("button");
  spBuy.classList.add("tooltip");
  spBuy.textContent = "+";
  spBuy.style = "border-radius: 50%; font-size: 12px; align-self: end; margin-left: 4px";
  spBuy.addEventListener("click", () => {
    if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "" || _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "Fortified") {
      if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.settlementPoints > 1) {
        (0,_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlementPoints)(-2);
        tradeCurrent(1);
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_7__.renderAll)();
      }
    } else if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "Survivalist") {
      if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.settlementPoints > 2) {
        (0,_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlementPoints)(-3);
        tradeCurrent(1);
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_7__.renderAll)();
      }
    } else if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "Mercantile") {
      if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.settlementPoints > 0) {
        (0,_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlementPoints)(-1);
        tradeCurrent(1);
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_7__.renderAll)();
      }
    }
  });
  let toolTip = document.createElement("span");
  if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "" || _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "Fortified") {
    toolTip.textContent = "Spend 2 Settlement Points to gain 1 Trade";
  } else if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "Survivalist") {
    toolTip.textContent = "Spend 3 Settlement Points to gain 1 Trade";
  } else if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "Mercantile") {
    toolTip.textContent = "Spend 1 Settlement Point to gain 1 Trade";
  }
  toolTip.classList.add("tooltiptext");
  spBuy.appendChild(toolTip);
  valRow.appendChild(spBuy);
  wrapper.appendChild(valRow);
  let bonus = document.createElement("span");
  let i = "";
  if (economy.tradeB >= 0) {
    i = "+";
  } else {
    i = "-";
  }
  bonus.textContent = " " + i + economy.tradeB;
  bonus.style = "font-size: 14px";
  bonus.classList.add("text-center");
  label.appendChild(bonus);
}
function prodBox() {
  let wrapper = document.querySelector("#prodBox");
  wrapper.innerHTML = "";
  let label = document.createElement("div");
  label.textContent = "Productivity";
  label.classList.add("flexRow", "center", "gap");
  wrapper.appendChild(label);
  let valRow = document.createElement("div");
  valRow.classList.add("flexRow");
  let value = document.createElement("div");
  value.textContent = economy.prodC;
  value.style = "text-align: center; font-size: 22px";
  valRow.appendChild(value);
  let max = document.createElement("div");
  prodMax();
  max.textContent = "/" + " " + economy.prodM;
  max.style = "font-size: 16px; align-self: end;";
  max.classList.add("text-center");
  valRow.appendChild(max);
  let spBuy = document.createElement("button");
  spBuy.classList.add("tooltip");
  spBuy.textContent = "+";
  spBuy.style = "border-radius: 50%; font-size: 12px; align-self: end; margin-left: 4px";
  spBuy.addEventListener("click", () => {
    if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type != "Survivalist") {
      if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.settlementPoints > 1) {
        (0,_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlementPoints)(-2);
        prodCurrent(1);
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_7__.renderAll)();
      }
    } else {
      if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.settlementPoints > 2) {
        (0,_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlementPoints)(-3);
        prodCurrent(1);
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_7__.renderAll)();
      }
    }
  });
  let toolTip = document.createElement("span");
  if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type != "Survivalist") {
    toolTip.textContent = "Spend 2 Settlement Points to gain 1 Productivity";
  } else {
    toolTip.textContent = "Spend 3 Settlement Points to gain 1 Productivity";
  }
  toolTip.classList.add("tooltiptext");
  spBuy.appendChild(toolTip);
  valRow.appendChild(spBuy);
  wrapper.appendChild(valRow);
  let bonus = document.createElement("span");
  let i = "";
  if (economy.prodB >= 0) {
    i = "+";
  } else {
    i = "-";
  }
  bonus.textContent = " " + i + economy.prodB;
  bonus.style = "font-size: 14px";
  bonus.classList.add("text-center");
  label.appendChild(bonus);
}
let econActions = [{
  name: "Befriend Settlements",
  id: "befriend",
  type: "trade",
  description: "A party member can attempt a Diplomacy check with a nearby settlement, encouraging visits from one another and boosting Trade."
}, {
  name: "Establish Trade Routes",
  id: "tradeRoute",
  type: "trade",
  description: "A party member can attempt a Society or Survival check to talk with travelling merchants and nearby settlements to establish trade routes and deals. This can be accomplished for any number of settlements, and is required to temporarily unlock items of higher quality for sale within the settlement."
}, {
  name: "Entertain the Locals",
  id: "entertain",
  type: "productivity",
  description: "A party member can make a Performance check to entertain locals and visitors. This can only be performed once per Settlement Management turn."
}, {
  name: "Improve Tools",
  id: "scoutArea",
  type: "productivity",
  description: "A party member can attempt a Crafting or Survival check to improve the quality of tools the settlement workers use. This costs 5gp +2 for every proficiency rank in the skill used multiplied by the Settlement Level per use."
}];
function showEconAction(item) {
  let wrapper = document.querySelector("#setStatus");
  wrapper.innerHTML = "";
  let header = document.createElement("div");
  header.style = "display: flex; justify-content: center; width: 100%; padding: 1rem; background: rgba(200,200,230,.5); border-radius: .5rem .5rem 0 0; box-sizing: border-box";
  let spacer = document.createElement("div");
  spacer.innerHTML = "&nbsp;";
  spacer.style = "width: 25%;";
  header.appendChild(spacer);
  let title = document.createElement("div");
  title.textContent = item.name;
  title.style = "display: flex; justify-content: center; align-items: center; width: 50%";
  header.appendChild(title);
  let backBox = document.createElement("div");
  backBox.style = "width: 25%; display: flex; justify-content: center; align-items: center;";
  let backBtn = document.createElement("button");
  backBtn.textContent = "Back";
  backBtn.style = "border-radius: 1rem;";
  backBtn.addEventListener("click", () => {
    (0,_renderActionsArea__WEBPACK_IMPORTED_MODULE_5__["default"])();
  });
  backBox.appendChild(backBtn);
  header.appendChild(backBox);
  wrapper.appendChild(header);
  let content = document.createElement("div");
  content.style = "font-size: 16px; padding: 1rem";
  content.textContent = item.description;
  wrapper.appendChild(content);
}


/***/ }),

/***/ "./src/endEvents.js":
/*!**************************!*\
  !*** ./src/endEvents.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ endEvent)
/* harmony export */ });
/* harmony import */ var _buildingsStats__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./buildingsStats */ "./src/buildingsStats.js");
/* harmony import */ var _economyStats__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./economyStats */ "./src/economyStats.js");
/* harmony import */ var _pageRenders__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pageRenders */ "./src/pageRenders.js");
/* harmony import */ var _projectBoxRender__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./projectBoxRender */ "./src/projectBoxRender.js");
/* harmony import */ var _renderProjects__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./renderProjects */ "./src/renderProjects.js");
/* harmony import */ var _safetyStats__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./safetyStats */ "./src/safetyStats.js");
/* harmony import */ var _settlementStats__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./settlementStats */ "./src/settlementStats.js");
/* harmony import */ var _survivalStats__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./survivalStats */ "./src/survivalStats.js");
/* harmony import */ var _weekLog__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./weekLog */ "./src/weekLog.js");









function endEvent(proj) {
  switch (proj.type) {
    case "Active":
      endActive(proj);
      break;
    case "Passive":
      endPassive(proj);
      break;
    case "Indefinite":
      endIndefinite(proj);
      break;
    case "building":
      endBldg(proj);
      break;
    case "Active-Fix":
      endActiveFix(proj);
  }
  proj.end = _settlementStats__WEBPACK_IMPORTED_MODULE_6__.settlement.weeksPassed;
  _weekLog__WEBPACK_IMPORTED_MODULE_8__.changeLog.eventEnd.push(proj);
  if (document.querySelector("#projectBox") != undefined) {
    (0,_renderProjects__WEBPACK_IMPORTED_MODULE_4__["default"])();
  }
}
function endActive(proj) {
  let items = proj.impactItems;
  let vals = proj.impactVals;
  for (let i = 0; i < items.length; i++) {
    fixLoss(items[i], vals[i]);
  }
  (0,_projectBoxRender__WEBPACK_IMPORTED_MODULE_3__.aWMinus)(proj.workers);
}
function endActiveFix(proj) {
  let items = proj.impactItems;
  let vals = proj.impactVals;
  for (let i = 0; i < items.length; i++) {
    fixLoss(items[i], vals[i]);
  }
  (0,_projectBoxRender__WEBPACK_IMPORTED_MODULE_3__.aWMinus)(proj.workers);
  let parent = _projectBoxRender__WEBPACK_IMPORTED_MODULE_3__.projectArray.findIndex(p => p.count == proj.parent);
  _projectBoxRender__WEBPACK_IMPORTED_MODULE_3__.projectArray[parent].duration = 0;
  endEvent(_projectBoxRender__WEBPACK_IMPORTED_MODULE_3__.projectArray[parent]);
}
function endPassive(proj) {
  let items = proj.impactItems;
  let vals = proj.impactVals;
  for (let i = 0; i < items.length; i++) {
    fixPassiveLoss(items[i], vals[i]);
  }
}
function endIndefinite(proj) {
  let items = proj.impactItems;
  let vals = proj.impactVals;
  for (let i = 0; i < items.length; i++) {
    fixPassiveLoss(items[i], vals[i]);
  }
}
function endBldg(proj) {
  let bldg = _buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings.findIndex(e => e.id == proj.id);
  _buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[bldg].level += 0.5;
  let funcs = [];
  let vals = [];
  switch (_buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[bldg].level) {
    case 1:
      funcs = Object.keys(_buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[bldg].level1.rewards);
      vals = Object.values(_buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[bldg].level1.rewards);
      for (let i = 0; i < funcs.length; i++) {
        bldgBonus(funcs[i], vals[i]);
      }
      _buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[bldg].status = _buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[bldg].level1.status;
      break;
    case 2:
      funcs = Object.keys(_buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[bldg].level2.rewards);
      vals = Object.values(_buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[bldg].level2.rewards);
      for (let i = 0; i < funcs.length; i++) {
        bldgBonus(funcs[i], vals[i]);
      }
      _buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[bldg].status = _buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[bldg].level2.status;
      break;
    case 3:
      funcs = Object.keys(_buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[bldg].level3.rewards);
      vals = Object.values(_buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[bldg].level3.rewards);
      for (let i = 0; i < funcs.length; i++) {
        bldgBonus(funcs[i], vals[i]);
      }
      _buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[bldg].status = _buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[bldg].level3.status;
      break;
  }
  (0,_projectBoxRender__WEBPACK_IMPORTED_MODULE_3__.aWMinus)(proj.workers);
}
function fixPassiveLoss(item, val) {
  switch (item) {
    case "survival bonus":
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_7__.survivalBonus)(-val);
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_7__.foodCurrent)(val);
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_7__.supCurrent)(val);
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_7__.medCurrent)(val);
      break;
    case "food bonus":
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_7__.foodBonus)(-val);
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_7__.foodCurrent)(val);
      break;
    case "supplies bonus":
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_7__.supBonus)(-val);
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_7__.supCurrent)(val);
      break;
    case "medical capacity bonus":
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_7__.medBonus)(-val);
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_7__.medCurrent)(val);
      break;
    case "safety bonus":
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_5__.safetyBonus)(-val);
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_5__.diCurrent)(val);
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_5__.intelCurrent)(val);
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_5__.garCurrent)(val);
      break;
    case "defensive infrastructure bonus":
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_5__.diBonus)(-val);
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_5__.diCurrent)(val);
      break;
    case "intelligence bonus":
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_5__.intelBonus)(-val);
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_5__.intelCurrent)(val);
      break;
    case "garrison bonus":
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_5__.garBonus)(-val);
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_5__.garCurrent)(val);
      break;
    case "economy bonus":
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_1__.economyBonus)(-val);
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_1__.tradeCurrent)(val);
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_1__.prodCurrent)(val);
      break;
    case "trade bonus":
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_1__.tradeBonus)(-val);
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_1__.tradeCurrent)(val);
      break;
    case "productivity bonus":
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_1__.prodBonus)(-val);
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_1__.prodCurrent)(val);
      break;
    case "maximum health":
      (0,_settlementStats__WEBPACK_IMPORTED_MODULE_6__.maxHealth)(-val);
      (0,_settlementStats__WEBPACK_IMPORTED_MODULE_6__.health)(-val);
      break;
    case "level":
      (0,_settlementStats__WEBPACK_IMPORTED_MODULE_6__.levelUp)(-val);
      break;
    case "settlement points":
      (0,_settlementStats__WEBPACK_IMPORTED_MODULE_6__.settlementPoints)(-val);
      break;
  }
}
function bldgBonus(item, val) {
  switch (item) {
    case "survival":
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_7__.survivalBonus)(val);
      break;
    case "food":
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_7__.foodBonus)(val);
      break;
    case "sup":
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_7__.supBonus)(val);
      break;
    case "med":
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_7__.medBonus)(val);
      break;
    case "safety":
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_5__.safetyBonus)(val);
      break;
    case "di":
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_5__.diBonus)(val);
      break;
    case "intel":
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_5__.intelBonus)(val);
      break;
    case "gar":
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_5__.garBonus)(val);
      break;
    case "economy":
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_1__.economyBonus)(val);
      break;
    case "trade":
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_1__.tradeBonus)(val);
      break;
    case "prod":
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_1__.prodBonus)(val);
      break;
    case "maxHealth":
      (0,_settlementStats__WEBPACK_IMPORTED_MODULE_6__.maxHealth)(val);
      (0,_settlementStats__WEBPACK_IMPORTED_MODULE_6__.health)(val);
      break;
  }
  (0,_pageRenders__WEBPACK_IMPORTED_MODULE_2__.renderAll)();
}
function fixLoss(item, val) {
  switch (item) {
    case "survival bonus":
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_7__.survivalBonus)(-val);
      break;
    case "food bonus":
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_7__.foodBonus)(-val);
      break;
    case "supplies bonus":
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_7__.supBonus)(-val);
      break;
    case "medical capacity bonus":
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_7__.medBonus)(-val);
      break;
    case "safety bonus":
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_5__.safetyBonus)(-val);
      break;
    case "defensive infrastructure bonus":
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_5__.diBonus)(-val);
      break;
    case "intelligence bonus":
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_5__.intelBonus)(-val);
      break;
    case "garrison bonus":
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_5__.garBonus)(-val);
      break;
    case "economy bonus":
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_1__.economyBonus)(-val);
      break;
    case "trade bonus":
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_1__.tradeBonus)(-val);
      break;
    case "productivity bonus":
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_1__.prodBonus)(-val);
      break;
    case "maximum health":
      (0,_settlementStats__WEBPACK_IMPORTED_MODULE_6__.maxHealth)(-val);
      break;
    case "level":
      (0,_settlementStats__WEBPACK_IMPORTED_MODULE_6__.levelUp)(-val);
      break;
    case "settlement points":
      (0,_settlementStats__WEBPACK_IMPORTED_MODULE_6__.settlementPoints)(-val);
      break;
  }
}

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./style.css */ "./src/style.css");
/* harmony import */ var _pageRenders__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pageRenders */ "./src/pageRenders.js");
/* harmony import */ var _storage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./storage */ "./src/storage.js");




/// localStorage.clear()
(0,_storage__WEBPACK_IMPORTED_MODULE_2__.checkStorage)();
(0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.refreshPage)();
window.addEventListener("beforeunload", _storage__WEBPACK_IMPORTED_MODULE_2__.setStorage);
///

/***/ }),

/***/ "./src/newEvent.js":
/*!*************************!*\
  !*** ./src/newEvent.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ newEvent)
/* harmony export */ });
/* harmony import */ var _compileEvent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compileEvent */ "./src/compileEvent.js");
/* harmony import */ var _pageRenders__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pageRenders */ "./src/pageRenders.js");
/* harmony import */ var _projectBoxRender__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./projectBoxRender */ "./src/projectBoxRender.js");
/* harmony import */ var _renderProjects__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./renderProjects */ "./src/renderProjects.js");
/* harmony import */ var _taxRender__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./taxRender */ "./src/taxRender.js");





let costCount = 0;
let impactCount = 0;
function newEvent() {
  let wrapper = document.querySelector("#contentArea");
  wrapper.innerHTML = "";
  wrapper.style = "box-sizing: border-box; width: 100%; height: 100%;";
  let header = document.createElement("div");
  header.textContent = "New Event";
  header.classList.add("subHeader");
  wrapper.appendChild(header);
  let nBB = document.createElement("div");
  nBB.style = "height: 12.5%; width: 50%; display: flex; justify-content: center; align-items: center;";
  let nameBox = document.createElement("div");
  nameBox.classList.add("flexRow", "gap");
  nameBox.style = "height: 12.5%; width: 85%; margin-left: 4rem";
  let nameLabel = document.createElement("div");
  nameLabel.style = "font-size: 20px; width: 11%";
  nameLabel.textContent = "Name:";
  nameBox.appendChild(nameLabel);
  let nameEntry = document.createElement("input");
  nameEntry.type = "text";
  nameEntry.placeholder = "Event Name";
  nameEntry.style = "width: 72.5%; margin-left: .5rem; font-size: 20px;";
  nameEntry.id = "eventName";
  nameBox.appendChild(nameEntry);
  nBB.appendChild(nameBox);
  wrapper.appendChild(nBB);
  let secondRow = document.createElement("div");
  secondRow.classList.add("flexRow", "gap");
  secondRow.style = "height: 12.5%";
  let bigTypeBox = document.createElement("div");
  bigTypeBox.style = "width: 50%; display: flex; justify-content: center; align-items: center;";
  let typeBox2 = document.createElement("div");
  typeBox2.classList.add("flexRow", "gap");
  typeBox2.style = "width: 85%; margin-left: 4rem";
  let typeHeader = document.createElement("div");
  typeHeader.style = "font-size: 20px; width: 11%";
  typeHeader.textContent = "Type:";
  typeBox2.appendChild(typeHeader);
  let typeBox = document.createElement("div");
  typeBox.style = "margin-left: .5rem; width: 75%";
  let typeSelect = document.createElement("select");
  typeSelect.style = "font-size: 20px; width: 98.75%";
  typeSelect.id = "eventType";
  let immediate = document.createElement("option");
  immediate.value = "Immediate";
  immediate.textContent = "Immediate";
  typeSelect.appendChild(immediate);
  let active = document.createElement("option");
  active.value = "Active";
  active.textContent = "Active";
  typeSelect.appendChild(active);
  let passive = document.createElement("option");
  passive.value = "Passive";
  passive.textContent = "Passive";
  typeSelect.appendChild(passive);
  let indefinite = document.createElement("option");
  indefinite.value = "Indefinite";
  indefinite.textContent = "Indefinite";
  typeSelect.appendChild(indefinite);
  typeBox.appendChild(typeSelect);
  typeBox2.appendChild(typeBox);
  bigTypeBox.appendChild(typeBox2);
  secondRow.appendChild(bigTypeBox);
  let bigTimeBox = document.createElement("div");
  bigTimeBox.classList.add("flexRow", "gap", "newEventHalfRow2");
  let timeBox = document.createElement("div");
  timeBox.style = "display: none";
  let timeValBox = document.createElement("div");
  timeValBox.style = "display: none";
  let timeVal = document.createElement("input");
  timeVal.type = "number";
  timeVal.style = "width: 60%; font-size: 20px; justify-self: start; text-align: center";
  timeVal.id = "eventTimeVal";
  timeValBox.appendChild(timeVal);
  bigTimeBox.appendChild(timeBox);
  bigTimeBox.appendChild(timeValBox);
  secondRow.appendChild(bigTimeBox);
  wrapper.appendChild(secondRow);
  let contentBox = document.createElement("div");
  contentBox.style.height = "33.25%";
  contentBox.style.background = "aliceblue";
  contentBox.style.display = "flex";
  let leftBox = document.createElement("div");
  leftBox.style = "width: 50%;";
  leftBox.id = "leftBox";
  let componentHeader = document.createElement("div");
  componentHeader.textContent = "Event Costs";
  componentHeader.style = "display: flex; justify-content: center; align-items: center; font-size: 22px";
  leftBox.appendChild(componentHeader);
  leftBox.appendChild(createComponent());
  contentBox.appendChild(leftBox);
  let rightBox = document.createElement("div");
  rightBox.style = "width: 50%;";
  rightBox.id = "rightBox";
  let impactHeader = document.createElement("div");
  impactHeader.textContent = "Event Changes";
  impactHeader.style = "display: flex; justify-content: center; align-items: center; font-size: 22px";
  rightBox.appendChild(impactHeader);
  rightBox.appendChild(createImpact());
  contentBox.appendChild(rightBox);
  wrapper.appendChild(contentBox);
  let dBox = document.createElement("div");
  dBox.style = "background: aliceblue; padding: .5rem; height: 25.25%;";
  let description = document.createElement("textarea");
  description.style = " font-size: 18px; resize: none; overflow-y: auto;";
  description.placeholder = "Enter a description for the event";
  description.id = "eventDetails";
  dBox.appendChild(description);
  wrapper.appendChild(dBox);
  let buttonRow = document.createElement("div");
  buttonRow.style = "display: flex; justify-content: space-evenly; align-items: center; background: aliceblue; height: 10%;";
  let confirmBtn = document.createElement("button");
  confirmBtn.textContent = "Confirm Event";
  confirmBtn.style = "font-size: 16px;";
  buttonRow.appendChild(confirmBtn);
  confirmBtn.addEventListener("click", () => {
    (0,_compileEvent__WEBPACK_IMPORTED_MODULE_0__.compileEvent)();
    (0,_projectBoxRender__WEBPACK_IMPORTED_MODULE_2__.projectBoxRender)();
    (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
  });
  let cancelBtn = document.createElement("button");
  cancelBtn.textContent = "Cancel Event";
  cancelBtn.style = "font-size: 16px;";
  buttonRow.appendChild(cancelBtn);
  cancelBtn.addEventListener("click", () => {
    costCount = 0;
    impactCount = 0;
    (0,_projectBoxRender__WEBPACK_IMPORTED_MODULE_2__.projectBoxRender)();
  });
  wrapper.appendChild(buttonRow);
  typeSelect.addEventListener("change", () => {
    if (typeSelect.value == "Immediate" || typeSelect.value == "Indefinite") {
      timeBox.style = "display: none";
      timeValBox.style = "display: none";
    } else if (typeSelect.value == "Active") {
      timeBox.textContent = "Productivity Required:";
      timeBox.style = "font-size: 20px; display: flex; justify-content: start; width: 50%; margin-left: 2rem";
      timeValBox.style = "font-size: 20px; display: flex; padding: .15rem; box-sizing: border-box; justify-content: start; width: 50%";
    } else if (typeSelect.value == "Passive") {
      timeBox.textContent = "Weeks Remaining:";
      timeBox.style = "font-size: 20px; display: flex; justify-content: start; width: 50%; margin-left: 2rem";
      timeValBox.style = "font-size: 20px; display: flex; padding: .15rem; box-sizing: border-box; justify-content: start; width: 50%";
    }
  });
}
function createComponent() {
  costCount++;
  let compBox = document.createElement("div");
  compBox.style = "display: flex; flex-direction: column; justify-content: center; align-items: center";
  let compRow = document.createElement("div");
  compRow.style = "display: flex; margin-left: 4rem; width: 85%";
  let num = document.createElement("input");
  num.type = "number";
  num.style = "width: 11%; font-size: 20px; text-align: center";
  num.classList.add("eventCompVal");
  compRow.appendChild(num);
  let item = document.createElement("select");
  item.style = "width: 75%; font-size: 20px;";
  item.classList.add("eventCompItem");
  let selectItem = document.createElement("option");
  selectItem.value = "none";
  selectItem.textContent = "-Select Component-";
  item.appendChild(selectItem);
  let surgroup = document.createElement("optgroup");
  surgroup.label = "Survival Components";
  let food = document.createElement("option");
  food.value = "food";
  food.textContent = "Food";
  surgroup.appendChild(food);
  let supplies = document.createElement("option");
  supplies.value = "supplies";
  supplies.textContent = "Supplies";
  surgroup.appendChild(supplies);
  let med = document.createElement("option");
  med.value = "medical capacity";
  med.textContent = "Medical Capacity";
  surgroup.appendChild(med);
  item.appendChild(surgroup);
  let safgroup = document.createElement("optgroup");
  safgroup.label = "Safety Components";
  let di = document.createElement("option");
  di.value = "defensive infrastructure";
  di.textContent = "Defensive Infrastructure";
  safgroup.appendChild(di);
  let intel = document.createElement("option");
  intel.value = "intelligence";
  intel.textContent = "Intelligence";
  safgroup.appendChild(intel);
  let gar = document.createElement("option");
  gar.value = "garrison";
  gar.textContent = "Garrison";
  safgroup.appendChild(gar);
  item.appendChild(safgroup);
  let egroup = document.createElement("optgroup");
  egroup.label = "Economy Components";
  let trade = document.createElement("option");
  trade.value = "trade";
  trade.textContent = "Trade";
  egroup.appendChild(trade);
  let prod = document.createElement("option");
  prod.value = "productivity";
  prod.textContent = "Productivity";
  egroup.appendChild(prod);
  item.appendChild(egroup);
  let mgroup = document.createElement("optgroup");
  mgroup.label = "Settlement Components";
  let gold = document.createElement("option");
  gold.value = "gold";
  gold.textContent = "Gold";
  mgroup.appendChild(gold);
  let health = document.createElement("option");
  health.value = "health";
  health.textContent = "Health";
  mgroup.appendChild(health);
  item.appendChild(mgroup);
  compRow.appendChild(item);
  if (costCount > 1) {
    let cancelBtn = document.createElement("button");
    cancelBtn.style = "height: 28px; border-radius: 1rem; font-size: 16px; border: none; background: none; ;";
    cancelBtn.textContent = "x";
    compRow.appendChild(cancelBtn);
    cancelBtn.addEventListener("click", () => {
      cancelBtn.parentElement.remove();
      costCount--;
    });
  }
  compBox.appendChild(compRow);
  let plus = document.createElement("button");
  plus.textContent = "+";
  plus.style = "background: none; border: none";
  plus.addEventListener("click", () => {
    let wrapper = document.querySelector("#leftBox");
    wrapper.appendChild(createComponent());
    plus.remove();
  });
  compBox.appendChild(plus);
  return compBox;
}
function createImpact() {
  impactCount++;
  let compBox = document.createElement("div");
  compBox.style = "display: flex; flex-direction: column; justify-content: center; align-items: center";
  let compRow = document.createElement("div");
  compRow.style = "display: flex; margin-left: .5rem; width:85%";
  let num = document.createElement("input");
  num.type = "number";
  num.style = "width: 15%; font-size: 20px; text-align: center";
  num.classList.add("eventImpactVal");
  compRow.appendChild(num);
  let item = document.createElement("select");
  item.style = "width: 70%; font-size: 20px;";
  item.classList.add("eventImpactItem");
  let selectItem = document.createElement("option");
  selectItem.value = "none";
  selectItem.textContent = "-Select Component-";
  item.appendChild(selectItem);
  let surgroup = document.createElement("optgroup");
  surgroup.label = "Survival Components";
  let survival = document.createElement("option");
  survival.value = "survival bonus";
  survival.textContent = "Survival Mod";
  surgroup.appendChild(survival);
  let food = document.createElement("option");
  food.value = "food bonus";
  food.textContent = "Food Mod";
  surgroup.appendChild(food);
  let supplies = document.createElement("option");
  supplies.value = "supplies bonus";
  supplies.textContent = "Supplies Mod";
  surgroup.appendChild(supplies);
  let med = document.createElement("option");
  med.value = "medical capacity bonus";
  med.textContent = "Medical Capacity Mod";
  surgroup.appendChild(med);
  item.appendChild(surgroup);
  let safgroup = document.createElement("optgroup");
  safgroup.label = "Safety Components";
  let safety = document.createElement("option");
  safety.value = "safety bonus";
  safety.textContent = "Safety Mod";
  safgroup.appendChild(safety);
  let di = document.createElement("option");
  di.value = "defensive infrastructure bonus";
  di.textContent = "Defensive Infrastructure Mod";
  safgroup.appendChild(di);
  let intel = document.createElement("option");
  intel.value = "intelligence bonus";
  intel.textContent = "Intelligence Mod";
  safgroup.appendChild(intel);
  let gar = document.createElement("option");
  gar.value = "garrison bonus";
  gar.textContent = "Garrison Mod";
  safgroup.appendChild(gar);
  item.appendChild(safgroup);
  let egroup = document.createElement("optgroup");
  egroup.label = "Economy Components";
  let economy = document.createElement("option");
  economy.value = "economy bonus";
  economy.textContent = "Economy Mod";
  egroup.appendChild(economy);
  let trade = document.createElement("option");
  trade.value = "trade bonus";
  trade.textContent = "Trade Mod";
  egroup.appendChild(trade);
  let prod = document.createElement("option");
  prod.value = "productivity bonus";
  prod.textContent = "Productivity Mod";
  egroup.appendChild(prod);
  item.appendChild(egroup);
  let sgroup = document.createElement("optgroup");
  sgroup.label = "Settlement Components";
  let maxHealth = document.createElement("option");
  maxHealth.value = "maximum health";
  maxHealth.textContent = "Max Health";
  sgroup.appendChild(maxHealth);
  let level = document.createElement("option");
  level.value = "level";
  level.textContent = "Level";
  sgroup.appendChild(level);
  let sp = document.createElement("option");
  sp.value = "settlement points";
  sp.textContent = "Settlement Points";
  sgroup.appendChild(sp);
  item.appendChild(sgroup);
  compRow.appendChild(item);
  if (impactCount > 1) {
    let cancelBtn = document.createElement("button");
    cancelBtn.style = "height: 28px; border-radius: 1rem; font-size: 16px; border: none; background: none; ;";
    cancelBtn.textContent = "x";
    compRow.appendChild(cancelBtn);
    cancelBtn.addEventListener("click", () => {
      cancelBtn.parentElement.remove();
      costCount--;
    });
  }
  compBox.appendChild(compRow);
  let plus = document.createElement("button");
  plus.textContent = "+";
  plus.style = "background: none; border: none";
  plus.addEventListener("click", () => {
    let wrapper = document.querySelector("#rightBox");
    wrapper.appendChild(createImpact());
    plus.remove();
  });
  compBox.appendChild(plus);
  return compBox;
}

/***/ }),

/***/ "./src/newFixEvent.js":
/*!****************************!*\
  !*** ./src/newFixEvent.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ newFixEvent)
/* harmony export */ });
/* harmony import */ var _compileEvent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compileEvent */ "./src/compileEvent.js");
/* harmony import */ var _pageRenders__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pageRenders */ "./src/pageRenders.js");
/* harmony import */ var _projectBoxRender__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./projectBoxRender */ "./src/projectBoxRender.js");



let costCount = 0;
let impactCount = 0;
function newFixEvent(projCount) {
  let parent = _projectBoxRender__WEBPACK_IMPORTED_MODULE_2__.projectArray.findIndex(e => e.count == projCount);
  let wrapper = document.querySelector("#contentArea");
  wrapper.innerHTML = "";
  wrapper.style = "box-sizing: border-box; width: 100%; height: 100%;";
  let header = document.createElement("div");
  header.textContent = "New Fix Event";
  header.classList.add("subHeader");
  wrapper.appendChild(header);
  let nBB = document.createElement("div");
  nBB.style = "height: 12.5%; width: 50%; display: flex; justify-content: center; align-items: center;";
  let nameBox = document.createElement("div");
  nameBox.classList.add("flexRow", "gap");
  nameBox.style = "height: 12.5%; width: 85%; margin-left: 4rem";
  let nameLabel = document.createElement("div");
  nameLabel.style = "font-size: 20px; width: 11%";
  nameLabel.textContent = "Name:";
  nameBox.appendChild(nameLabel);
  let nameEntry = document.createElement("input");
  nameEntry.type = "text";
  nameEntry.placeholder = "Event Name";
  nameEntry.style = "width: 72.5%; margin-left: .5rem; font-size: 20px;";
  nameEntry.id = "eventName";
  nameBox.appendChild(nameEntry);
  nBB.appendChild(nameBox);
  wrapper.appendChild(nBB);
  let secondRow = document.createElement("div");
  secondRow.classList.add("flexRow", "gap");
  secondRow.style = "height: 12.5%";
  let bigTypeBox = document.createElement("div");
  bigTypeBox.style = "width: 50%; display: flex; justify-content: center; align-items: center;";
  let typeBox2 = document.createElement("div");
  typeBox2.classList.add("flexRow", "gap");
  typeBox2.style = "width: 85%; margin-left: 4rem";
  let typeHeader = document.createElement("div");
  typeHeader.style = "font-size: 20px; width: 11%";
  typeHeader.textContent = "Type:";
  typeBox2.appendChild(typeHeader);
  let typeBox = document.createElement("div");
  typeBox.style = "margin-left: .5rem; width: 75%";
  let typeSelect = document.createElement("select");
  typeSelect.style = "font-size: 20px; width: 98.75%";
  typeSelect.id = "eventType";
  let active = document.createElement("option");
  active.value = "Active-Fix";
  active.textContent = "Active-Fix";
  typeSelect.appendChild(active);
  typeBox.appendChild(typeSelect);
  typeBox2.appendChild(typeBox);
  bigTypeBox.appendChild(typeBox2);
  secondRow.appendChild(bigTypeBox);
  let bigTimeBox = document.createElement("div");
  bigTimeBox.classList.add("flexRow", "gap", "newEventHalfRow2");
  let timeBox = document.createElement("div");
  timeBox.style = "display: none";
  let timeValBox = document.createElement("div");
  timeValBox.style = "display: none";
  let timeVal = document.createElement("input");
  timeVal.type = "number";
  timeVal.style = "width: 60%; font-size: 20px; justify-self: start; text-align: center";
  timeVal.id = "eventTimeVal";
  timeValBox.appendChild(timeVal);
  bigTimeBox.appendChild(timeBox);
  bigTimeBox.appendChild(timeValBox);
  secondRow.appendChild(bigTimeBox);
  wrapper.appendChild(secondRow);
  let contentBox = document.createElement("div");
  contentBox.style.height = "33.25%";
  contentBox.style.background = "aliceblue";
  contentBox.style.display = "flex";
  let leftBox = document.createElement("div");
  leftBox.style = "width: 50%;";
  leftBox.id = "leftBox";
  let componentHeader = document.createElement("div");
  componentHeader.textContent = "Event Costs";
  componentHeader.style = "display: flex; justify-content: center; align-items: center; font-size: 22px";
  leftBox.appendChild(componentHeader);
  leftBox.appendChild(createComponent());
  contentBox.appendChild(leftBox);
  let rightBox = document.createElement("div");
  rightBox.style = "width: 50%;";
  rightBox.id = "rightBox";
  let impactHeader = document.createElement("div");
  impactHeader.textContent = "Event Changes";
  impactHeader.style = "display: flex; justify-content: center; align-items: center; font-size: 22px";
  rightBox.appendChild(impactHeader);
  rightBox.appendChild(createImpact());
  contentBox.appendChild(rightBox);
  wrapper.appendChild(contentBox);
  let dBox = document.createElement("div");
  dBox.style = "background: aliceblue; padding: .5rem; height: 25.25%;";
  let description = document.createElement("textarea");
  description.style = " font-size: 18px; resize: none; overflow-y: auto;";
  description.placeholder = "Enter a description for the event";
  description.id = "eventDetails";
  dBox.appendChild(description);
  wrapper.appendChild(dBox);
  let buttonRow = document.createElement("div");
  buttonRow.style = "display: flex; justify-content: space-evenly; align-items: center; background: aliceblue; height: 10%;";
  let confirmBtn = document.createElement("button");
  confirmBtn.textContent = "Confirm Event";
  confirmBtn.style = "font-size: 16px;";
  buttonRow.appendChild(confirmBtn);
  confirmBtn.addEventListener("click", () => {
    (0,_compileEvent__WEBPACK_IMPORTED_MODULE_0__.compileEvent)(parent);
    (0,_projectBoxRender__WEBPACK_IMPORTED_MODULE_2__.projectBoxRender)();
    (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
  });
  let cancelBtn = document.createElement("button");
  cancelBtn.textContent = "Cancel Event";
  cancelBtn.style = "font-size: 16px;";
  buttonRow.appendChild(cancelBtn);
  cancelBtn.addEventListener("click", () => {
    costCount = 0;
    impactCount = 0;
    (0,_projectBoxRender__WEBPACK_IMPORTED_MODULE_2__.projectBoxRender)();
  });
  wrapper.appendChild(buttonRow);
  timeBox.textContent = "Productivity Required:";
  timeBox.style = "font-size: 20px; display: flex; justify-content: start; width: 50%; margin-left: 2rem";
  timeValBox.style = "font-size: 20px; display: flex; padding: .15rem; box-sizing: border-box; justify-content: start; width: 50%";
}
function createComponent() {
  costCount++;
  let compBox = document.createElement("div");
  compBox.style = "display: flex; flex-direction: column; justify-content: center; align-items: center";
  let compRow = document.createElement("div");
  compRow.style = "display: flex; margin-left: 4rem; width: 85%";
  let num = document.createElement("input");
  num.type = "number";
  num.style = "width: 11%; font-size: 20px; text-align: center";
  num.classList.add("eventCompVal");
  compRow.appendChild(num);
  let item = document.createElement("select");
  item.style = "width: 75%; font-size: 20px;";
  item.classList.add("eventCompItem");
  let selectItem = document.createElement("option");
  selectItem.value = "none";
  selectItem.textContent = "Select Component";
  item.appendChild(selectItem);
  let food = document.createElement("option");
  food.value = "food";
  food.textContent = "Food";
  item.appendChild(food);
  let supplies = document.createElement("option");
  supplies.value = "supplies";
  supplies.textContent = "Supplies";
  item.appendChild(supplies);
  let med = document.createElement("option");
  med.value = "medical capacity";
  med.textContent = "Medical Capacity";
  item.appendChild(med);
  let di = document.createElement("option");
  di.value = "defensive infrastructure";
  di.textContent = "Defensive Infrastructure";
  item.appendChild(di);
  let intel = document.createElement("option");
  intel.value = "intelligence";
  intel.textContent = "Intelligence";
  item.appendChild(intel);
  let gar = document.createElement("option");
  gar.value = "garrison";
  gar.textContent = "Garrison";
  item.appendChild(gar);
  let trade = document.createElement("option");
  trade.value = "trade";
  trade.textContent = "Trade";
  item.appendChild(trade);
  let prod = document.createElement("option");
  prod.value = "productivity";
  prod.textContent = "Productivity";
  item.appendChild(prod);
  let gold = document.createElement("option");
  gold.value = "gold";
  gold.textContent = "Gold";
  item.appendChild(gold);
  compRow.appendChild(item);
  if (costCount > 1) {
    let cancelBtn = document.createElement("button");
    cancelBtn.style = "height: 28px; border-radius: 1rem; font-size: 16px; border: none; background: none; ;";
    cancelBtn.textContent = "x";
    compRow.appendChild(cancelBtn);
    cancelBtn.addEventListener("click", () => {
      cancelBtn.parentElement.remove();
      costCount--;
    });
  }
  compBox.appendChild(compRow);
  let plus = document.createElement("button");
  plus.textContent = "+";
  plus.style = "background: none; border: none";
  plus.addEventListener("click", () => {
    let wrapper = document.querySelector("#leftBox");
    wrapper.appendChild(createComponent());
    plus.remove();
  });
  compBox.appendChild(plus);
  return compBox;
}
function createImpact() {
  impactCount++;
  let compBox = document.createElement("div");
  compBox.style = "display: flex; flex-direction: column; justify-content: center; align-items: center";
  let compRow = document.createElement("div");
  compRow.style = "display: flex; margin-left: .5rem; width:85%";
  let num = document.createElement("input");
  num.type = "number";
  num.style = "width: 15%; font-size: 20px; text-align: center";
  num.classList.add("eventImpactVal");
  compRow.appendChild(num);
  let item = document.createElement("select");
  item.style = "width: 70%; font-size: 20px;";
  item.classList.add("eventImpactItem");
  let selectItem = document.createElement("option");
  selectItem.value = "none";
  selectItem.textContent = "Select Component";
  item.appendChild(selectItem);
  let survival = document.createElement("option");
  survival.value = "survival bonus";
  survival.textContent = "Survival Mod";
  item.appendChild(survival);
  let food = document.createElement("option");
  food.value = "food bonus";
  food.textContent = "Food Mod";
  item.appendChild(food);
  let supplies = document.createElement("option");
  supplies.value = "supplies bonus";
  supplies.textContent = "Supplies Mod";
  item.appendChild(supplies);
  let med = document.createElement("option");
  med.value = "medical capacity bonus";
  med.textContent = "Medical Capacity Mod";
  item.appendChild(med);
  let safety = document.createElement("option");
  safety.value = "safety bonus";
  safety.textContent = "Safety Mod";
  item.appendChild(safety);
  let di = document.createElement("option");
  di.value = "defensive infrastructure bonus";
  di.textContent = "Defensive Infrastructure Mod";
  item.appendChild(di);
  let intel = document.createElement("option");
  intel.value = "intelligence bonus";
  intel.textContent = "Intelligence Mod";
  item.appendChild(intel);
  let gar = document.createElement("option");
  gar.value = "garrison bonus";
  gar.textContent = "Garrison Mod";
  item.appendChild(gar);
  let economy = document.createElement("option");
  economy.value = "economy bonus";
  economy.textContent = "Economy Mod";
  item.appendChild(economy);
  let trade = document.createElement("option");
  trade.value = "trade bonus";
  trade.textContent = "Trade Mod";
  item.appendChild(trade);
  let prod = document.createElement("option");
  prod.value = "productivity bonus";
  prod.textContent = "Productivity Mod";
  item.appendChild(prod);
  let maxHealth = document.createElement("option");
  maxHealth.value = "maximum health";
  maxHealth.textContent = "Max Health";
  item.appendChild(maxHealth);
  let level = document.createElement("option");
  level.value = "level";
  level.textContent = "Level";
  item.appendChild(level);
  let sp = document.createElement("option");
  sp.value = "settlement points";
  sp.textContent = "Settlement Points";
  item.appendChild(sp);
  compRow.appendChild(item);
  if (impactCount > 1) {
    let cancelBtn = document.createElement("button");
    cancelBtn.style = "height: 28px; border-radius: 1rem; font-size: 16px; border: none; background: none; ;";
    cancelBtn.textContent = "x";
    compRow.appendChild(cancelBtn);
    cancelBtn.addEventListener("click", () => {
      cancelBtn.parentElement.remove();
      costCount--;
    });
  }
  compBox.appendChild(compRow);
  let plus = document.createElement("button");
  plus.textContent = "+";
  plus.style = "background: none; border: none";
  plus.addEventListener("click", () => {
    let wrapper = document.querySelector("#rightBox");
    wrapper.appendChild(createImpact());
    plus.remove();
  });
  compBox.appendChild(plus);
  return compBox;
}

/***/ }),

/***/ "./src/openGlossary.js":
/*!*****************************!*\
  !*** ./src/openGlossary.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ openGlossary)
/* harmony export */ });
function openGlossary(index) {
  if (document.querySelector("#glossary") != undefined) {
    document.querySelector("#glossary").remove();
  }
  let wrapper = document.createElement("div");
  wrapper.id = "glossary";
  let headerBox = document.createElement("div");
  headerBox.style = "display: grid; grid-template-columns: 1fr 2fr 1fr; place-items: center; padding: 1rem; background: rgba(200,200,230,.5)";
  let backBox = document.createElement("div");
  backBox.classList.add("flexRow", "center");
  let closeBtn = document.createElement("button");
  closeBtn.textContent = "Close";
  closeBtn.style = "border-radius: 1rem;";
  closeBtn.addEventListener("click", () => {
    wrapper.remove();
  });
  backBox.appendChild(closeBtn);
  headerBox.appendChild(backBox);
  let header = document.createElement("div");
  header.classList.add("subHeader");
  header.style = "background: none;";
  header.textContent = "Glossary";
  headerBox.appendChild(header);
  wrapper.appendChild(headerBox);
  let contentArea = document.createElement("div");
  contentArea.classList.add("troopDisplayBox");
  contentArea.id = index;

  //////////////bringing it home////////////////
  wrapper.appendChild(contentArea);
  let body = document.querySelector("body");
  body.appendChild(wrapper);
}

/***/ }),

/***/ "./src/pageRenders.js":
/*!****************************!*\
  !*** ./src/pageRenders.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   levelCost: () => (/* binding */ levelCost),
/* harmony export */   refreshPage: () => (/* binding */ refreshPage),
/* harmony export */   renderAll: () => (/* binding */ renderAll),
/* harmony export */   renderCompScoreBox: () => (/* binding */ renderCompScoreBox),
/* harmony export */   renderConditions: () => (/* binding */ renderConditions),
/* harmony export */   renderEventModBox: () => (/* binding */ renderEventModBox),
/* harmony export */   renderHealth: () => (/* binding */ renderHealth),
/* harmony export */   renderNameLevel: () => (/* binding */ renderNameLevel),
/* harmony export */   renderScoreBonus: () => (/* binding */ renderScoreBonus),
/* harmony export */   renderSettlementPointsBox: () => (/* binding */ renderSettlementPointsBox),
/* harmony export */   renderWeekBox: () => (/* binding */ renderWeekBox)
/* harmony export */ });
/* harmony import */ var _economyStats__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./economyStats */ "./src/economyStats.js");
/* harmony import */ var _pageload__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pageload */ "./src/pageload.js");
/* harmony import */ var _projectBoxRender__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./projectBoxRender */ "./src/projectBoxRender.js");
/* harmony import */ var _renderActionsArea__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./renderActionsArea */ "./src/renderActionsArea.js");
/* harmony import */ var _renderTroops__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./renderTroops */ "./src/renderTroops.js");
/* harmony import */ var _renderUpgrades__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./renderUpgrades */ "./src/renderUpgrades.js");
/* harmony import */ var _safetyStats__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./safetyStats */ "./src/safetyStats.js");
/* harmony import */ var _settlementManager__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./settlementManager */ "./src/settlementManager.js");
/* harmony import */ var _settlementStats__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./settlementStats */ "./src/settlementStats.js");
/* harmony import */ var _shopWindow__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./shopWindow */ "./src/shopWindow.js");
/* harmony import */ var _storage__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./storage */ "./src/storage.js");
/* harmony import */ var _survivalStats__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./survivalStats */ "./src/survivalStats.js");
/* harmony import */ var _taxRender__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./taxRender */ "./src/taxRender.js");













function renderNameLevel() {
  const wrapper = document.querySelector('#NameLevel');
  wrapper.innerHTML = '';
  const nameBox = document.createElement('div');
  nameBox.classList.add('flexRow', 'center');
  const name = document.createElement('input');
  name.type = 'text';
  name.placeholder = 'Settlement Name';
  name.value = _settlementStats__WEBPACK_IMPORTED_MODULE_8__.settlement.name;
  name.id = 'settlementName';
  name.addEventListener('change', () => {
    let holdover = _settlementStats__WEBPACK_IMPORTED_MODULE_8__.settlement.name;
    _settlementStats__WEBPACK_IMPORTED_MODULE_8__.settlement.name = name.value;
    (0,_storage__WEBPACK_IMPORTED_MODULE_10__.saveSettlement)(_settlementStats__WEBPACK_IMPORTED_MODULE_8__.settlement.name);
    delete _settlementManager__WEBPACK_IMPORTED_MODULE_7__.settlementList[holdover];
  });
  nameBox.appendChild(name);
  wrapper.appendChild(nameBox);
  const levelBox = document.createElement('div');
  levelBox.classList.add('flexRow', 'gap', 'center');
  const levelText = document.createElement('div');
  levelText.textContent = 'Level';
  levelBox.appendChild(levelText);
  const levelValue = document.createElement('div');
  levelValue.textContent = _settlementStats__WEBPACK_IMPORTED_MODULE_8__.settlement.level;
  levelBox.appendChild(levelValue);
  if (_settlementStats__WEBPACK_IMPORTED_MODULE_8__.settlement.type != '') {
    const setType = document.createElement('div');
    setType.textContent = _settlementStats__WEBPACK_IMPORTED_MODULE_8__.settlement.type;
    levelBox.appendChild(setType);
  }
  const setLabel = document.createElement('div');
  setLabel.textContent = "Settlement";
  levelBox.appendChild(setLabel);
  const lvlUpBtn = document.createElement('button');
  lvlUpBtn.textContent = 'Level Up';
  lvlUpBtn.addEventListener('click', () => {
    const choice = confirm('Upgrading will cost ' + levelCost() + ' gold. Do you want to commit?');
    if (choice === true) {
      if (_settlementStats__WEBPACK_IMPORTED_MODULE_8__.settlement.vault >= levelCost()) {
        (0,_settlementStats__WEBPACK_IMPORTED_MODULE_8__.vaultAdd)(-levelCost());
        (0,_settlementStats__WEBPACK_IMPORTED_MODULE_8__.levelUp)(1);
      } else if (_settlementStats__WEBPACK_IMPORTED_MODULE_8__.settlement.vault < levelCost()) {
        alert('You cannot afford to upgrade the settlement level yet');
        return;
      }
    }
  });
  wrapper.appendChild(levelBox);
  wrapper.appendChild(lvlUpBtn);
}
function levelCost() {
  const multiplier = Math.pow(1.392, _settlementStats__WEBPACK_IMPORTED_MODULE_8__.settlement.level);
  const cost = parseInt((200 * multiplier).toFixed(0));
  return cost;
}
function renderHealth() {
  const wrapper = document.querySelector('#SetHealth');
  wrapper.innerHTML = '';
  const healthBox = document.createElement('div');
  healthBox.classList.add('flexCol', 'gap');
  const healthLabel = document.createElement('div');
  healthLabel.textContent = 'Settlement Health';
  healthLabel.classList.add('text-center');
  healthBox.appendChild(healthLabel);
  const healthValsBox = document.createElement('div');
  healthValsBox.classList.add('flexRow', 'center');
  const currentHealth = document.createElement('input');
  currentHealth.type = 'number';
  currentHealth.classList.add('text-center');
  currentHealth.id = 'currentHealth';
  currentHealth.style = 'font-size: 20px;';
  if ((0,_settlementStats__WEBPACK_IMPORTED_MODULE_8__.healthPercent)() >= .8) {
    currentHealth.style.color = 'green';
  } else if ((0,_settlementStats__WEBPACK_IMPORTED_MODULE_8__.healthPercent)() >= .5 && (0,_settlementStats__WEBPACK_IMPORTED_MODULE_8__.healthPercent)() < .8) {
    currentHealth.style.color = 'darkgoldenrod';
  } else if ((0,_settlementStats__WEBPACK_IMPORTED_MODULE_8__.healthPercent)() >= .25 && (0,_settlementStats__WEBPACK_IMPORTED_MODULE_8__.healthPercent)() < .5) {
    currentHealth.style.color = 'orange';
  } else if ((0,_settlementStats__WEBPACK_IMPORTED_MODULE_8__.healthPercent)() < .25) {
    currentHealth.style.color = 'red';
  }
  currentHealth.addEventListener('change', () => {
    _settlementStats__WEBPACK_IMPORTED_MODULE_8__.settlement.currentHealth = currentHealth.value;
    if ((0,_settlementStats__WEBPACK_IMPORTED_MODULE_8__.healthPercent)() >= .8) {
      currentHealth.style.color = 'green';
    } else if ((0,_settlementStats__WEBPACK_IMPORTED_MODULE_8__.healthPercent)() >= .5 && (0,_settlementStats__WEBPACK_IMPORTED_MODULE_8__.healthPercent)() < .8) {
      currentHealth.style.color = 'darkgoldenrod';
    } else if ((0,_settlementStats__WEBPACK_IMPORTED_MODULE_8__.healthPercent)() >= .25 && (0,_settlementStats__WEBPACK_IMPORTED_MODULE_8__.healthPercent)() < .5) {
      currentHealth.style.color = 'orange';
    } else if ((0,_settlementStats__WEBPACK_IMPORTED_MODULE_8__.healthPercent)() < .25) {
      currentHealth.style.color = 'red';
    }
  });
  currentHealth.value = _settlementStats__WEBPACK_IMPORTED_MODULE_8__.settlement.currentHealth;
  healthValsBox.appendChild(currentHealth);
  const healthSpacer = document.createElement('div');
  healthSpacer.textContent = '/';
  healthSpacer.classList.add('text-center');
  healthSpacer.style = 'width: 10%;';
  healthValsBox.appendChild(healthSpacer);
  const maxHealth = document.createElement('div');
  maxHealth.textContent = _settlementStats__WEBPACK_IMPORTED_MODULE_8__.settlement.maxHealthBase + _settlementStats__WEBPACK_IMPORTED_MODULE_8__.settlement.maxHealthBonus;
  maxHealth.classList.add('text-center');
  maxHealth.style = 'width: 15%; font-size: 20px';
  healthValsBox.appendChild(maxHealth);
  healthBox.appendChild(healthValsBox);
  wrapper.appendChild(healthBox);
}
function renderConditions() {
  const wrapper = document.querySelector('#SetConditions');
  wrapper.innerHTML = '';
  const header = document.createElement('div');
  header.classList.add('text-center');
  header.textContent = 'Settlement Conditions';
  wrapper.appendChild(header);
  const impactBox = document.createElement('div');
  impactBox.classList.add('flexRow', 'gap', 'center');
  wrapper.appendChild(impactBox);
  const addBox = document.createElement('div');
  addBox.style = 'display: flex; justify-content: end;';
  const addBtn = document.createElement('button');
  addBtn.textContent = '+';
  addBox.appendChild(addBtn);
  wrapper.appendChild(addBox);
}
function renderSettlementPointsBox() {
  const wrapper = document.querySelector('#SettlementPointsBox');
  wrapper.innerHTML = '';
  const header = document.createElement('div');
  header.textContent = 'Settlement Points';
  header.classList.add('text-center');
  wrapper.appendChild(header);
  const spVal = document.createElement('div');
  spVal.textContent = _settlementStats__WEBPACK_IMPORTED_MODULE_8__.settlement.settlementPoints;
  spVal.classList.add('text-center', 'valBall');
  wrapper.appendChild(spVal);
}
function renderWeekBox() {
  const wrapper = document.querySelector('#WeekBox');
  wrapper.innerHTML = '';
  wrapper.style = 'justify-content: space-around';
  const valBox = document.createElement('div');
  valBox.classList.add('flexCol', 'center', 'gap');
  const weekVal = document.createElement('div');
  weekVal.classList.add('valBall');
  weekVal.textContent = _settlementStats__WEBPACK_IMPORTED_MODULE_8__.settlement.weeksPassed;
  valBox.appendChild(weekVal);
  const weekLabel = document.createElement('div');
  weekLabel.textContent = 'Weeks Passed';
  weekLabel.classList.add('text-center');
  valBox.appendChild(weekLabel);
  wrapper.appendChild(valBox);
  const nxtWeek = document.createElement('button');
  nxtWeek.textContent = 'Next Week';
  nxtWeek.addEventListener('click', () => {
    (0,_settlementStats__WEBPACK_IMPORTED_MODULE_8__.nextWeek)();
  });
  nxtWeek.style = 'border-radius: .5rem;';
  wrapper.appendChild(nxtWeek);
}
function renderEventModBox() {
  const wrapper = document.querySelector('#EventModBox');
  wrapper.innerHTML = '';
  const header = document.createElement('div');
  header.textContent = 'Event Modifiers';
  header.classList.add('text-center');
  wrapper.appendChild(header);
  const modRow = document.createElement('div');
  modRow.classList.add('flexRow', 'center');
  const supModBox = document.createElement('div');
  supModBox.classList.add('flexCol', 'gap', 'center');
  supModBox.style = 'width: 33.333%; border-right: 1px solid black';
  const supModLabel = document.createElement('div');
  supModLabel.textContent = "Supplies";
  supModLabel.style = 'font-size: 16px; text-align: center';
  supModBox.appendChild(supModLabel);
  modRow.appendChild(supModBox);
  const supModVal = document.createElement('div');
  let i = '';
  if ((0,_survivalStats__WEBPACK_IMPORTED_MODULE_11__.suppliesModifier)() >= 0) {
    i = '+';
  }
  supModVal.textContent = i + " " + (0,_survivalStats__WEBPACK_IMPORTED_MODULE_11__.suppliesModifier)();
  supModBox.appendChild(supModVal);
  const garModBox = document.createElement('div');
  garModBox.classList.add('flexCol', 'gap', 'center');
  garModBox.style = 'width: 33.333%; border-right: 1px solid black';
  const garModLabel = document.createElement('div');
  garModLabel.textContent = "Garrison";
  garModLabel.style = 'font-size: 16px; text-align: center';
  garModBox.appendChild(garModLabel);
  modRow.appendChild(garModBox);
  const garModVal = document.createElement('div');
  let n = '';
  if ((0,_safetyStats__WEBPACK_IMPORTED_MODULE_6__.garrisonModifier)() >= 0) {
    n = '+';
  }
  garModVal.textContent = n + " " + (0,_safetyStats__WEBPACK_IMPORTED_MODULE_6__.garrisonModifier)();
  garModBox.appendChild(garModVal);
  const tradeModBox = document.createElement('div');
  tradeModBox.classList.add('flexCol', 'gap', 'center');
  tradeModBox.style = 'width: 33.333%;';
  const tradeModLabel = document.createElement('div');
  tradeModLabel.textContent = "Trade";
  tradeModLabel.style = 'font-size: 16px; text-align: center';
  tradeModBox.appendChild(tradeModLabel);
  modRow.appendChild(tradeModBox);
  const tradeModVal = document.createElement('div');
  let o = '';
  if ((0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.tradeModifier)() >= 0) {
    o = '+';
  }
  tradeModVal.textContent = o + " " + (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.tradeModifier)();
  tradeModBox.appendChild(tradeModVal);
  wrapper.appendChild(modRow);
}
function renderCompScoreBox() {
  const wrapper = document.querySelector('#compScoreBox');
  wrapper.innerHTML = '';
  const headers = document.createElement('div');
  headers.style = 'display: grid; grid-template-columns: 3fr 3fr 2fr; padding-right: 2%';
  const surHead = document.createElement('div');
  surHead.textContent = 'Survival';
  surHead.classList.add('text-center');
  surHead.style = 'font-size: 22px;';
  const surBonus = document.createElement('span');
  let sb = '';
  if (_survivalStats__WEBPACK_IMPORTED_MODULE_11__.survival.Bonus >= 0) {
    sb = '+';
  }
  surBonus.textContent = " " + sb + _survivalStats__WEBPACK_IMPORTED_MODULE_11__.survival.Bonus;
  surBonus.style = 'font-size: 14px';
  surHead.appendChild(surBonus);
  headers.appendChild(surHead);
  const safHead = document.createElement('div');
  safHead.textContent = 'Safety';
  safHead.classList.add('text-center');
  safHead.style = 'font-size: 22px';
  const safBonus = document.createElement('span');
  let sab = '';
  if (_safetyStats__WEBPACK_IMPORTED_MODULE_6__.safety.Bonus >= 0) {
    sab = '+';
  }
  safBonus.textContent = " " + sab + _safetyStats__WEBPACK_IMPORTED_MODULE_6__.safety.Bonus;
  safBonus.style = 'font-size: 14px';
  safHead.appendChild(safBonus);
  headers.appendChild(safHead);
  const econHead = document.createElement('div');
  econHead.textContent = 'Economy';
  econHead.classList.add('text-center');
  econHead.style = 'font-size: 22px';
  const eBonus = document.createElement('span');
  let eb = '';
  if (_economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.Bonus >= 0) {
    eb = '+';
  }
  eBonus.textContent = " " + eb + _economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.Bonus;
  eBonus.style = 'font-size: 14px';
  econHead.appendChild(eBonus);
  headers.appendChild(econHead);
  wrapper.appendChild(headers);
  const scoreRow = document.createElement('div');
  scoreRow.classList.add('flexRow');
  scoreRow.style = 'justify-content: space-around; padding-right: 2%';
  const foodBox = document.createElement('div');
  foodBox.classList.add('flexCol', 'box4', 'center');
  foodBox.id = 'foodBox';
  scoreRow.appendChild(foodBox);
  const suppliesBox = document.createElement('div');
  suppliesBox.classList.add('flexCol', 'box4', 'center');
  suppliesBox.id = 'suppliesBox';
  scoreRow.appendChild(suppliesBox);
  const medBox = document.createElement('div');
  medBox.classList.add('flexCol', 'box4', 'center');
  ////////FOR THE DIVIDER////////
  medBox.style = 'border-right: 2px solid black';
  medBox.id = 'medBox';
  scoreRow.appendChild(medBox);
  const diBox = document.createElement('div');
  diBox.classList.add('flexCol', 'box4', 'center');
  diBox.id = 'diBox';
  scoreRow.appendChild(diBox);
  const intelBox = document.createElement('div');
  intelBox.classList.add('flexCol', 'box4', 'center');
  intelBox.id = 'intelBox';
  scoreRow.appendChild(intelBox);
  const garBox = document.createElement('div');
  garBox.classList.add('flexCol', 'box4', 'center');
  ////////FOR THE DIVIDER////////
  garBox.style = 'border-right: 2px solid black';
  garBox.id = 'garBox';
  scoreRow.appendChild(garBox);
  const tradeBox = document.createElement('div');
  tradeBox.classList.add('flexCol', 'box4', 'center');
  tradeBox.id = 'tradeBox';
  scoreRow.appendChild(tradeBox);
  const prodBox = document.createElement('div');
  prodBox.classList.add('flexCol', 'box4', 'center');
  prodBox.id = 'prodBox';
  scoreRow.appendChild(prodBox);
  wrapper.appendChild(scoreRow);
}
function renderScoreBonus() {
  const wrapper = document.querySelector('#ScoreBonusBox');
  wrapper.innerHTML = '';
  const header = document.createElement('div');
  header.textContent = 'Settlement Scores';
  header.classList.add('text-center');
  wrapper.appendChild(header);
  const modRow = document.createElement('div');
  modRow.classList.add('flexRow', 'center');
  const surModBox = document.createElement('div');
  surModBox.classList.add('flexCol', 'gap', 'center');
  surModBox.style = 'width: 33.333%; border-right: 1px solid black';
  const surModLabel = document.createElement('div');
  surModLabel.textContent = "Survival";
  surModLabel.style = 'font-size: 16px; text-align: center';
  surModBox.appendChild(surModLabel);
  modRow.appendChild(surModBox);
  const surRate = document.createElement('div');
  surRate.textContent = (0,_survivalStats__WEBPACK_IMPORTED_MODULE_11__.survivalRating)();
  surRate.style = 'font-size: 14px';
  const surModVal = document.createElement('div');
  surModVal.classList.add('valBall');
  surModVal.textContent = _survivalStats__WEBPACK_IMPORTED_MODULE_11__.survival.Base;
  surModBox.appendChild(surModVal);
  surModBox.appendChild(surRate);
  const safModBox = document.createElement('div');
  safModBox.classList.add('flexCol', 'gap', 'center');
  safModBox.style = 'width: 33.333%; border-right: 1px solid black';
  const safModLabel = document.createElement('div');
  safModLabel.textContent = "Safety";
  safModLabel.style = 'font-size: 16px; text-align: center';
  safModBox.appendChild(safModLabel);
  modRow.appendChild(safModBox);
  const safRate = document.createElement('div');
  safRate.textContent = (0,_safetyStats__WEBPACK_IMPORTED_MODULE_6__.safetyRating)();
  safRate.style = 'font-size: 14px';
  const safModVal = document.createElement('div');
  safModVal.classList.add('valBall');
  safModVal.textContent = _safetyStats__WEBPACK_IMPORTED_MODULE_6__.safety.Adjusted;
  safModBox.appendChild(safModVal);
  safModBox.appendChild(safRate);
  const econModBox = document.createElement('div');
  econModBox.classList.add('flexCol', 'gap', 'center');
  econModBox.style = 'width: 33.333%;';
  const econModLabel = document.createElement('div');
  econModLabel.textContent = "Economy";
  econModLabel.style = 'font-size: 16px; text-align: center';
  econModBox.appendChild(econModLabel);
  modRow.appendChild(econModBox);
  const eRate = document.createElement('div');
  eRate.textContent = (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.economyRating)();
  eRate.style = 'font-size: 14px';
  const econModVal = document.createElement('div');
  econModVal.classList.add('valBall');
  econModVal.textContent = _economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.Adjusted;
  econModBox.appendChild(econModVal);
  econModBox.appendChild(eRate);
  wrapper.appendChild(modRow);
}
function renderAll() {
  renderConditions();
  renderHealth();
  renderNameLevel();
  renderSettlementPointsBox();
  renderWeekBox();
  renderCompScoreBox();
  (0,_survivalStats__WEBPACK_IMPORTED_MODULE_11__.foodBox)();
  (0,_survivalStats__WEBPACK_IMPORTED_MODULE_11__.suppliesBox)();
  (0,_survivalStats__WEBPACK_IMPORTED_MODULE_11__.medBox)();
  (0,_safetyStats__WEBPACK_IMPORTED_MODULE_6__.diBox)();
  (0,_safetyStats__WEBPACK_IMPORTED_MODULE_6__.intelBox)();
  (0,_safetyStats__WEBPACK_IMPORTED_MODULE_6__.garBox)();
  (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.tradeBox)();
  (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.prodBox)();
  renderScoreBonus();
  (0,_taxRender__WEBPACK_IMPORTED_MODULE_12__["default"])();
  (0,_renderActionsArea__WEBPACK_IMPORTED_MODULE_3__["default"])();
  (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.economyRating)();
  (0,_survivalStats__WEBPACK_IMPORTED_MODULE_11__.survivalRating)();
  (0,_safetyStats__WEBPACK_IMPORTED_MODULE_6__.safetyRating)();
  renderEventModBox();
  if (document.querySelector('#a4c1') != undefined) {
    (0,_renderUpgrades__WEBPACK_IMPORTED_MODULE_5__.renderUpgrades)();
  }
  if (document.querySelector('#troopScreen') != undefined) {
    (0,_renderTroops__WEBPACK_IMPORTED_MODULE_4__["default"])();
  }
  if (document.querySelector('#projectBox') != undefined) {
    (0,_projectBoxRender__WEBPACK_IMPORTED_MODULE_2__.projectBoxRender)();
  }
}
function refreshPage() {
  (0,_pageload__WEBPACK_IMPORTED_MODULE_1__["default"])();
  renderAll();
  (0,_taxRender__WEBPACK_IMPORTED_MODULE_12__["default"])();
  (0,_shopWindow__WEBPACK_IMPORTED_MODULE_9__.shopWindow)();
  (0,_projectBoxRender__WEBPACK_IMPORTED_MODULE_2__.projectBoxRender)();
  (0,_settlementManager__WEBPACK_IMPORTED_MODULE_7__.swapButtonRender)();
}


/***/ }),

/***/ "./src/pageload.js":
/*!*************************!*\
  !*** ./src/pageload.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ pageLoad)
/* harmony export */ });
/* harmony import */ var _projectBoxRender__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./projectBoxRender */ "./src/projectBoxRender.js");
/* harmony import */ var _renderBuildings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./renderBuildings */ "./src/renderBuildings.js");
/* harmony import */ var _renderNotes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./renderNotes */ "./src/renderNotes.js");
/* harmony import */ var _renderTroops__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./renderTroops */ "./src/renderTroops.js");
/* harmony import */ var _renderUpgrades__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./renderUpgrades */ "./src/renderUpgrades.js");
/* harmony import */ var _weekLog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./weekLog */ "./src/weekLog.js");






function pageLoad() {
  let body = document.querySelector("body");
  body.style = "background: lightgray";
  let wrapper = document.createElement("div");
  wrapper.id = "wrapper";
  wrapper.style = "padding: 1rem;";
  wrapper.innerHTML = "";
  let firstRow = document.createElement("div");
  firstRow.style = "display: grid; grid-template-columns: 1fr 1fr 2fr 1fr 1fr; background: lightgray; height: clamp(100px, 10%; 250px); padding: .5rem;";
  let nameLevel = document.createElement("div");
  nameLevel.classList.add("flexCol", "box1");
  nameLevel.id = "NameLevel";
  firstRow.appendChild(nameLevel);
  let health = document.createElement("div");
  health.classList.add("flexCol", "box1");
  health.id = "SetHealth";
  firstRow.appendChild(health);
  let impacts = document.createElement("div");
  impacts.classList.add("flexCol", "box1");
  impacts.id = "SetConditions";
  firstRow.appendChild(impacts);
  let settlementPoints = document.createElement("div");
  settlementPoints.classList.add("flexCol", "box1", "gap", "center");
  settlementPoints.id = "SettlementPointsBox";
  firstRow.appendChild(settlementPoints);
  let weekBox = document.createElement("div");
  weekBox.classList.add("flexRow", "box1", "gap");
  weekBox.id = "WeekBox";
  firstRow.appendChild(weekBox);
  wrapper.appendChild(firstRow);
  let secondRow = document.createElement("div");
  secondRow.style = "display: grid; grid-template-columns: 1fr 1fr 4fr; background: lightgray; height: clamp(100px, 10%; 250px); padding: .5rem;";
  let eventModBox = document.createElement("div");
  eventModBox.id = "EventModBox";
  eventModBox.classList.add("flexCol", "box1a", "gap");
  secondRow.appendChild(eventModBox);
  let scoreBonusBox = document.createElement("div");
  scoreBonusBox.id = "ScoreBonusBox";
  scoreBonusBox.classList.add("flexCol", "box1a", "gap");
  secondRow.appendChild(scoreBonusBox);
  let compScoreBox = document.createElement("div");
  compScoreBox.id = "compScoreBox";
  compScoreBox.classList.add("flexCol", "box1a", "gap");
  secondRow.appendChild(compScoreBox);
  wrapper.appendChild(secondRow);
  let thirdRow = document.createElement("div");
  thirdRow.style = "display: grid; grid-template-columns: 1fr 1fr 4fr; grid-template-rows: 1.45fr 1fr; background: lightgray; height: clamp(100px, 10%; 250px); padding: .5rem;";
  let taxBox = document.createElement("div");
  taxBox.id = "taxBox";
  taxBox.classList.add("flexCol", "box2");
  thirdRow.appendChild(taxBox);
  let buyBox = document.createElement("div");
  buyBox.id = "buyBox";
  buyBox.classList.add("flexCol", "box2");
  thirdRow.appendChild(buyBox);

  ////////CONTENT BOX AND TABS////////

  let contentBox = document.createElement("div");
  contentBox.id = "contentBox";
  let tabs = document.createElement("div");
  tabs.id = "tabs";
  tabs.style = "display: grid; grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;";
  let box1 = document.createElement("div");
  box1.classList.add("contentBtn1", "contentBtn");
  box1.id = "contentBtn1";
  let projectManagementBtn = document.createElement("button");
  projectManagementBtn.textContent = "Projects & Events";
  projectManagementBtn.style = "background: none; border: none; border-bottom: 2px solid black";
  box1.addEventListener("click", () => {
    (0,_projectBoxRender__WEBPACK_IMPORTED_MODULE_0__.projectBoxRender)();
    cycleActive(box1.id);
  });
  box1.style = "background: rgba(200,200,230,.5);";
  box1.appendChild(projectManagementBtn);
  tabs.appendChild(box1);
  let box2 = document.createElement("div");
  box2.classList.add("contentBtn1", "contentBtn");
  box2.id = "contentBtn2";
  let bldgsBtn = document.createElement("button");
  bldgsBtn.textContent = "Buildings";
  bldgsBtn.style = "background: none; border: none; border-bottom: 2px solid black";
  box2.addEventListener("click", () => {
    (0,_renderBuildings__WEBPACK_IMPORTED_MODULE_1__.renderBuildings)();
    cycleActive(box2.id);
  });
  box2.appendChild(bldgsBtn);
  tabs.appendChild(box2);
  let box3 = document.createElement("div");
  box3.classList.add("contentBtn1", "contentBtn");
  box3.id = "contentBtn3";
  let upgBtn = document.createElement("button");
  upgBtn.textContent = "Upgrades";
  upgBtn.style = "background: none; border: none; border-bottom: 2px solid black";
  box3.addEventListener("click", () => {
    (0,_renderUpgrades__WEBPACK_IMPORTED_MODULE_4__.renderUpgrades)();
    cycleActive(box3.id);
  });
  box3.appendChild(upgBtn);
  tabs.appendChild(box3);
  let box4 = document.createElement("div");
  box4.classList.add("contentBtn1", "contentBtn");
  box4.id = "contentBtn4";
  let troopBtn = document.createElement("button");
  troopBtn.textContent = "Troop Info";
  troopBtn.style = "background: none; border: none; border-bottom: 2px solid black";
  box4.addEventListener("click", () => {
    (0,_renderTroops__WEBPACK_IMPORTED_MODULE_3__["default"])();
    cycleActive(box4.id);
  });
  box4.appendChild(troopBtn);
  tabs.appendChild(box4);
  let box5 = document.createElement("div");
  box5.classList.add("contentBtn1", "contentBtn");
  box5.id = "contentBtn5";
  let weeksBtn = document.createElement("button");
  weeksBtn.textContent = "Weekly Log";
  weeksBtn.style = "background: none; border: none; border-bottom: 2px solid black";
  box5.addEventListener("click", () => {
    (0,_weekLog__WEBPACK_IMPORTED_MODULE_5__.renderWeeks)();
    cycleActive(box5.id);
  });
  box5.appendChild(weeksBtn);
  tabs.appendChild(box5);
  let box6 = document.createElement("div");
  box6.classList.add("contentBtn2", "contentBtn");
  box6.id = "contentBtn6";
  let notesBtn = document.createElement("button");
  notesBtn.textContent = "Notes";
  notesBtn.style = "background: none; border: none; border-bottom: 2px solid black";
  box6.addEventListener("click", () => {
    (0,_renderNotes__WEBPACK_IMPORTED_MODULE_2__.renderNotes)();
    cycleActive(box6.id);
  });
  box6.appendChild(notesBtn);
  tabs.appendChild(box6);
  contentBox.appendChild(tabs);
  let contentArea = document.createElement("div");
  contentArea.id = "contentArea";
  contentArea.style = "width: 100%;";
  contentBox.appendChild(contentArea);
  thirdRow.appendChild(contentBox);
  let setStatus = document.createElement("div");
  setStatus.id = "setStatus";
  setStatus.classList.add("flexCol", "box3");
  setStatus.style = "grid-area: 2/1/3/3; margin-top: 1rem";
  thirdRow.appendChild(setStatus);
  wrapper.appendChild(thirdRow);
  body.appendChild(wrapper);
}
function cycleActive(id) {
  let btns = document.querySelectorAll(".contentBtn");
  btns.forEach(btn => {
    btn.style = "background: none;";
  });
  let active = document.querySelector(`#${id}`);
  active.style = "background: rgba(200,200,230,.5);";
}

/***/ }),

/***/ "./src/projectBoxRender.js":
/*!*********************************!*\
  !*** ./src/projectBoxRender.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   aWMinus: () => (/* binding */ aWMinus),
/* harmony export */   aWPlus: () => (/* binding */ aWPlus),
/* harmony export */   calcWorkers: () => (/* binding */ calcWorkers),
/* harmony export */   distCalcWorkers: () => (/* binding */ distCalcWorkers),
/* harmony export */   projectArray: () => (/* binding */ projectArray),
/* harmony export */   projectBoxRender: () => (/* binding */ projectBoxRender),
/* harmony export */   removeCompleted: () => (/* binding */ removeCompleted),
/* harmony export */   setProjects: () => (/* binding */ setProjects),
/* harmony export */   weekProjects: () => (/* binding */ weekProjects)
/* harmony export */ });
/* harmony import */ var _economyStats__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./economyStats */ "./src/economyStats.js");
/* harmony import */ var _endEvents__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./endEvents */ "./src/endEvents.js");
/* harmony import */ var _newEvent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./newEvent */ "./src/newEvent.js");
/* harmony import */ var _renderProjects__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./renderProjects */ "./src/renderProjects.js");




function projectBoxRender() {
  let wrapper = document.querySelector("#contentArea");
  wrapper.innerHTML = "";
  wrapper.style = "width: 100%; height: 100%";
  let header = document.createElement("div");
  header.textContent = "Event Management";
  header.classList.add("subHeader");
  wrapper.appendChild(header);
  let subHeader = document.createElement("div");
  subHeader.style = "display: grid; grid-template: 1fr / 2fr 1fr; place-items: center; height: 7.5%; box-sizing: border-box";
  let prodAvailBox = document.createElement("div");
  prodAvailBox.classList.add("flexRow", "gap");
  let prodAvailLabel = document.createElement("div");
  prodAvailLabel.textContent = "Productivity Available:";
  prodAvailLabel.style = "font-size: 18px;";
  prodAvailBox.appendChild(prodAvailLabel);
  let prodAvailValue = document.createElement("div");
  prodAvailValue.id = "prodAvailValue";
  prodAvailValue.textContent = calcWorkers();
  prodAvailValue.style = "font-size: 18px";
  prodAvailBox.appendChild(prodAvailValue);
  subHeader.appendChild(prodAvailBox);
  let newProjBtn = document.createElement("button");
  newProjBtn.textContent = "New Event";
  newProjBtn.id = "newProjBtn";
  newProjBtn.addEventListener("click", () => {
    (0,_newEvent__WEBPACK_IMPORTED_MODULE_2__["default"])();
  });
  subHeader.appendChild(newProjBtn);
  wrapper.appendChild(subHeader);
  let projectBox = document.createElement("div");
  projectBox.id = "projectBox";
  wrapper.appendChild(projectBox);
  (0,_renderProjects__WEBPACK_IMPORTED_MODULE_3__["default"])();
}
let activeWorkerCount = 0;
let projectArray = [];
function setProjects(data) {
  projectArray = data;
}
function calcWorkers() {
  let num = 0;
  if (_economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.prodC > _economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.prodM) {
    num = _economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.prodM;
  } else {
    num = _economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.prodC;
  }
  return num -= activeWorkerCount;
}
function distCalcWorkers() {
  let num = 0;
  if (_economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.prodC > _economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.prodM) {
    num = _economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.prodM;
  } else {
    num = _economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.prodC;
  }
  let home = document.querySelector("#prodAvailValue");
  if (home != undefined) {
    home.textContent = num -= activeWorkerCount;
  }
}
function aWPlus(x) {
  activeWorkerCount += x;
}
function aWMinus(x) {
  activeWorkerCount -= x;
}
function weekProjects() {
  projectArray.forEach(proj => {
    if (proj.type == "Active" || proj.type == "building" || proj.type == "Active-Fix") {
      proj.duration -= proj.workers;
      if (proj.duration <= 0) {
        (0,_endEvents__WEBPACK_IMPORTED_MODULE_1__["default"])(proj);
      }
    } else if (proj.type == "Passive") {
      proj.duration -= 1;
      if (proj.duration <= 0) {
        (0,_endEvents__WEBPACK_IMPORTED_MODULE_1__["default"])(proj);
      }
    }
  });
}
function removeCompleted() {
  let empties = [];
  projectArray.forEach(proj => {
    if (proj.duration <= 0) {
      let place = projectArray.findIndex(e => e.count == proj.count);
      empties.push(place);
    }
  });
  let source = empties.reverse();
  for (let n = 0; n < empties.length; n++) {
    let test = source[n];
    projectArray.splice(test, 1);
  }
}


/***/ }),

/***/ "./src/renderActionsArea.js":
/*!**********************************!*\
  !*** ./src/renderActionsArea.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ renderActionsArea)
/* harmony export */ });
/* harmony import */ var _economyStats__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./economyStats */ "./src/economyStats.js");
/* harmony import */ var _safetyStats__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./safetyStats */ "./src/safetyStats.js");
/* harmony import */ var _survivalStats__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./survivalStats */ "./src/survivalStats.js");



function renderActionsArea() {
  let wrapper = document.querySelector("#setStatus");
  wrapper.innerHTML = "";
  wrapper.classList.add("flexCol");
  let header = document.createElement("div");
  header.classList.add("subHeader");
  header.textContent = "Player Character Actions";
  header.style = "border-radius: .5rem .5rem 0 0; padding: 1.4rem";
  wrapper.appendChild(header);
  let surHeader = document.createElement("div");
  surHeader.textContent = "Survival Actions";
  surHeader.classList.add("text-center");
  wrapper.appendChild(surHeader);
  let surArea = document.createElement("div");
  surArea.style = "display: flex; flex-wrap: wrap; justify-content: space-around";
  _survivalStats__WEBPACK_IMPORTED_MODULE_2__.surActions.forEach(act => {
    let btn = document.createElement("button");
    btn.textContent = act.name;
    btn.addEventListener("click", () => {
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_2__.showSurAction)(act);
    });
    btn.style = "width: 33%; font-size: 15px";
    surArea.appendChild(btn);
  });
  wrapper.appendChild(surArea);
  let safHeader = document.createElement("div");
  safHeader.textContent = "Safety Actions";
  safHeader.classList.add("text-center");
  wrapper.appendChild(safHeader);
  let safArea = document.createElement("div");
  safArea.style = "display: flex; flex-wrap: wrap; justify-content: space-around";
  _safetyStats__WEBPACK_IMPORTED_MODULE_1__.safActions.forEach(act => {
    let btn = document.createElement("button");
    btn.textContent = act.name;
    btn.addEventListener("click", () => {
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_1__.showSafAction)(act);
    });
    btn.style = "width: 33%; font-size: 15px";
    safArea.appendChild(btn);
  });
  wrapper.appendChild(safArea);
  let eHeader = document.createElement("div");
  eHeader.textContent = "Economy Actions";
  eHeader.classList.add("text-center");
  wrapper.appendChild(eHeader);
  let eArea = document.createElement("div");
  eArea.style = "display: flex; flex-wrap: wrap; justify-content: space-around";
  _economyStats__WEBPACK_IMPORTED_MODULE_0__.econActions.forEach(act => {
    let btn = document.createElement("button");
    btn.textContent = act.name;
    btn.addEventListener("click", () => {
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.showEconAction)(act);
    });
    btn.style = "width: 33%; font-size: 15px; height:";
    eArea.appendChild(btn);
  });
  wrapper.appendChild(eArea);
}

/***/ }),

/***/ "./src/renderBuildings.js":
/*!********************************!*\
  !*** ./src/renderBuildings.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   renderBuildings: () => (/* binding */ renderBuildings)
/* harmony export */ });
/* harmony import */ var _buildingsStats__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./buildingsStats */ "./src/buildingsStats.js");
/* harmony import */ var _renderUpgrades__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./renderUpgrades */ "./src/renderUpgrades.js");
/* harmony import */ var _showBldgUpgrade__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./showBldgUpgrade */ "./src/showBldgUpgrade.js");



function renderBuildings() {
  let wrapper = document.querySelector("#contentArea");
  wrapper.innerHTML = "";
  let header = document.createElement("div");
  header.classList.add("subHeader");
  header.textContent = "Building Management";
  wrapper.appendChild(header);
  if (_buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[2].level >= 3 || _buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[3].level >= 1 || _buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[4].level >= 1 || _buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[5].level >= 3 || _buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[8].level >= 3) {
    let bldgActionHeader = document.createElement("div");
    bldgActionHeader.textContent = "Building Actions";
    bldgActionHeader.classList.add("text-center");
    wrapper.appendChild(bldgActionHeader);
    let actionBox = document.createElement("div");
    actionBox.classList.add("flexRow", "center", "gap");
    if (_buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[2].level >= 3) {
      let isrBtn = document.createElement("button");
      isrBtn.style = "width: 8rem;";
      isrBtn.textContent = "Active ISR";
      actionBox.appendChild(isrBtn);
    }
    if (_buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[3].level >= 1) {
      let feedBtn = document.createElement("button");
      feedBtn.style = "width: 8rem";
      feedBtn.textContent = "Feed Troops";
      actionBox.appendChild(feedBtn);
    }
    if (_buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[4].level >= 1) {
      let harvestBtn = document.createElement("button");
      harvestBtn.style = "width: 8rem";
      harvestBtn.textContent = "Harvest";
      actionBox.appendChild(harvestBtn);
    }
    if (_buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[5].level >= 3) {
      let firesaleBtn = document.createElement("button");
      firesaleBtn.style = "width: 8rem";
      firesaleBtn.textContent = "Firesale";
      actionBox.appendChild(firesaleBtn);
    }
    if (_buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[8].level >= 3) {
      let triageBtn = document.createElement("button");
      triageBtn.style = "width: 8rem";
      triageBtn.textContent = "Triage";
      actionBox.appendChild(triageBtn);
    }
    wrapper.appendChild(actionBox);
  }
  _buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings.forEach(bldg => {
    let row = document.createElement("div");
    row.style = "display: flex; align-items: center; height: 8.333%; padding: 0 1rem;";
    let title = document.createElement("div");
    title.textContent = bldg.name;
    title.style = "font-size: 18px; width: 15%; padding-left: .5rem; box-sizing: border-box";
    row.appendChild(title);
    let buttonRow = document.createElement("div");
    buttonRow.style = "width: 8%; display: flex; justify-content: space-evenly";
    let button0 = document.createElement("button");
    button0.textContent = "0";
    button0.classList.add("bldgBtn");
    button0.id = `${bldg.id}0`;
    buttonRow.appendChild(button0);
    let button1 = document.createElement("button");
    button1.textContent = "1";
    button1.classList.add("bldgBtn");
    button1.id = `${bldg.id}1`;
    buttonRow.appendChild(button1);
    let button2 = document.createElement("button");
    button2.textContent = "2";
    button2.classList.add("bldgBtn");
    button2.id = `${bldg.id}2`;
    buttonRow.appendChild(button2);
    let button3 = document.createElement("button");
    button3.textContent = "3";
    button3.classList.add("bldgBtn");
    button3.id = `${bldg.id}3`;
    buttonRow.appendChild(button3);
    row.appendChild(buttonRow);
    let statusArea = document.createElement("div");
    statusArea.textContent = bldg.status;
    statusArea.style = "font-size: 15px; margin-left: 2rem;";
    row.appendChild(statusArea);
    switch (bldg.level) {
      case 0:
        button0.style = "background: green";
        break;
      case 0.5:
        button0.style = "background: gray";
        button1.style = "background: yellow";
        break;
      case 1:
        button0.style = "background: gray";
        button1.style = "background: green";
        break;
      case 1.5:
        button0.style = "background: gray";
        button1.style = "background: gray";
        button2.style = "background: yellow";
        break;
      case 2:
        button0.style = "background: gray";
        button1.style = "background: gray";
        button2.style = "background: green";
        break;
      case 2.5:
        button0.style = "background: gray";
        button1.style = "background: gray";
        button2.style = "background: gray";
        button3.style = "background: yellow";
        break;
      case 3:
        button0.style = "background: gray";
        button1.style = "background: gray";
        button2.style = "background: gray";
        button3.style = "background: green";
    }
    wrapper.appendChild(row);
  });
  let buttons = document.querySelectorAll(".bldgBtn");
  buttons.forEach(btn => {
    btn.addEventListener("click", () => {
      let id = btn.id.slice(0, -1);
      let lvl = btn.id.slice(-1);
      let e = _buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings.findIndex(e => e.id == id);
      (0,_showBldgUpgrade__WEBPACK_IMPORTED_MODULE_2__["default"])(_buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[e], lvl);
    });
  });
}


/***/ }),

/***/ "./src/renderDeployed.js":
/*!*******************************!*\
  !*** ./src/renderDeployed.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   deployedArray: () => (/* binding */ deployedArray),
/* harmony export */   renderDeployed: () => (/* binding */ renderDeployed),
/* harmony export */   setDeployed: () => (/* binding */ setDeployed)
/* harmony export */ });
/* harmony import */ var _pageRenders__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pageRenders */ "./src/pageRenders.js");
/* harmony import */ var _safetyStats__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./safetyStats */ "./src/safetyStats.js");


let deployedArray = [];
function setDeployed(data) {
  deployedArray = data;
}
function renderDeployed() {
  let wrapper = document.querySelector("#deployArea");
  wrapper.innerHTML = "";
  wrapper.style = "background: rgba(211,211,211,.3); height: 37rem; border-radius: .5rem; overflow-y: scroll; scrollbar-width: none";
  deployedArray.forEach(deployment => {
    let row = document.createElement("div");
    row.classList.add("flexRow", "center");
    row.style = `background: rgba(${deployment.color.r},${deployment.color.g},${deployment.color.b},.2); padding: .5rem; border-radius: .5rem; margin: .5rem; border: 1px solid rgba(${deployment.color.r},${deployment.color.g},${deployment.color.b},1); flex-wrap: wrap`;
    let expandBtnBox = document.createElement("div");
    expandBtnBox.style = "width: 5%";
    let expandBtn = document.createElement("button");
    expandBtn.classList.add("expandBtn");
    if (deployment.hide == true) {
      expandBtn.innerHTML = "&#8680;";
    } else {
      expandBtn.innerHTML = "&#8681;";
    }
    expandBtn.addEventListener("click", () => {
      if (deployment.hide == true) {
        deployment.hide = false;
        renderDeployed();
      } else {
        deployment.hide = true;
        renderDeployed();
      }
    });
    expandBtnBox.appendChild(expandBtn);
    row.appendChild(expandBtnBox);
    let nameBox = document.createElement("div");
    nameBox.textContent = deployment.troop;
    nameBox.classList.add("text-center");
    nameBox.style = "width: 18%";
    row.appendChild(nameBox);
    let healthBox = document.createElement("div");
    healthBox.classList.add("flexRow", "center");
    healthBox.style = "width: 18%";
    let currentHealth = document.createElement("input");
    currentHealth.value = deployment.hp;
    currentHealth.type = "number";
    currentHealth.style = "width: 33%; border: none; background: rgba(250,250,250,.2)";
    currentHealth.addEventListener("change", () => {
      deployment.hp = currentHealth.value;
    });
    healthBox.appendChild(currentHealth);
    let maxHealth = document.createElement("div");
    maxHealth.textContent = "/" + deployment.maxhp;
    healthBox.appendChild(maxHealth);
    row.appendChild(healthBox);
    let ac = document.createElement("div");
    ac.textContent = deployment.ac;
    ac.classList.add("text-center");
    ac.style = "width: 12%";
    row.appendChild(ac);
    let ref = document.createElement("div");
    ref.textContent = deployment.ref;
    ref.classList.add("text-center");
    ref.style = "width: 12%";
    row.appendChild(ref);
    let attack = document.createElement("div");
    attack.textContent = deployment.attack;
    attack.classList.add("text-center");
    attack.style = "width: 12%";
    row.appendChild(attack);
    let iBonus = document.createElement("div");
    iBonus.classList.add("flexRow");
    iBonus.style = "width: 18%;";
    let oIBonus = document.createElement("div");
    oIBonus.style = `width: 50%; height: 22px; background-position: center;`;
    if (deployment.intelOff == 1) {
      oIBonus.classList.add("intelOff", "tooltip");
      let tip = document.createElement("span");
      tip.textContent = `Increase attack damage by ${deployment.level}`;
      tip.classList.add("tooltiptext");
      oIBonus.appendChild(tip);
    }
    iBonus.appendChild(oIBonus);
    let dIBonus = document.createElement("div");
    dIBonus.style = `width: 50%; height: 22px; background-position: center;`;
    if (deployment.intelDef == 1) {
      dIBonus.classList.add("intelDef", "tooltip");
      let tip2 = document.createElement("span");
      tip2.classList.add("tooltiptext");
      tip2.textContent = `Gain Resistance ${deployment.level} against ${deployment.intelDefValue}`;
      dIBonus.appendChild(tip2);
    }
    iBonus.appendChild(dIBonus);
    row.appendChild(iBonus);
    let cxBox = document.createElement("div");
    cxBox.style = "width: 5%";
    cxBox.classList.add("flexRow", "center");
    let cxBtn = document.createElement("button");
    cxBtn.textContent = "X";
    cxBtn.style = "border-radius: 1rem; background: aliceblue";
    cxBtn.addEventListener("click", () => {
      let answer = confirm("Are you sure you want to send this troop home? Troops lower than 50% health will NOT restore Garrison.");
      if (answer == true) {
        let index = deployedArray.findIndex(e => e.count == deployment.count);
        if (deployment.hp >= deployment.maxhp / 2) {
          (0,_safetyStats__WEBPACK_IMPORTED_MODULE_1__.garCurrent)(deployment.garrison);
        }
        deployedArray.splice(index, 1);
        renderDeployed();
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_0__.renderAll)();
      }
    });
    cxBox.appendChild(cxBtn);
    row.appendChild(cxBox);
    let noteArea = document.createElement("textarea");
    noteArea.value = deployment.notes;
    noteArea.style = "height: 10rem; resize: none; overflow-y: scroll; scrollbar-width: none; width: 100%";
    noteArea.addEventListener("change", () => {
      deployment.notes = noteArea.value;
    });
    if (deployment.hide == false) {
      row.appendChild(noteArea);
    }
    deployArea.appendChild(row);
  });
}


/***/ }),

/***/ "./src/renderNotes.js":
/*!****************************!*\
  !*** ./src/renderNotes.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   renderNotes: () => (/* binding */ renderNotes),
/* harmony export */   setNotes: () => (/* binding */ setNotes),
/* harmony export */   userNotes: () => (/* binding */ userNotes)
/* harmony export */ });
/* harmony import */ var _settlementStats__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./settlementStats */ "./src/settlementStats.js");
/* harmony import */ var _storage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./storage */ "./src/storage.js");
/* harmony import */ var _weekLog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./weekLog */ "./src/weekLog.js");



let userNotes = "";
function renderNotes() {
  let wrapper = document.querySelector("#contentArea");
  wrapper.innerHTML = "";
  let header = document.createElement("div");
  header.classList.add("subHeader");
  header.textContent = "Notes";
  wrapper.appendChild(header);
  let notes = document.createElement("textarea");
  notes.style = ' overflow-y: scroll; font-family: "monospace";';
  notes.placeholder = "Start writing some notes...";
  notes.value = userNotes;
  notes.addEventListener("change", () => {
    (0,_storage__WEBPACK_IMPORTED_MODULE_1__.saveSettlement)(_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.name);
    userNotes = notes.value;
  });
  wrapper.appendChild(notes);
  notes.scrollTop = 9999999;
}
function setNotes(data) {
  userNotes = data;
}


/***/ }),

/***/ "./src/renderProjects.js":
/*!*******************************!*\
  !*** ./src/renderProjects.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ renderProjects)
/* harmony export */ });
/* harmony import */ var _endEvents__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./endEvents */ "./src/endEvents.js");
/* harmony import */ var _newFixEvent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./newFixEvent */ "./src/newFixEvent.js");
/* harmony import */ var _pageRenders__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pageRenders */ "./src/pageRenders.js");
/* harmony import */ var _projectBoxRender__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./projectBoxRender */ "./src/projectBoxRender.js");




function renderProjects() {
  let wrapper = document.querySelector("#projectBox");
  wrapper.innerHTML = "";
  _projectBoxRender__WEBPACK_IMPORTED_MODULE_3__.projectArray.forEach(event => {
    let eventRow = document.createElement("div");
    eventRow.classList.add("eventRow");
    let boxOne = document.createElement("div");
    boxOne.style = "display:flex; width: 25%; align-items: start; justify-content: start; gap: 1rem; height: 32px;";
    let expandBtn = document.createElement("button");
    expandBtn.classList.add("expandBtn");
    if (event.hide == true) {
      expandBtn.innerHTML = "&#8680;";
    } else {
      expandBtn.innerHTML = "&#8681;";
    }
    expandBtn.addEventListener("click", () => {
      if (event.hide == true) {
        let test = event.count;
        let find = _projectBoxRender__WEBPACK_IMPORTED_MODULE_3__.projectArray.findIndex(e => e.count == test);
        _projectBoxRender__WEBPACK_IMPORTED_MODULE_3__.projectArray[find].hide = false;
        console.log(_projectBoxRender__WEBPACK_IMPORTED_MODULE_3__.projectArray);
        renderProjects();
      } else {
        let test = event.count;
        let find = _projectBoxRender__WEBPACK_IMPORTED_MODULE_3__.projectArray.findIndex(e => e.count == test);
        _projectBoxRender__WEBPACK_IMPORTED_MODULE_3__.projectArray[find].hide = true;
        renderProjects();
      }
    });
    boxOne.appendChild(expandBtn);
    let title = document.createElement("div");
    title.textContent = event.name;
    title.classList.add("eventTitle");
    title.style = "font-size: 15px; padding-bottom: 17px;";
    boxOne.appendChild(title);
    eventRow.appendChild(boxOne);
    let boxTwo = document.createElement("div");
    boxTwo.style = "display:flex; width: 25%; align-items: start; justify-content: start; gap: 1rem; height: 32px;";
    let durationBox = document.createElement("div");
    durationBox.classList.add("durationBox");
    let durationLabel = document.createElement("div");
    durationLabel.style = "align-self: start;";
    if (event.type == "Active" || event.type == "building" || event.type == "Active-Fix") {
      durationLabel.textContent = "Productivity Remaining:";
    } else if (event.type == "Passive") {
      durationLabel.textContent = "Weeks Remaining:";
    } else if (event.type == "Indefinite") {
      durationLabel.textContent = "Ongoing";
    }
    durationBox.appendChild(durationLabel);
    if (event.type != "Indefinite") {
      let durationVal = document.createElement("div");
      durationVal.textContent = event.duration;
      durationVal.style = "align-self: start;";
      durationBox.appendChild(durationVal);
    }
    boxTwo.appendChild(durationBox);
    eventRow.appendChild(boxTwo);
    let boxThree = document.createElement("div");
    boxThree.style = "display:flex; width: 25%; align-items: start; justify-content: start; gap: 1rem; height: 32px;";
    if (event.type == "Active" || event.type == "building" || event.type == "Active-Fix") {
      let workerBox = document.createElement("div");
      workerBox.classList.add("workerBox");
      let workersAssigned = document.createElement("div");
      workersAssigned.textContent = "Workers Assigned:";
      workerBox.appendChild(workersAssigned);
      let removeWorkerBtn = document.createElement("button");
      removeWorkerBtn.classList.add("changeWorkerBtn");
      removeWorkerBtn.textContent = "-";
      removeWorkerBtn.addEventListener("click", () => {
        removeWorker(event);
      });
      workerBox.appendChild(removeWorkerBtn);
      let workerValue = document.createElement("div");
      workerValue.textContent = event.workers;
      workerValue.classList.add("workerValue");
      workerBox.appendChild(workerValue);
      let addWorkerBtn = document.createElement("button");
      addWorkerBtn.classList.add("changeWorkerBtn");
      addWorkerBtn.textContent = "+";
      addWorkerBtn.addEventListener("click", () => {
        addWorker(event);
      });
      workerBox.appendChild(addWorkerBtn);
      boxThree.appendChild(workerBox);
    } else {}
    if (event.type == "Indefinite" && event.hasLink == false) {
      let linkFix = document.createElement("button");
      linkFix.style = "font-size: 12px; margin-left: 10%;";
      linkFix.textContent = "Link Fix Action";
      linkFix.addEventListener("click", () => {
        (0,_newFixEvent__WEBPACK_IMPORTED_MODULE_1__["default"])(event.count);
      });
      boxThree.appendChild(linkFix);
    }
    eventRow.appendChild(boxThree);
    let boxFour = document.createElement("div");
    boxFour.style = "display:flex; width: 25%; align-items: start; justify-content: space-between; gap: 1rem;";
    let impactBox = document.createElement("div");
    impactBox.classList.add("eventImpactBox");
    for (let i = 0; i < event.impactItems.length; i++) {
      let impactRow = document.createElement("div");
      impactRow.style = "display: flex; align-items: center; gap: 4px;";
      let num = document.createElement("div");
      num.textContent = event.impactVals[i];
      impactRow.appendChild(num);
      let item = document.createElement("div");
      item.textContent = event.impactItems[i];
      impactRow.appendChild(item);
      impactBox.appendChild(impactRow);
    }
    boxFour.appendChild(impactBox);
    let endBtn = document.createElement("button");
    endBtn.classList.add("endBtn");
    endBtn.textContent = "X";
    endBtn.addEventListener("click", () => {
      let place = event.count;
      let index = _projectBoxRender__WEBPACK_IMPORTED_MODULE_3__.projectArray.findIndex(e => e.count == place);
      let question = confirm("Are you sure you want to end this event? This should only be done at GM direction.");
      if (question == true) {
        (0,_endEvents__WEBPACK_IMPORTED_MODULE_0__["default"])(event);
        _projectBoxRender__WEBPACK_IMPORTED_MODULE_3__.projectArray.splice(index, 1);
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_2__.renderAll)();
      }
    });
    boxFour.appendChild(endBtn);
    eventRow.appendChild(boxFour);
    let descriptionBox = document.createElement("div");
    descriptionBox.id = `desc${event.count}`;
    descriptionBox.style = "width: 200%; height: 10rem; max-height: 20rem; margin-bottom: .5rem";
    if (event.hide == true) {
      descriptionBox.classList.add("hidden", "descBox");
    }
    let descriptionLabel = document.createElement("div");
    descriptionLabel.textContent = "Event Description";
    descriptionLabel.style = "display: flex; justify-content: center; align-items: center; font-size: 15px;";
    descriptionBox.appendChild(descriptionLabel);
    let details = document.createElement("textarea");
    details.value = event.details;
    details.style = "overflow-y: scroll; resize: none; font-size: 15px; width: 98%; height: 80%; margin-bottom: .5rem";
    if (event.type == "building") {
      details.readOnly = true;
    }
    details.addEventListener("change", () => {
      event.details = details.value;
    });
    descriptionBox.appendChild(details);
    eventRow.appendChild(descriptionBox);
    wrapper.appendChild(eventRow);
  });
}
function addWorker(proj) {
  if ((0,_projectBoxRender__WEBPACK_IMPORTED_MODULE_3__.calcWorkers)() > 0) {
    proj.workers += 1;
    (0,_projectBoxRender__WEBPACK_IMPORTED_MODULE_3__.aWPlus)(1);
    (0,_projectBoxRender__WEBPACK_IMPORTED_MODULE_3__.projectBoxRender)();
    renderProjects();
  }
}
function removeWorker(proj) {
  if (proj.workers > 0) {
    proj.workers -= 1;
    (0,_projectBoxRender__WEBPACK_IMPORTED_MODULE_3__.aWMinus)(1);
    (0,_projectBoxRender__WEBPACK_IMPORTED_MODULE_3__.projectBoxRender)();
    renderProjects();
  }
}

/***/ }),

/***/ "./src/renderTroops.js":
/*!*****************************!*\
  !*** ./src/renderTroops.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ renderTroops)
/* harmony export */ });
/* harmony import */ var _buildingsStats__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./buildingsStats */ "./src/buildingsStats.js");
/* harmony import */ var _economyStats__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./economyStats */ "./src/economyStats.js");
/* harmony import */ var _openGlossary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./openGlossary */ "./src/openGlossary.js");
/* harmony import */ var _pageRenders__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pageRenders */ "./src/pageRenders.js");
/* harmony import */ var _renderDeployed__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./renderDeployed */ "./src/renderDeployed.js");
/* harmony import */ var _safetyStats__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./safetyStats */ "./src/safetyStats.js");
/* harmony import */ var _survivalStats__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./survivalStats */ "./src/survivalStats.js");







let intelDef = 0;
let intelOff = 0;
let selectValue = "";
let colorValue = "";
let troopCount = 0;
function renderTroops() {
  let wrapper = document.querySelector("#contentArea");
  wrapper.innerHTML = "";
  let header = document.createElement("div");
  header.classList.add("subHeader");
  header.id = "troopScreen";
  header.textContent = "Garrison and Troop Information";
  wrapper.appendChild(header);
  let content = document.createElement("div");
  content.style = "display: flex";
  wrapper.appendChild(content);
  let troopBox = document.createElement("div");
  troopBox.style = "width: 50%; padding-left: 1rem; overflow-y: scroll; box-sizing: border-box; height: 725px; scrollbar-width: none; padding-right: 1rem";
  let barracksHeader = document.createElement("div");
  barracksHeader.textContent = "Barracks Troops";
  barracksHeader.classList.add("subHeader");
  barracksHeader.style = "background: none";
  troopBox.appendChild(barracksHeader);
  let example = document.createElement("div");
  example.classList.add("troopRow");
  let eTitle = document.createElement("div");
  eTitle.textContent = "Name";
  example.appendChild(eTitle);
  let eHP = document.createElement("div");
  eHP.textContent = "Max Health";
  eHP.classList.add("text-center");
  example.appendChild(eHP);
  let eAC = document.createElement("div");
  eAC.textContent = "AC";
  example.appendChild(eAC);
  let eRef = document.createElement("div");
  eRef.textContent = "Reflex";
  example.appendChild(eRef);
  let eAttack = document.createElement("div");
  eAttack.textContent = "Attack DC";
  example.appendChild(eAttack);
  let eDam = document.createElement("div");
  eDam.textContent = "Damage";
  example.appendChild(eDam);
  troopBox.appendChild(example);
  let barracks = _buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[3].level;
  switch (barracks) {
    case 0:
    case 0.5:
      troopBox.appendChild(renderTroopBlock(2, barracksTroopInfo));
      break;
    case 1:
    case 1.5:
      troopBox.appendChild(renderTroopBlock(4, barracksTroopInfo));
      break;
    case 2:
    case 2.5:
      troopBox.appendChild(renderTroopBlock(8, barracksTroopInfo));
      break;
    case 3:
      troopBox.appendChild(renderTroopBlock(12, barracksTroopInfo));
      break;
  }
  let infirmary = _buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[8].level;
  if (infirmary >= 2) {
    let iHeader = document.createElement("div");
    iHeader.textContent = "Infirmary Troops";
    iHeader.classList.add("subHeader");
    iHeader.style = "background: none;";
    troopBox.appendChild(iHeader);
    switch (infirmary) {
      case 2:
      case 2.5:
        troopBox.appendChild(renderTroopBlock(1, infirmaryTroopInfo));
        break;
      case 3:
        troopBox.appendChild(renderTroopBlock(2, infirmaryTroopInfo));
        break;
      default:
        break;
    }
  }
  let school = _buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[7].level;
  if (school >= 2) {
    let sHeader = document.createElement("div");
    sHeader.textContent = "School Troops";
    sHeader.classList.add("subHeader");
    sHeader.style = "background: none";
    troopBox.appendChild(sHeader);
    switch (school) {
      case 2:
      case 2.5:
        troopBox.appendChild(renderTroopBlock(1, schoolTroopInfo));
        break;
      case 3:
        troopBox.appendChild(renderTroopBlock(2, schoolTroopInfo));
        break;
      default:
        break;
    }
  }
  content.appendChild(troopBox);
  let troopInfoBox = document.createElement("div");
  troopInfoBox.id = "troopInfoBox";
  troopInfoBox.style = "width: 50%; padding: 0 1rem; box-sizing: border-box; border-left: 1px solid rgba(0,0,0,.2); margin-right: 1rem; height: 46.5rem";
  let deployHeader = document.createElement("div");
  deployHeader.classList.add("subHeader");
  deployHeader.style = "background: none";
  deployHeader.textContent = "Deployed Troops";
  troopInfoBox.appendChild(deployHeader);
  let btnBox = document.createElement("div");
  let btn = document.createElement("button");
  btn.textContent = "Deploy New Troop";
  btn.style = "width: 100%";
  btn.addEventListener("click", () => {
    renderDeployWindow();
  });
  btnBox.appendChild(btn);
  troopInfoBox.appendChild(btnBox);
  let dRow = document.createElement("div");
  dRow.classList.add("flexRow");
  dRow.style = "padding: .5rem; margin: .5rem";
  let spacer = document.createElement("div");
  spacer.innerHTML = "&nbsp;";
  spacer.style = "width: 5%";
  dRow.appendChild(spacer);
  let dName = document.createElement("div");
  dName.classList.add("text-center");
  dName.textContent = "Name";
  dName.style = "width: 18%";
  dRow.appendChild(dName);
  let dHealth = document.createElement("div");
  dHealth.classList.add("text-center");
  dHealth.textContent = "Health";
  dHealth.style = "width: 18%";
  dRow.appendChild(dHealth);
  let dac = document.createElement("div");
  dac.classList.add("text-center");
  dac.textContent = "AC";
  dac.style = "width: 12%";
  dRow.appendChild(dac);
  let dref = document.createElement("div");
  dref.classList.add("text-center");
  dref.textContent = "Reflex";
  dref.style = "width: 12%";
  dRow.appendChild(dref);
  let dattack = document.createElement("div");
  dattack.classList.add("text-center");
  dattack.textContent = "Attack";
  dattack.style = "width: 12%";
  dRow.appendChild(dattack);
  let dIntel = document.createElement("div");
  dIntel.classList.add("text-center");
  dIntel.textContent = "Bonuses";
  dIntel.style = "width: 18%";
  dRow.appendChild(dIntel);
  troopInfoBox.appendChild(dRow);
  let spacer2 = document.createElement("div");
  spacer2.innerHTML = "&nbsp;";
  spacer2.style = "width: 5%";
  dRow.appendChild(spacer2);
  let deployArea = document.createElement("div");
  deployArea.id = "deployArea";
  troopInfoBox.appendChild(deployArea);

  //////if intelDefMod == 1, use shield icon;
  //////if intelOffMod == 1, use swords icon;
  //////background color = troopcolor;
  //////hp is input number;
  //////show any bonuses for the troop instead of damage or whatever;

  content.appendChild(troopInfoBox);
  (0,_renderDeployed__WEBPACK_IMPORTED_MODULE_4__.renderDeployed)();
}
let troopnotes = "";
function renderDeployWindow() {
  let garrisonFail = 0;
  let intelFail = 0;
  let equipmentFail = 0;
  let barracks = _buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[3].level;
  let infirmary = _buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[8].level;
  let school = _buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[7].level;
  let wrapper = document.querySelector("#troopInfoBox");
  wrapper.innerHTML = "";
  let deployTroopsHeader = document.createElement("div");
  deployTroopsHeader.textContent = "Deploy Troops";
  deployTroopsHeader.classList.add("subHeader");
  deployTroopsHeader.style = "background: none;";
  wrapper.appendChild(deployTroopsHeader);
  let selectRow = document.createElement("div");
  selectRow.classList.add("flexRow");
  selectRow.style = "margin-bottom: 1rem;";
  let selectorLabel = document.createElement("div");
  selectorLabel.textContent = "Select Troop";
  selectorLabel.style = "width: 50%; box-sizing: border-box; padding-left: 0rem";
  selectRow.appendChild(selectorLabel);
  let troopSelector = document.createElement("select");
  troopSelector.style = "width: 50%";
  troopSelector.id = "troopSelector";
  switch (barracks) {
    case 0:
    case 0.5:
      troopSelector.appendChild(troopSelect(2, barracksTroopInfo));
      break;
    case 1:
    case 1.5:
      troopSelector.appendChild(troopSelect(4, barracksTroopInfo));
      break;
    case 2:
    case 2.5:
      troopSelector.appendChild(troopSelect(8, barracksTroopInfo));
      break;
    case 3:
      troopSelector.appendChild(troopSelect(12, barracksTroopInfo));
      break;
  }
  switch (infirmary) {
    case 2:
    case 2.5:
      troopSelector.appendChild(troopSelect(1, infirmaryTroopInfo));
      break;
    case 3:
      troopSelector.appendChild(troopSelect(2, infirmaryTroopInfo));
      break;
    default:
      break;
  }
  switch (school) {
    case 2:
    case 2.5:
      troopSelector.appendChild(troopSelect(1, schoolTroopInfo));
      break;
    case 3:
      troopSelector.appendChild(troopSelect(2, schoolTroopInfo));
      break;
    default:
      break;
  }
  selectRow.appendChild(troopSelector);
  troopSelector.value = selectValue;
  troopSelector.addEventListener("change", () => {
    selectValue = troopSelector.value;
    renderDeployWindow();
  });
  wrapper.appendChild(selectRow);
  let colorRow = document.createElement("div");
  colorRow.classList.add("flexRow");
  colorRow.style = "margin-bottom: 1rem";
  let colorLabel = document.createElement("div");
  colorLabel.textContent = "Select Color";
  colorLabel.style = "width: 50%";
  colorRow.appendChild(colorLabel);
  let colorPick = document.createElement("input");
  colorPick.style = "width: 50%";
  colorPick.type = "color";
  colorPick.id = "troopColorPick";
  colorPick.value = colorValue;
  colorPick.addEventListener("change", () => {
    colorValue = colorPick.value;
  });
  colorRow.appendChild(colorPick);
  wrapper.appendChild(colorRow);
  let eImpactRow = document.createElement("div");
  eImpactRow.classList.add("flexRow");
  eImpactRow.style = "margin-bottom: 1rem;";
  let eImpactLabel = document.createElement("div");
  eImpactLabel.textContent = "Economy Equipment Impact";
  eImpactLabel.style = "width: 50%;";
  eImpactRow.appendChild(eImpactLabel);
  let equipValue = document.createElement("div");
  if (calcEquipMod() - amod - dmod > 0) {
    equipValue.textContent = "+" + (calcEquipMod() - amod - dmod) + " Point(s) Left";
    equipValue.style = "color: blue; width: 50%";
    equipmentFail++;
  } else if (calcEquipMod() - amod - dmod < 0) {
    equipValue.textContent = calcEquipMod() - amod - dmod + " Point(s) Left";
    equipValue.style = "color: red; width: 50%";
    equipmentFail++;
  } else if (calcEquipMod() - amod - dmod == 0) {
    equipValue.textContent = "0 Points Left";
    equipValue.style = "color: green; width: 50%";
  }
  eImpactRow.appendChild(equipValue);
  wrapper.appendChild(eImpactRow);
  let dModRow = document.createElement("div");
  dModRow.classList.add("flexRow");
  dModRow.style = "margin-bottom: 1rem";
  let dModLabel = document.createElement("div");
  dModLabel.textContent = "Defensive Mod";
  dModLabel.style = "width: 50%";
  dModRow.appendChild(dModLabel);
  let dModValue = dModSelect();
  dModValue.id = "dModValue";
  dModValue.style = "width: 50%";
  dModRow.appendChild(dModValue);
  wrapper.appendChild(dModRow);
  let aModRow = document.createElement("div");
  aModRow.classList.add("flexRow");
  aModRow.style = "margin-bottom: 1rem";
  let aModLabel = document.createElement("div");
  aModLabel.textContent = "Offensive Mod";
  aModLabel.style = "width: 50%";
  aModRow.appendChild(aModLabel);
  let aModValue = aModSelect();
  aModValue.id = "aModValue";
  aModValue.style = "width: 50%";
  aModRow.appendChild(aModValue);
  wrapper.appendChild(aModRow);
  let intelRowDef = document.createElement("div");
  intelRowDef.classList.add("flexRow");
  intelRowDef.style = "margin-bottom: 1rem;";
  let intelLabelDef = document.createElement("div");
  intelLabelDef.textContent = "Spend Intelligence to grant Resistance equal to Troop Level?";
  intelLabelDef.style = "width: 50%";
  intelRowDef.appendChild(intelLabelDef);
  let intelDefSelect = document.createElement("select");
  intelDefSelect.style = "width: 15%";
  let iDefNo = document.createElement("option");
  iDefNo.label = "No";
  iDefNo.value = "false";
  intelDefSelect.appendChild(iDefNo);
  if (_safetyStats__WEBPACK_IMPORTED_MODULE_5__.safety.intelC > 0) {
    let iDefYes = document.createElement("option");
    iDefYes.label = "Yes";
    iDefYes.value = "true";
    intelDefSelect.appendChild(iDefYes);
  }
  intelRowDef.appendChild(intelDefSelect);
  if (intelDef == 0) {
    intelDefSelect.value = "false";
  } else if (intelDef == 1) {
    intelDefSelect.value = "true";
  }
  intelDefSelect.addEventListener("change", () => {
    if (intelDefSelect.value == "true") {
      intelDef = 1;
      renderDeployWindow();
    } else if (intelDefSelect.value == "false") {
      intelDef = 0;
      renderDeployWindow();
    }
  });
  if (intelDef == 1) {
    let type = document.createElement("select");
    type.id = "iDefYes";
    type.style = "width: 35%";
    let piercing = document.createElement("option");
    piercing.value = "piercing";
    piercing.label = "Piercing";
    type.appendChild(piercing);
    let slashing = document.createElement("option");
    slashing.value = "slashing";
    slashing.label = "Slashing";
    type.appendChild(slashing);
    let bludgeoning = document.createElement("option");
    bludgeoning.value = "bludgeoning";
    bludgeoning.label = "Bludgeoning";
    type.appendChild(bludgeoning);
    let fire = document.createElement("option");
    fire.value = "fire";
    fire.label = "Fire";
    type.appendChild(fire);
    let cold = document.createElement("option");
    cold.value = "cold";
    cold.label = "Cold";
    type.appendChild(cold);
    intelRowDef.appendChild(type);
  }
  wrapper.appendChild(intelRowDef);
  let intelRowOff = document.createElement("div");
  intelRowOff.classList.add("flexRow");
  intelRowOff.style = "margin-bottom: 1rem";
  let intelLabelOff = document.createElement("div");
  intelLabelOff.textContent = "Spend Intelligence to grant bonus damage equal to Troop Level?";
  intelLabelOff.style = "width: 50%";
  intelRowOff.appendChild(intelLabelOff);
  let intelOffSelect = document.createElement("select");
  intelOffSelect.style = "width: 15%";
  let iOffNo = document.createElement("option");
  iOffNo.label = "No";
  iOffNo.value = "false";
  intelOffSelect.appendChild(iOffNo);
  if (_safetyStats__WEBPACK_IMPORTED_MODULE_5__.safety.intelC > 0) {
    let iOffYes = document.createElement("option");
    iOffYes.id = "iOffYes";
    iOffYes.label = "Yes";
    iOffYes.value = "true";
    intelOffSelect.appendChild(iOffYes);
  }
  intelRowOff.appendChild(intelOffSelect);
  if (intelOff == 0) {
    intelOffSelect.value = "false";
  } else if (intelOff == 1) {
    intelOffSelect.value = "true";
  }
  intelOffSelect.addEventListener("change", () => {
    if (intelOffSelect.value == "true") {
      intelOff = 1;
      renderDeployWindow();
    } else if (intelOffSelect.value == "false") {
      intelOff = 0;
      renderDeployWindow();
    }
  });
  wrapper.appendChild(intelRowOff);
  let costRow = document.createElement("div");
  costRow.classList.add("flexRow");
  costRow.style = "margin-bottom: 1rem";
  let gLabel = document.createElement("div");
  gLabel.textContent = "Garrison Cost:";
  gLabel.style = "width: 25%";
  costRow.appendChild(gLabel);
  let gValue = document.createElement("div");
  gValue.textContent = troopsArrayGarrisonCost[troopSelector.value];
  gValue.classList.add("text-center");
  gValue.style = "width: 25%";
  costRow.appendChild(gValue);
  let iLabel = document.createElement("div");
  iLabel.textContent = "Intelligence Cost:";
  iLabel.style = "width: 25%";
  costRow.appendChild(iLabel);
  let iValue = document.createElement("div");
  iValue.textContent = intelDef + intelOff;
  iValue.classList.add("text-center");
  iValue.style = "width: 25%";
  if (troopSelector.value != "") {
    costRow.appendChild(iValue);
  }
  wrapper.appendChild(costRow);
  if (parseInt(iValue.textContent) > _safetyStats__WEBPACK_IMPORTED_MODULE_5__.safety.intelC) {
    intelFail++;
    iValue.style = "width: 25%; color: red";
  }
  if (parseInt(gValue.textContent) > _safetyStats__WEBPACK_IMPORTED_MODULE_5__.safety.garC) {
    gValue.style = "width: 25%; color: red";
    garrisonFail++;
  }
  let notesHeader = document.createElement("div");
  notesHeader.classList.add("text-center");
  notesHeader.textContent = "Troop Notes";
  wrapper.appendChild(notesHeader);
  let noteBox = document.createElement("div");
  noteBox.classList.add("flexRow", "center");
  let troopNotes = document.createElement("textarea");
  troopNotes.value = troopnotes;
  troopNotes.style = "height: 13rem";
  troopNotes.id = "troopNotes";
  troopNotes.addEventListener("change", () => {
    troopnotes = troopNotes.value;
  });
  noteBox.appendChild(troopNotes);
  wrapper.appendChild(noteBox);
  let deployBar = document.createElement("div");
  deployBar.classList.add("flexRow", "center");
  let deployBtn = document.createElement("button");
  deployBtn.style = "width: 100%";
  if (garrisonFail == 0 && intelFail == 0 && equipmentFail == 0) {
    deployBtn.textContent = "Deploy";
    deployBtn.addEventListener("click", () => {
      compileDeployment(troopSelector.value);
      renderTroops();
      intelOff = 0;
      intelDef = 0;
      selectValue = "";
      amod = 0;
      dmod = 0;
      troopnotes = "";
      colorValue = "";
    });
  }
  if (garrisonFail > 0 && intelFail > 0 && equipmentFail > 0) {
    deployBtn.textContent = "Not Enough Intelligence or Garrison; Unallocated Equipment Impact";
    deployBtn.style = "border: dashed red 1px; width: 100%";
  } else if (garrisonFail == 0 && intelFail > 0 && equipmentFail > 0) {
    deployBtn.textContent = "Not enough Intelligence; Unallocated Equipment Impact";
    deployBtn.style = "border: dashed red 1px; width: 100%";
  } else if (garrisonFail > 0 && intelFail == 0 && equipmentFail > 0) {
    deployBtn.textContent = "Not enough Garrison; Unallocated Equipment Impact";
    deployBtn.style = "border: dashed red 1px; width: 100%";
  } else if (garrisonFail > 0 && intelFail > 0 && equipmentFail == 0) {
    deployBtn.textContent = "Not enough Garrison or Intelligence";
    deployBtn.style = "border: dashed red 1px; width: 100%";
  } else if (garrisonFail == 0 && intelFail == 0 && equipmentFail > 0) {
    deployBtn.textContent = "Unallocated Equipment Impact";
    deployBtn.style = "border: dashed red 1px; width: 100%";
  } else if (garrisonFail == 0 && intelFail > 0 && equipmentFail == 0) {
    deployBtn.textContent = "Not enough Intelligence";
    deployBtn.style = "border: dashed red 1px; width: 100%";
  } else if (garrisonFail > 0 && intelFail == 0 && equipmentFail == 0) {
    deployBtn.textContent = "Not enough Garrison";
    deployBtn.style = "border: dashed red 1px; width: 100%";
  }
  deployBar.appendChild(deployBtn);
  wrapper.appendChild(deployBar);
}
function compileDeployment(id) {
  if (id == "") {
    return;
  }
  let index = Object.keys(troopsArrayGarrisonCost);
  let num = Object.values(troopsArrayGarrisonCost);
  let location = index.findIndex(e => e == id);
  let troopIndex = barracksTroopInfo.findIndex(e => e.name == id);
  let troop = barracksTroopInfo[troopIndex];
  let deployment = {};
  deployment.troop = index[location];
  deployment.garrison = num[location];
  function hexToRgb(hex) {
    var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
    return result ? {
      r: parseInt(result[1], 16),
      g: parseInt(result[2], 16),
      b: parseInt(result[3], 16)
    } : null;
  }
  let rgbColor = hexToRgb(document.querySelector("#troopColorPick").value);
  deployment.color = rgbColor;
  let hp = troop.hp;
  switch ((0,_survivalStats__WEBPACK_IMPORTED_MODULE_6__.survivalRating)()) {
    case "Dying":
      hp = (hp * 0.667).toFixed(0);
      break;
    case "Endangered":
      hp = (hp * 0.75).toFixed(0);
      break;
    case "Desperate":
      hp = (hp * 0.95).toFixed(0);
      break;
    case "Stable":
      break;
    case "Developing":
      hp = (hp * 1.05).toFixed(0);
      break;
    case "Blossoming":
      hp = (hp * 1.1).toFixed(0);
      break;
    case "Flourishing":
      hp = (hp * 1.2).toFixed(0);
      break;
  }
  let modDef = parseInt(document.querySelector("#dModValue").value);
  let modOff = parseInt(document.querySelector("#aModValue").value);
  deployment.modDef = modDef;
  deployment.modOff = modOff;
  deployment.hp = parseInt(hp);
  deployment.maxhp = troop.hp;
  deployment.count = troopCount;
  troopCount++;
  if (deployment.hp < deployment.maxhp) {
    deployment.maxhp = deployment.hp;
  }
  deployment.dice = troop.dice;
  deployment.static = parseInt(troop.static);
  deployment.attack = parseInt(troop.attack + modOff);
  deployment.ac = parseInt(troop.ac + modDef);
  deployment.level = troop.level;
  deployment.ref = parseInt(troop.ref + parseInt(modDef / 2));
  deployment.intelDef = intelDef;
  deployment.intelOff = intelOff;
  if (document.querySelector("#iOffYes") != undefined) {
    deployment.intelOffValue = document.querySelector("#iOffYes").value;
  }
  if (document.querySelector("#iDefYes") != undefined) {
    deployment.intelDefValue = document.querySelector("#iDefYes").value;
  }
  deployment.notes = document.querySelector("#troopNotes").value;
  deployment.hide = true;
  (0,_safetyStats__WEBPACK_IMPORTED_MODULE_5__.intelCurrent)(-parseInt(intelDef + intelOff));
  (0,_safetyStats__WEBPACK_IMPORTED_MODULE_5__.garCurrent)(troop.garrison * -1);
  _renderDeployed__WEBPACK_IMPORTED_MODULE_4__.deployedArray.push(deployment);
  (0,_pageRenders__WEBPACK_IMPORTED_MODULE_3__.renderAll)();
}
let troopsArrayGarrisonCost = {
  "Militia Infantry": 1,
  "Militia Archers": 1,
  "Militia Pikemen": 2,
  "Militia Cavalry": 2,
  "Guard Infantry": 3,
  "Guard Archers": 3,
  "Guard Spearmen": 3,
  "Guard Cavalry": 3,
  "Combat Medics": 3,
  "Combat Wizards": 3,
  Soldiers: 4,
  Longbowmen: 4,
  Phalanx: 4,
  Cannons: 5,
  "Battle Medics": 4,
  "Battle Mages": 4
};
function calcEquipMod() {
  let i = 0;
  switch ((0,_economyStats__WEBPACK_IMPORTED_MODULE_1__.economyRating)()) {
    case "Struggling":
      i = -4;
      break;
    case "Fragile":
      i = -2;
      break;
    case "Stagnant":
      i = 0;
      break;
    case "Growing":
      i = 1;
      break;
    case "Prosperous":
      i = 2;
      break;
    case "Thriving":
      i = 3;
      break;
    case "Golden Era":
      i = 4;
      break;
  }
  return i;
}
let dmod = 0;
let amod = 0;
function dModSelect() {
  let select = document.createElement("select");
  if (calcEquipMod() >= 0) {
    let length = calcEquipMod() - amod;
    for (let i = 0; i < length + 1; i++) {
      let option = document.createElement("option");
      option.label = i;
      option.value = i;
      select.appendChild(option);
    }
  }
  if (calcEquipMod() < 0) {
    let length = (calcEquipMod() - amod) * -1;
    for (let e = 0; e < length + 1; e++) {
      let optionNeg = document.createElement("option");
      optionNeg.label = -e;
      optionNeg.value = -e;
      select.appendChild(optionNeg);
    }
  }
  select.value = dmod;
  select.addEventListener("change", () => {
    dmod = select.value;
    renderDeployWindow();
  });
  return select;
}
function aModSelect() {
  let select = document.createElement("select");
  if (calcEquipMod() >= 0) {
    let length = calcEquipMod() - dmod;
    for (let i = 0; i < length + 1; i++) {
      let option = document.createElement("option");
      option.label = i;
      option.value = i;
      select.appendChild(option);
    }
  }
  if (calcEquipMod() < 0) {
    let length = (calcEquipMod() - dmod) * -1;
    for (let e = 0; e < length + 1; e++) {
      let optionNeg = document.createElement("option");
      optionNeg.label = -e;
      optionNeg.value = -e;
      select.appendChild(optionNeg);
    }
  }
  select.value = amod;
  select.addEventListener("change", () => {
    amod = select.value;
    renderDeployWindow();
  });
  return select;
}
function troopSelect(x, y) {
  let group = document.createElement("optgroup");
  if (y == barracksTroopInfo) {
    group.label = "Barracks";
  } else if (y == schoolTroopInfo) {
    group.label = "School";
  } else if (y == infirmaryTroopInfo) {
    group.label = "Infirmary";
  }
  for (let i = 0; i < x; i++) {
    let troop = y[i];
    let option = document.createElement("option");
    option.value = troop.name;
    option.label = troop.name;
    if (y == barracksTroopInfo) {
      option.classList.add("barracksTroop");
    } else if (y == schoolTroopInfo) {
      option.classList.add("schoolTroop");
    } else if (y == infirmaryTroopInfo) {
      option.classList.add("infirmaryTroop");
    }
    group.appendChild(option);
  }
  return group;
}
let count = 0;
function renderTroopBlock(x, y) {
  let troopRow = document.createElement("div");
  for (let i = 0; i < x; i++) {
    let troop = y[i];
    let hp = troop.hp;
    switch ((0,_survivalStats__WEBPACK_IMPORTED_MODULE_6__.survivalRating)()) {
      case "Dying":
        hp = (hp * 0.667).toFixed(0);
        break;
      case "Endangered":
        hp = (hp * 0.75).toFixed(0);
        break;
      case "Desperate":
        hp = (hp * 0.95).toFixed(0);
        break;
      case "Stable":
        break;
      case "Developing":
        hp = (hp * 1.05).toFixed(0);
        break;
      case "Blossoming":
        hp = (hp * 1.1).toFixed(0);
        break;
      case "Flourishing":
        hp = (hp * 1.2).toFixed(0);
        break;
    }
    let row = document.createElement("div");
    row.classList.add("troopRow");
    let name = document.createElement("button");
    name.textContent = troop.name;
    name.style = "justify-self: start; border-radius: .5rem; background: lightgray; border: 1px solid black; width: 100%";
    name.addEventListener("click", () => {
      (0,_openGlossary__WEBPACK_IMPORTED_MODULE_2__["default"])(troop.id);
    });
    row.appendChild(name);
    let health = document.createElement("div");
    health.textContent = hp;
    let normalHealth = document.createElement("span");
    normalHealth.textContent = "/" + troop.hp;
    normalHealth.style = "font-size: 14px";
    health.appendChild(normalHealth);
    row.appendChild(health);
    let ac = document.createElement("div");
    ac.textContent = troop.ac;
    row.appendChild(ac);
    let ref = document.createElement("div");
    ref.textContent = troop.ref;
    row.appendChild(ref);
    let attack = document.createElement("div");
    attack.textContent = troop.attack;
    attack.classList.add("text-center");
    row.appendChild(attack);
    let damage = document.createElement("div");
    damage.textContent = troop.dice + "+" + troop.static;
    damage.classList.add("text-center");
    row.appendChild(damage);
    if (count == 0) {
      count = 1;
    } else if (count == 1) {
      count = 0;
      row.style = "background: rgba(100,100,100,.1)";
    }
    troopRow.appendChild(row);
  }
  return troopRow;
}
let barracksTroopInfo = [{
  barracks: 0,
  garrison: 1,
  deployed: 0,
  name: "Militia Infantry",
  level: 2,
  hp: 36,
  ac: 18,
  ref: 8,
  dice: "1d8",
  static: 8,
  attack: 16,
  id: "militiaInfantry"
}, {
  barracks: 0,
  garrison: 1,
  deployed: 0,
  name: "Militia Archers",
  level: 3,
  hp: 30,
  ac: 18,
  ref: 9,
  dice: "1d8",
  static: 10,
  attack: 18,
  id: "militiaArchers"
}, {
  barracks: 1,
  garrison: 2,
  deployed: 0,
  name: "Militia Pikemen",
  level: 4,
  hp: 48,
  ac: 20,
  ref: 10,
  dice: "2d8",
  static: 9,
  attack: 19,
  id: "militiaPikemen"
}, {
  barracks: 1,
  garrison: 2,
  deployed: 0,
  name: "Militia Cavalry",
  level: 4,
  hp: 63,
  ac: 21,
  ref: 11,
  dice: "2d6",
  static: 9,
  attack: 20,
  id: "militiaCavalry"
}, {
  barracks: 2,
  garrison: 3,
  deployed: 0,
  name: "Guard Infantry",
  level: 5,
  hp: 90,
  ac: 22,
  ref: 12,
  dice: "2d8",
  static: 7,
  attack: 20,
  id: "guardInfantry"
}, {
  barracks: 2,
  garrison: 3,
  deployed: 0,
  name: "Guard Archers",
  level: 6,
  hp: 75,
  ac: 21,
  ref: 12,
  dice: "2d6",
  static: 12,
  attack: 21,
  id: "guardArchers"
}, {
  barracks: 2,
  garrison: 3,
  deployed: 0,
  name: "Guard Spearmen",
  level: 7,
  hp: 90,
  ac: 24,
  ref: 15,
  dice: "2d10",
  static: 13,
  attack: 23,
  id: "guardSpearmen"
}, {
  barracks: 2,
  garrison: 3,
  deployed: 0,
  name: "Guard Cavalry",
  level: 8,
  hp: 120,
  ac: 26,
  ref: 16,
  dice: "2d8",
  static: 13,
  attack: 24,
  id: "guardCavalry"
}, {
  barracks: 3,
  garrison: 4,
  deployed: 0,
  name: "Soldiers",
  level: 11,
  hp: 240,
  ac: 31,
  ref: 21,
  dice: "2d10",
  static: 16,
  id: "soldiers"
}, {
  barracks: 3,
  garrison: 4,
  deployed: 0,
  name: "Longbowmen",
  level: 11,
  hp: 150,
  ac: 30,
  ref: 21,
  dice: "2d10",
  static: 16,
  id: "longbowmen"
}, {
  barracks: 3,
  garrison: 4,
  deployed: 0,
  name: "Phalanx",
  level: 12,
  hp: 165,
  ac: 0,
  ref: 0,
  dice: "3d10",
  static: 18,
  id: "phalanx"
}, {
  barracks: 3,
  garrison: 5,
  deployed: 0,
  name: "Cannons",
  level: 13,
  hp: 120,
  ac: 0,
  ref: 0,
  dice: "16d6",
  static: 0,
  id: "cannons"
}, {
  infirmary: 2,
  garrison: 3,
  deployed: 0,
  name: "Combat Medics",
  level: 9,
  hp: 66,
  ac: 0,
  ref: 0,
  dice: "2d6",
  static: 6,
  id: "combatMedics"
}, {
  infirmary: 3,
  garrison: 4,
  deployed: 0,
  name: "Battle Medics",
  level: 14,
  hp: 141,
  ac: 0,
  ref: 0,
  dice: "2d10",
  static: 11,
  id: "combatMedics"
}, {
  school: 2,
  garrison: 3,
  deployed: 0,
  name: "Combat Wizards",
  level: 10,
  hp: 81,
  ac: 0,
  ref: 0,
  dice: "6d6",
  static: 0,
  id: "combatWizards"
}, {
  school: 3,
  garrison: 4,
  deployed: 0,
  name: "Battle Mages",
  level: 15,
  hp: 153,
  ac: 0,
  ref: 0,
  dice: "8d6",
  static: 0,
  id: "battleMages"
}];
let infirmaryTroopInfo = [{
  infirmary: 2,
  garrison: 3,
  deployed: 0,
  name: "Combat Medics",
  level: 9,
  hp: 66,
  ac: 0,
  ref: 0,
  dice: "2d6",
  static: 6,
  id: "combatMedics"
}, {
  infirmary: 3,
  garrison: 4,
  deployed: 0,
  name: "Battle Medics",
  level: 14,
  hp: 141,
  ac: 0,
  ref: 0,
  dice: "2d10",
  static: 11,
  id: "combatMedics"
}];
let schoolTroopInfo = [{
  school: 2,
  garrison: 3,
  deployed: 0,
  name: "Combat Wizards",
  level: 10,
  hp: 81,
  ac: 0,
  ref: 0,
  dice: "6d6",
  static: 0,
  id: "combatWizards"
}, {
  school: 3,
  garrison: 4,
  deployed: 0,
  name: "Battle Mages",
  level: 15,
  hp: 153,
  ac: 0,
  ref: 0,
  dice: "8d6",
  static: 0,
  id: "battleMages"
}];

/***/ }),

/***/ "./src/renderUpgrades.js":
/*!*******************************!*\
  !*** ./src/renderUpgrades.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   nonselectedUpgrades: () => (/* binding */ nonselectedUpgrades),
/* harmony export */   renderUpgrades: () => (/* binding */ renderUpgrades),
/* harmony export */   selectedLevels: () => (/* binding */ selectedLevels),
/* harmony export */   selectedUpgrades: () => (/* binding */ selectedUpgrades),
/* harmony export */   setNonselectedUpgrades: () => (/* binding */ setNonselectedUpgrades),
/* harmony export */   setSelectedLevels: () => (/* binding */ setSelectedLevels),
/* harmony export */   setSelectedUpgrades: () => (/* binding */ setSelectedUpgrades)
/* harmony export */ });
/* harmony import */ var _economyStats__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./economyStats */ "./src/economyStats.js");
/* harmony import */ var _pageRenders__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pageRenders */ "./src/pageRenders.js");
/* harmony import */ var _renderBuildings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./renderBuildings */ "./src/renderBuildings.js");
/* harmony import */ var _safetyStats__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./safetyStats */ "./src/safetyStats.js");
/* harmony import */ var _settlementStats__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./settlementStats */ "./src/settlementStats.js");
/* harmony import */ var _survivalStats__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./survivalStats */ "./src/survivalStats.js");






function renderUpgrades() {
  let wrapper = document.querySelector("#contentArea");
  wrapper.innerHTML = "";
  let header = document.createElement("div");
  header.classList.add("subHeader");
  header.textContent = "Settlement Upgrades";
  wrapper.appendChild(header);
  let upgArea = document.createElement("div");
  upgArea.style = "display: flex; flex-wrap: wrap; overflow-y: scroll; scrollbar-width: none;";
  wrapper.appendChild(upgArea);
  if (_settlementStats__WEBPACK_IMPORTED_MODULE_4__.settlement.level < 4) {
    let disclaimer = document.createElement("div");
    disclaimer.style = "display: flex; align-items: center; justify-content: center; width: 100%; height: 50%;";
    disclaimer.textContent = "Your Settlement needs to be level 4 to unlock Settlement Upgrades";
    upgArea.appendChild(disclaimer);
    return;
  }
  for (let i = 4; i <= _settlementStats__WEBPACK_IMPORTED_MODULE_4__.settlement.level; i++) {
    let index = "level" + i;
    let source = upgradeTree[index];
    if (_settlementStats__WEBPACK_IMPORTED_MODULE_4__.settlement.level > 4 && _settlementStats__WEBPACK_IMPORTED_MODULE_4__.settlement.type != 0 && i >= 5 && i % 2 != 0) {
      let type = _settlementStats__WEBPACK_IMPORTED_MODULE_4__.settlement.type;
      let setChoice = source[type];
      source = setChoice;
    }
    if (_settlementStats__WEBPACK_IMPORTED_MODULE_4__.settlement.type == 0 && i >= 5) {
      return;
    }
    let header = document.createElement("div");
    header.classList.add("subHeader");
    header.style = "background: none; margin-bottom: 1rem; width: 100%";
    header.textContent = source.title;
    upgArea.appendChild(header);
    let row = document.createElement("div");
    row.classList.add("flexRow");
    row.style = "justify-content: space-around; width: 100%; margin-bottom: 1rem";
    source = source.array;
    source.forEach(upg => {
      let btnBox = document.createElement("div");
      btnBox.style = "width: 33%; display: flex; justify-content: center";
      let btn = document.createElement("button");
      btn.classList.add("upgBtn");
      btn.textContent = upg.name;
      btn.id = upg.id;
      btnBox.appendChild(btn);
      row.appendChild(btnBox);
      let passCheck = selectedUpgrades.findIndex(e => e == upg.id);
      let failCheck = nonselectedUpgrades.findIndex(e => e == upg.id);
      if (passCheck == -1 && failCheck == -1) {
        btn.addEventListener("click", () => {
          showUpgradeDetails(i, upg.id);
        });
      } else if (passCheck != -1) {
        btn.style = "background: rgba(50,160,80,.3)";
        btn.addEventListener("click", () => {
          showUpgradeDetails(i, upg.id);
        });
      } else if (failCheck != -1) {
        btn.style = "background: gray";
        btn.addEventListener("click", () => {
          showUpgradeDetails(i, upg.id);
        });
      }
    });
    upgArea.appendChild(row);
  }
}
function showUpgradeDetails(level, id) {
  let wrapper = document.querySelector("#contentArea");
  wrapper.innerHTML = "";
  let index = "level" + level;
  let upgIndex = 0;
  let upg = 0;
  if (level % 2 == 0) {
    upgIndex = upgradeTree[index].array.findIndex(e => e.id == id);
    upg = upgradeTree[index].array[upgIndex];
  } else {
    let type = _settlementStats__WEBPACK_IMPORTED_MODULE_4__.settlement.type;
    let upgIndex = upgradeTree[index][type].array.findIndex(e => e.id == id);
    upg = upgradeTree[index][type].array[upgIndex];
  }
  let header = document.createElement("div");
  header.classList.add("subHeader");
  header.textContent = upg.name;
  wrapper.appendChild(header);
  for (let i = 0; i < upg.content.length; i++) {
    let text = document.createElement("p");
    text.textContent = upg.content[i];
    text.style = 'font-size: 18px; padding: 0 2rem; box-sizing: border-box; font-family: "monospace";';
    text.classList.add("text-center");
    wrapper.appendChild(text);
  }
  let chosen = selectedUpgrades.findIndex(e => e == upg.id);
  let ignored = nonselectedUpgrades.findIndex(e => e == upg.id);
  let buttonRow = document.createElement("div");
  buttonRow.classList.add("flexRow");
  buttonRow.style = "width: 100%; justify-content: center; gap: 8rem";
  let previousCheck = selectedLevels.findIndex(e => e == level - 1);
  if (previousCheck == -1) {
    let length = selectedLevels.length;
    let first = selectedLevels[length - 1] + 1;
    let warning = document.createElement("div");
    warning.textContent = `You need to select an earlier upgrade from Level ${first} and work your way up first.`;
    warning.style = "color: red; font-size: 22px;;margin-bottom: 2rem";
    warning.classList.add("text-center");
    wrapper.appendChild(warning);
  }
  if (chosen == -1 && ignored == -1 && previousCheck != -1) {
    let confirmBox = document.createElement("div");
    let confirmBtn = document.createElement("button");
    confirmBtn.textContent = "Confirm Upgrade";
    confirmBtn.addEventListener("click", () => {
      confirmSettlementUpgrade(level, id);
      (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
      renderUpgrades();
    });
    confirmBox.appendChild(confirmBtn);
    buttonRow.appendChild(confirmBox);
  }
  let cancelBox = document.createElement("div");
  let cancelBtn = document.createElement("button");
  cancelBtn.textContent = "Cancel";
  cancelBtn.addEventListener("click", () => {
    renderUpgrades();
  });
  cancelBox.appendChild(cancelBtn);
  buttonRow.appendChild(cancelBox);
  wrapper.appendChild(buttonRow);
}
let selectedUpgrades = [];
let selectedLevels = [3];
let nonselectedUpgrades = [];
function setSelectedUpgrades(data) {
  selectedUpgrades = data;
}
function setSelectedLevels(data) {
  selectedLevels = data;
}
function setNonselectedUpgrades(data) {
  nonselectedUpgrades = data;
}
function confirmSettlementUpgrade(level, id) {
  let index = "level" + level;
  let source = upgradeTree[index];
  if (_settlementStats__WEBPACK_IMPORTED_MODULE_4__.settlement.level > 4 && _settlementStats__WEBPACK_IMPORTED_MODULE_4__.settlement.type != 0 && level >= 5 && level % 2 != 0) {
    let type = _settlementStats__WEBPACK_IMPORTED_MODULE_4__.settlement.type;
    let setChoice = source[type];
    source = setChoice;
  }
  if (_settlementStats__WEBPACK_IMPORTED_MODULE_4__.settlement.type == 0 && level >= 5) {
    return;
  }
  source = source.array;
  source.forEach(upg => {
    if (upg.id == id) {
      selectedUpgrades.push(upg.id);
    } else {
      nonselectedUpgrades.push(upg.id);
    }
  });
  switch (id) {
    case "a4c1":
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_5__.survivalBonus)(1);
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.economyBonus)(-1);
      _settlementStats__WEBPACK_IMPORTED_MODULE_4__.settlement.type = "Survivalist";
      break;
    case "a4c2":
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_3__.safetyBonus)(1);
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_5__.survivalBonus)(-1);
      _settlementStats__WEBPACK_IMPORTED_MODULE_4__.settlement.type = "Fortified";
      break;
    case "a4c3":
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.economyBonus)(1);
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_3__.safetyBonus)(-1);
      _settlementStats__WEBPACK_IMPORTED_MODULE_4__.settlement.type = "Mercantile";
      break;
    case "a5c1":
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_5__.foodBonus)(1);
      break;
    case "a5c2":
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_5__.supBonus)(2);
      break;
    case "a5c3":
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_3__.garBonus)(1);
      break;
    case "a5c4":
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_3__.intelBonus)(1);
      break;
    case "a5c5":
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.tradeBonus)(1);
      break;
    case "a5c6":
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.prodBonus)(1);
      break;
    case "a7c1":
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.tradeBonus)(1);
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_5__.foodBonus)(2);
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.prodBonus)(-1);
      break;
    case "a7c2":
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_5__.medBonus)(1);
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.prodBonus)(1);
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_5__.supBonus)(-1);
      break;
    case "a7c3":
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_5__.supBonus)(1);
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_3__.diBonus)(1);
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.tradeBonus)(-1);
      break;
    case "a7c4":
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_3__.diBonus)(2);
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_5__.supBonus)(-1);
      break;
    case "a7c5":
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_3__.garBonus)(1);
      (0,_settlementStats__WEBPACK_IMPORTED_MODULE_4__.maxHealth)(10);
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_5__.medBonus)(-1);
      break;
    case "a7c6":
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_3__.intelBonus)(2);
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_5__.foodBonus)(-1);
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_5__.supBonus)(-1);
      break;
    case "a7c7":
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.tradeBonus)(1);
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_5__.medBonus)(-1);
      break;
    case "a7c8":
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.tradeBonus)(1);
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_5__.supBonus)(-1);
      break;
    case "a7c9":
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.prodBonus)(1);
      (0,_settlementStats__WEBPACK_IMPORTED_MODULE_4__.maxHealth)(-5);
      (0,_settlementStats__WEBPACK_IMPORTED_MODULE_4__.health)(-5);
      break;
    default:
      break;
  }
  selectedLevels.push(level);
}
let upgradeTree = {
  level4: {
    title: "Level 4 - Settlement Style",
    array: [{
      name: "Survivalist Settlement",
      id: "a4c1",
      content: ["A Survivalist Settlement understands the importance of keeping everything - from food and water to construction supplies and medicine - the highest quality possible. Many a would-be city fell to the hardships following The Great Sacrifice because they lacked a sufficient stockpile of those things needed for survival.", "Your emphasis on ensuring the highest quality goods means sending away those traders with less than exceptional items.", "Choosing a Settlement Style should not be decided quickly. Your choice of the kind of settlement has a significant impact in the type of upgrades the Settlement unlocks at higher levels.", "Finally, selecting Survivalist Settlement will grant you a +1 Survival Bonus and a -1 Economy Penalty."]
    }, {
      name: "Fortified Settlement",
      id: "a4c2",
      content: ["A Fortified Settlement has endured more than its fair share of trials and tribulations, particularly when it comes to the safety of its citizens. It knows that ample supplies means naught when you can't defend them.", "Your emphasis on keeping troops well fed and in good shape means you go through food and medicine more quickly.", "Choosing a Settlement Style should not be decided quickly. Your choice of the kind of settlement has a significant impact in the type of upgrades the Settlement unlocks at higher levels.", "Selecting Fortified Settlement will grant you a +1 Safety Bonus and a -1 Survival Penalty."]
    }, {
      name: "Mercantile Settlement",
      id: "a4c3",
      content: ["A Mercantile Settlement thrives with a welcoming population and less restrictions on what can be bought and sold within its walls. It always has a surplus of goods - from exquisite quality to shit! A Mercantile settlement knows nothing - even settlements - survive on their own.", "Your open trade practices improves settlement commerce, but it means those with nefarious means have an easier time disrupting the settlement.", "Choosing a Settlement Style should not be decided quickly. Your choice of the kind of settlement has a significant impact in the type of upgrades the Settlement unlocks at higher levels.", "Selecting Mercantile Settlement will grant you a +1 Economy Bonus and a -1 Safety Penalty."]
    }]
  },
  level5: {
    Survivalist: {
      title: "Level 5 - Storage Refinement",
      array: [{
        name: "Deep Cellars",
        id: "a5c1",
        content: ["Dwarves, Halflings, Drow, and plenty of other creatures find solace in the depths of Vals'kar - why not add food to the list? It's clear things tend to last longer when chilled, so dig deeper cellars and keep food safe!", "By keeping food stuffs tucked deeper in the earth, they don't spoil as quickly. As an added benefit, mold and rot doesn't spread as quickly either, reducing the impact of negative Food Events by 1.", "Selecting Deep Cellars will grant you a +1 Food Bonus in addition to the reduced Food Event impact."]
      }, {
        name: "Expanded Warehouse",
        id: "a5c2",
        content: ["Any successful entreprenuer would tell you that it takes a sizeable nest-egg to reliably begin expansion of the business. Turns out, a settlement is no different - that's where an expanded warehouse comes in!", "By making the warehouse larger, the settlement can store more construction materials and out-of-season accoutrements.", "Selecting Expanded Warehouse will grant you a +2 Supply Bonus."]
      }, {
        name: "Expanded Barracks",
        id: "a5c3",
        content: ["As it turns out, the 'storage' of people is important too! By expanding the barracks, the settlement is capable of housing more troops for patrols and deployments, ensuring greater combat might in the local area.", "Additionally, the expanded barracks allows you to bring a free Militia Infantry Troop on a deployment once a month.", "Selecting Expanded Barracks will grant you a +1 Garrison Bonus in addition to the free troop."]
      }]
    },
    Fortified: {
      title: "Level 5 - Safety Measures",
      array: [{
        name: "Expanded Barracks",
        id: "a5c3",
        content: ["The best offense is a good offense and defense! By expanding the barracks, the settlement is capable of housing more troops for patrols and deployments, ensuring greater combat might in the local area.", "Additionally, the expanded barracks allows you to bring a free Militia Infantry Troop on a deployment once every week.", "Selecting Expanded Barracks will grant you a +1 Garrison Bonus in addition to the free troop."]
      }, {
        name: "Awareness Training",
        id: "a5c4",
        content: ["A good leader knows that they dont' know everything and must rely on the eyes and ears of their people to truly have the complete picture - or at least something close to it. To that end, making sure they know how to gather and report information is of the utmost importance.", "As an added benefit, a perceptive population is also less likely to be in dangerous situations, should they arrive. On any event that affects village health negatively, roll a d20. On an 11+, reduce the damage by your Intel Bonus (before Infirmary upgrade reductions)", "Selecting Awareness Training will grant you a +1 Intel Bonus in addition to the damage reduction effect."]
      }, {
        name: "Expanded Warehouse",
        id: "a5c2",
        content: ["Any leader capable of planning for the future knows that successful settlements can be targeted for raids and sieges. Storing extra supplies for those contingencies, then, seems like second-nature to you.", "By making the warehouse larger, the settlement can store more construction materials for things like walls and barricades.", "Selecting Expanded Warehouse will grant you a +2 Supply Bonus."]
      }]
    },
    Mercantile: {
      title: "Level 5 - Mercantile Improvements",
      array: [{
        name: "Improved Advertising",
        id: "a5c5",
        content: ["A settlement is nothing if not for its trade and camaraderie, and nothing brings people in droves like some good old-fashioned advertising.", "So excited by the storm of good deals around them, there's a chance to buy and sell at rates better for you! Roll a d20 when buying or selling (everything triggers on a 19-20). If buying 1-2 items, get it 50% off. If buying 3 or more, get an extra free. If selling, increase sale value by 20%. Can happen once per management turn.", "Selecting Improved Advertising will grant you a +1 Trade Bonus in addition to the chance of better trade deals."]
      }, {
        name: "Mandatory Work Breaks",
        id: "a5c6",
        content: ["Wizards and Clerics need to often take breaks to recharge their minds and bodies for their work - why should it be any different for the skilled laborers in the settlement? With Mandatory Work Breaks, it doesn't have to be!", "As it turns out, respecting a worker's rights to a lunch break and a few minutes off their feet in the sweltering heat means they work even harder! As an added benefit, they'll stay healthier, too! This reduces the Productivity impact of disease outbreaks in the settlement by 1.", "Selecting Mandatory Work Breaks will grant you a +1 Productivity Bonus in addition to the reduced disease impact."]
      }, {
        name: "Expanded Warehouse",
        id: "a5c2",
        content: ["Any successful entreprenuer would tell you that it takes a sizeable nest-egg to reliably begin expansion of the business. Turns out, a settlement is no different - that's where an expanded warehouse comes in!", "By making the warehouse larger, the settlement can store more construction materials and out-of-season accoutrements.", "Selecting Expanded Warehouse will grant you a +2 Supply Bonus."]
      }]
    }
  },
  level6: {
    title: "Level 6 - Expert Leadership",
    array: [{
      name: "Lead By Example",
      id: "a6c1",
      content: ["You understand that the best way to be a successful leader is leading by example. When you do things, you do them successfully. Crazily enough, once a week when you do something successfully, you do so critically!", "Choose one of Safety, Survival, or Economy. Once per week, when a player succeeds at an Action to improve a component score of that category, you can treat it as a critical success instead.", "At Settlement Level 10, this can happen twice per week.", "At Settlement Level 15, this can happen three times per week."]
    }, {
      name: "Cautious Leadership",
      id: "a6c2",
      content: ["You understand that while it is imperative that work be completed to sustain the town, you also understand that those efforts are completely worthless if everyone is getting injured in the process.", "Choose one of Safety, Survival, or Economy. Once per week, when a player critically fails at an Action to improve the component score of that category, you can treat it as a failure instead.", "At Settlement Level 10, this can happen twice per week.", "At Settlement Level 15, this can happen three times per week."]
    }, {
      name: "Try, Try Again",
      id: "a6c3",
      content: ["You understand that discipline and a can-do attitude are the most important parts of being a leader. When things go awry, don't quit! Try it again! (Maybe quit if it doesn't work a second time...)", "Choose one of Safety, Survival, or Economy. Once per week, a player may choose to reroll an Action made to improve the component score of that category. They must use the new roll, even if the result is worse.", "At Settlement Level 10, this can happen twice per week.", "At Settlement Level 15, this can happen three times per week."]
    }]
  },
  level7: {
    Survivalist: {
      title: "Level 7 - Survivalist Epiphanies",
      array: [{
        name: "Farming Breakthrough",
        id: "a7c1",
        content: ["By taking a more regimented, almost assembly-line methodology to various farming techniques, a number of safe 'shortcuts' have been discovered, significantly improving food output from those willing to adopt the increased labor.", "These processes increase usuable food yields, granting a steadier supply of food as well as boosting activity at local farmers' markets.", "Selecting Farming Breakthrough will increase Trade Bonus by 1 and Food Bonus by 2 while decreasing Productivity Bonus by 1."]
      }, {
        name: "Scientific Methods",
        id: "a7c2",
        content: ["Following a year's-long study into a locally sourced plant and its applications as both a local anesthetic and fever-reducer has led to a cheapened way of producing useful medical supplies.", "The brewing process, while relatively simple, requires a significant amount of space and resources, as it will need to be scaled appropriately to provide a benefit to the entire settlement.", "Selecting Scientific Methods will increase Medical Capacity and Productivity Bonus by 1 while decreasing Supplies Bonus by 1."]
      }, {
        name: "Logistics Breakthrough",
        id: "a7c3",
        content: ["With the implementation of some new packaging and transportation methods, goods are delivered much more quickly and safer than ever before. This expedited movement has worked wonders on timely delivery of supplies.", "Faster movement of goods has decreased 'last-minute sales' as things just don't take nearly as long to process and move.", "Selecting Logistics Breakthrough increases Supplies and Defensive Infrastructure Bonuses by 1 while decreasing Trade Bonus by 1."]
      }]
    },
    Fortified: {
      title: "Level 7 - Basic Militant Regiments",
      array: [{
        name: "Reinforced Structures",
        id: "a7c4",
        content: ["Thoughtful leaders (called paranoid by some) recognize the risk the outside world can play in disrupting and damaging a settlement, be it weather, bandits, or worse.", "Those same leaders understand a great way to mitigate those losses ahead of time is by reinforcing the structures they're responsible for. While this makes the buildings tougher, they are also slightly more expensive to maintain.", "Selecting Reinforced Structures increases Defensive Infrastructure Bonus by 2 and decreases Supplies Bonus by 1."]
      }, {
        name: "Scheduled Physicals",
        id: "a7c5",
        content: ["Few things matter more in the defense of a settlement than the equipment and training of its troops. A wise leader knows that the health of those troops is the ultimately the most important part.", "By scheduling regular physicals for the fighting forces, you ensure they're always in tip-top shape to deal with the threats of today and tomorrow.", "Selecting Scheduled Physicals increases Garrison Bonus by 1, Max Health by 10, and decreases Medical Capacity Bonus by 1."]
      }, {
        name: "Regular Scouting",
        id: "a7c6",
        content: ["Knowing your enemy is half that battle - or more, if you can exploit their weaknesses and fortify against their strengths. Such is the philosophy of a leader who prioritizes the gathering of intelligence in and around the settlement.", "Sending regular Scouting Parties is a somewhat expensive endeavor but it ensures the settlement has a solid foundation of knowledge for any threats that appear.", "Selecting Regular Scouting increases Intelligence Bonus by 2 while decreasing Food and Supply Bonuses by 1. Regular Scouting also increases Intelligence by 1 every 2 weeks, up to the maximum."]
      }]
    },
    Mercantile: {
      title: "Level 7 - Foreign Trade Strategies",
      array: [{
        name: "Rare Traders",
        id: "a7c7",
        content: ["Spreading word about all the settlement has to offer has yielded exceptional results! Namely in the occasional arrival of incredibly well-stocked (and defended!) traders.", "Each week, make a DC19 Check, adding the Settlement's Trade Bonus. On a Success, you may purchase rare items equal to Uncommon Item Level - 3. On a Critical Success, increase Safety Bonus by 1 for a week.", "Selecting Rare Traders increases Trade Bonus by 1 and decreases Medical Capacity Bonus by 1, thanks to the higher chance of disease from outsiders."]
      }, {
        name: "Occasional Hoarding",
        id: "a7c8",
        content: ["The best thing about having an active and healthy economy is the fact that sometimes, those key participants within it, decide it's best to not let a deal go away without exploiting it.", "Each week, make a DC19 Check, adding the Settlement's Trade Bonus. On a Success, you can add a passive Trade Bonus equal to your existing Trade Bonus +1 that lasts for the week. On a critical success, double the bonus.", "Selecting Occasional Hoarding increases Trade Bonus by 1 and decreases Supplies Bonus by 1, thanks to the populations need for more storage."]
      }, {
        name: "Work 'Em Dry",
        id: "a7c9",
        content: ["Some people work to live, but you understand that doesn't really help business enterprises nearly as much as those who live to work. With this leadership technique, you can start to force people's hands.", "Each week, you can give yourself a passive Productivity Bonus that lasts for the week at the cost of 5 Current Health per Producitivity Point.", "Selecting Work 'Em Dry increases Productivity Bonus by 1 and decreases Max Health by 5. What, are they getting tired?"]
      }]
    }
  },
  level8: {
    title: "Level 8 - Resource Management",
    array: [{
      name: "Adaptive Resources",
      id: "a8c1",
      content: ["You know there are dozens of solutions to any given problem. All it takes is adjusting the aperture of how you look at the problem; as it turns out, sometimes a square block does fit in a round hole.", "As a reaction to an event which would damage Health from a lack of resources, you can instead choose to lose points from another component in the same category.", "With Survival, each negative point in Food deals 5 damage, negative Supplies deals 5 damage, and negative Medical Capacity deals 10 damage.", "With Safety, each negative point in Defensive Infrastructure deals 10 damage, negative Intel deals no damage, and negative Garrison deals 10 damage.", "With Trade, each negative point in Trade deals 5 damage, and each negative point in Productivity deals 10 damage.", "With this reaction, if you're short 2 Medical Supplies and are going to lose 20 Health, you can instead use 4 Food or 4 Supplies or any combination to prevent the Health loss."]
    }, {
      name: "Resource Hoarder",
      id: "a8c2",
      content: ["You know that scrapes, bumps, and bruises serve a very important purpose: they build character. What is life without a little pain? Those small annoyances chipping away at a soft exterior harden it to stone. Sometimes, that's exactly what the settlement needs.", "As a reaction to an event which would drain resources, you can instead have it damage your health directly. This DOES NOT apply to Intel, which has no health penalty.", "With Survival, each point of Food spared will deal 3 damage, each point of Supplies will deal 5 damage, and each point of Medical Capacity will deal 10 damage.", "With Safety, each point of Defensive Infrastructure spared will deal 5 damage and each point of Garrison spared will deal 10 damage.", "With Economy, each point of Trade spared will deal 3 damage and each point of Productivity spared will deal 5 damage.", "With this reaction, if an event would cause you to lose 7 food, you could instead choose to lose 21 Health, 18, or any multiplier up to the event cost amount."]
    }, {
      name: "Work Fixes Everything",
      id: "a8c3",
      content: ["You've seen first-hand that there isn't a single problem in the world that cannot be fixed with brute force. In this case, the brute force is a measure of effort to rectify problems that pop up around the settlement.", "As a reaction to an event which would damage settlement health, you can instead have it lower health and max health by half the amount. All of the damage can then be repaired by assigning productivity to a Fix-Action Event.", "Typically, these repairs are free of charge, other than the productivity cost, but that does mean they take a much higher amount of productivity to complete."]
    }]
  }
};


/***/ }),

/***/ "./src/safetyStats.js":
/*!****************************!*\
  !*** ./src/safetyStats.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   diBonus: () => (/* binding */ diBonus),
/* harmony export */   diBox: () => (/* binding */ diBox),
/* harmony export */   diCurrent: () => (/* binding */ diCurrent),
/* harmony export */   diMax: () => (/* binding */ diMax),
/* harmony export */   garBonus: () => (/* binding */ garBonus),
/* harmony export */   garBox: () => (/* binding */ garBox),
/* harmony export */   garCurrent: () => (/* binding */ garCurrent),
/* harmony export */   garMax: () => (/* binding */ garMax),
/* harmony export */   garrisonModifier: () => (/* binding */ garrisonModifier),
/* harmony export */   intelBonus: () => (/* binding */ intelBonus),
/* harmony export */   intelBox: () => (/* binding */ intelBox),
/* harmony export */   intelCurrent: () => (/* binding */ intelCurrent),
/* harmony export */   intelMax: () => (/* binding */ intelMax),
/* harmony export */   safActions: () => (/* binding */ safActions),
/* harmony export */   safety: () => (/* binding */ safety),
/* harmony export */   safetyBonus: () => (/* binding */ safetyBonus),
/* harmony export */   safetyRating: () => (/* binding */ safetyRating),
/* harmony export */   setSafety: () => (/* binding */ setSafety),
/* harmony export */   showSafAction: () => (/* binding */ showSafAction),
/* harmony export */   upkeep: () => (/* binding */ upkeep)
/* harmony export */ });
/* harmony import */ var _settlementStats__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./settlementStats */ "./src/settlementStats.js");
/* harmony import */ var _survivalStats__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./survivalStats */ "./src/survivalStats.js");
/* harmony import */ var _economyStats__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./economyStats */ "./src/economyStats.js");
/* harmony import */ var _weekLog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./weekLog */ "./src/weekLog.js");
/* harmony import */ var _renderActionsArea__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./renderActionsArea */ "./src/renderActionsArea.js");
/* harmony import */ var _pageRenders__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pageRenders */ "./src/pageRenders.js");






let safety = {
  Base: 0,
  Adjusted: 0,
  Rating: 0,
  Bonus: 0,
  status: "",
  diB: 0,
  diC: 2,
  diM: 0,
  intelB: 0,
  intelC: 2,
  intelM: 0,
  garB: 0,
  garC: 3,
  garM: 0
};
function setSafety(data) {
  safety = data;
}
function safetyRating() {
  let a = 0;
  let b = 0;
  let c = 0;
  if (safety.diC > safety.diM) {
    a = safety.diM;
  } else a = safety.diC;
  if (safety.intelC > safety.intelM) {
    b = safety.intelM;
  } else b = safety.intelC;
  if (safety.garC > safety.garM) {
    c = safety.garM;
  } else c = safety.garC;
  safety.Base = ((a + b + c) / _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.level * (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.currentHealth / (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.maxHealthBase + _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.maxHealthBonus))).toFixed(1);
  switch ((0,_survivalStats__WEBPACK_IMPORTED_MODULE_1__.survivalRating)()) {
    case "Dying":
      safety.Adjusted = (safety.Base * 0.1).toFixed(1);
      break;
    case "Endangered":
      safety.Adjusted = (safety.Base * 0.8).toFixed(1);
      break;
    case "Desperate":
      safety.Adjusted = (safety.Base * 0.9).toFixed(1);
      break;
    case "Stable":
    case "Developing":
      safety.Adjusted = (safety.Base * 1).toFixed(1);
      break;
    case "Blossoming":
      safety.Adjusted = (safety.Base * 1.1).toFixed(1);
      break;
    case "Flourishing":
      safety.Adjusted = (safety.Base * 1.2).toFixed(1);
      break;
  }
  if (safety.Adjusted <= 0.5) {
    safety.Rating = "Dangerous";
    safety.status = "(Economy Score -80%; Productivity -50%; Upkeep 0)";
  } else if (safety.Adjusted > 0.5 && safety.Adjusted < 1) {
    safety.Rating = "Lawless";
    safety.status = "(Economy Score -50%; Productivity -25%; Upkeep xd4)";
  } else if (safety.Adjusted >= 1 && safety.Adjusted < 2) {
    safety.Rating = "Unsafe";
    safety.status = "(Economy Score -10%; Upkeep 1.5xd6)";
  } else if (safety.Adjusted >= 2 && safety.Adjusted < 3) {
    safety.Rating = "Safe";
    safety.status = "(Economy Score +0%; Upkeep 2xd8)";
  } else if (safety.Adjusted >= 3 && safety.Adjusted < 4) {
    safety.Rating = "Guarded";
    safety.status = "(Economy Score +5%; Upkeep 3xd8)";
  } else if (safety.Adjusted >= 4 && safety.Adjusted < 4.6) {
    safety.Rating = "Protected";
    safety.status = "(Economy Score +10%; Upkeep 4xd10)";
  } else if (safety.Adjusted >= 4.6) {
    safety.Rating = "Impregnable";
    safety.status = "(Economy Score +20%; Upkeep 5xd12)";
  }
  return safety.Rating;
}
function upkeep() {
  let level = _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.level;
  let dice = 0;
  let mult = 0;
  switch (safety.Rating) {
    case "Dangerous":
      break;
    case "Lawless":
      dice = 4;
      mult = 1;
      break;
    case "Unsafe":
      dice = 6;
      mult = 1.5;
      break;
    case "Safe":
      dice = 8;
      mult = 2;
      break;
    case "Guarded":
      dice = 8;
      mult = 3;
      break;
    case "Protected":
      dice = 10;
      mult = 4;
      break;
    case "Impregnable":
      dice = 12;
      mult = 5;
      break;
  }
  let times = level * mult;
  let total = 0;
  for (let i = 0; i < times; i++) {
    total += Math.floor(Math.random() * dice);
  }
  (0,_settlementStats__WEBPACK_IMPORTED_MODULE_0__.vaultAdd)(-total);
}
function safetyBonus(i) {
  safety.Bonus += parseInt(i);
  _weekLog__WEBPACK_IMPORTED_MODULE_3__.changeLog.safety += parseInt(i);
  diCurrent(i);
  intelCurrent(i);
  garCurrent(i);
  diMax();
  intelMax();
  garMax();
}
function diBonus(i) {
  safety.diB += parseInt(i);
  console.log("whoop");
  _weekLog__WEBPACK_IMPORTED_MODULE_3__.changeLog.diB += parseInt(i);
  diCurrent(i);
  diMax();
}
function diCurrent(i) {
  safety.diC += parseInt(i);
  _weekLog__WEBPACK_IMPORTED_MODULE_3__.changeLog.di += parseInt(i);
}
function diMax() {
  safety.diM = _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.level * 2 + safety.Bonus + safety.diB;
}
function intelBonus(i) {
  safety.intelB += parseInt(i);
  _weekLog__WEBPACK_IMPORTED_MODULE_3__.changeLog.intelB += parseInt(i);
  intelCurrent(i);
  intelMax();
}
function intelCurrent(i) {
  safety.intelC += parseInt(i);
  _weekLog__WEBPACK_IMPORTED_MODULE_3__.changeLog.intel += parseInt(i);
}
function intelMax() {
  safety.intelM = _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.level + safety.Bonus + safety.intelB;
}
function garBonus(i) {
  safety.garB += parseInt(i);
  _weekLog__WEBPACK_IMPORTED_MODULE_3__.changeLog.garB += parseInt(i);
  garCurrent(i);
  garMax();
}
function garCurrent(i) {
  safety.garC += parseInt(i);
  _weekLog__WEBPACK_IMPORTED_MODULE_3__.changeLog.gar += parseInt(i);
}
function garMax() {
  safety.garM = _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.level * 2 + safety.Bonus + safety.garB;
}
function garrisonModifier() {
  let i = 0;
  switch (_survivalStats__WEBPACK_IMPORTED_MODULE_1__.survival.Rating) {
    case "Dying":
      i = -3;
      break;
    case "Endangered":
      i = -2;
      break;
    case "Desperate":
      i = -1;
      break;
    case "Stable":
    case "Developing":
      i = 0;
      break;
    case "Blossoming":
      i = 1;
      break;
    case "Flourishing":
      i = 3;
      break;
  }
  return i;
}
function diBox() {
  let wrapper = document.querySelector("#diBox");
  wrapper.innerHTML = "";
  let label = document.createElement("div");
  label.textContent = "Defense";
  label.classList.add("flexRow", "center", "gap");
  wrapper.appendChild(label);
  let valRow = document.createElement("div");
  valRow.classList.add("flexRow");
  let value = document.createElement("div");
  value.textContent = safety.diC;
  value.style = "text-align: center; font-size: 22px";
  valRow.appendChild(value);
  let max = document.createElement("div");
  diMax();
  max.textContent = "/" + " " + safety.diM;
  max.style = "font-size: 16px; align-self: end;";
  max.classList.add("text-center");
  valRow.appendChild(max);
  let spBuy = document.createElement("button");
  spBuy.classList.add("tooltip");
  spBuy.textContent = "+";
  spBuy.style = "border-radius: 50%; font-size: 12px; align-self: end; margin-left: 4px";
  spBuy.addEventListener("click", () => {
    if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "" || _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "Survivalist") {
      if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.settlementPoints > 1) {
        (0,_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlementPoints)(-2);
        diCurrent(1);
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_5__.renderAll)();
      }
    } else if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "Fortified") {
      if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.settlementPoints > 0) {
        (0,_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlementPoints)(-1);
        diCurrent(1);
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_5__.renderAll)();
      }
    } else if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "Mercantile") {
      if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.settlementPoints > 2) {
        (0,_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlementPoints)(-3);
        diCurrent(1);
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_5__.renderAll)();
      }
    }
  });
  let toolTip = document.createElement("span");
  if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "" || _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "Survivalist") {
    toolTip.textContent = "Spend 2 Settlement Points to gain 1 Defensive Infrastructure";
  } else if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "Fortified") {
    toolTip.textContent = "Spend 1 Settlement Point to gain 1 Defensive Infrastructure";
  } else if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "Mercantile") {
    toolTip.textContent = "Spend 3 Settlement Points to gain 1 Defensive Infrastructure";
  }
  toolTip.classList.add("tooltiptext");
  spBuy.appendChild(toolTip);
  valRow.appendChild(spBuy);
  wrapper.appendChild(valRow);
  let bonus = document.createElement("span");
  let i = "";
  if (safety.diB >= 0) {
    i = "+";
  } else {
    i = "-";
  }
  bonus.textContent = " " + i + safety.diB;
  bonus.style = "font-size: 14px";
  bonus.classList.add("text-center");
  label.appendChild(bonus);
}
function intelBox() {
  let wrapper = document.querySelector("#intelBox");
  wrapper.innerHTML = "";
  let label = document.createElement("div");
  label.textContent = "Intel";
  label.classList.add("flexRow", "center", "gap");
  wrapper.appendChild(label);
  let valRow = document.createElement("div");
  valRow.classList.add("flexRow");
  let value = document.createElement("div");
  value.textContent = safety.intelC;
  value.style = "text-align: center; font-size: 22px";
  valRow.appendChild(value);
  let max = document.createElement("div");
  intelMax();
  max.textContent = "/" + " " + safety.intelM;
  max.style = "font-size: 16px; align-self: end;";
  max.classList.add("text-center");
  valRow.appendChild(max);
  let spBuy = document.createElement("button");
  spBuy.classList.add("tooltip");
  spBuy.textContent = "+";
  spBuy.style = "border-radius: 50%; font-size: 12px; align-self: end; margin-left: 4px";
  spBuy.addEventListener("click", () => {
    if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type != "Fortified") {
      if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.settlementPoints > 1) {
        (0,_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlementPoints)(-2);
        intelCurrent(1);
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_5__.renderAll)();
      }
    } else {
      if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.settlementPoints > 0) {
        (0,_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlementPoints)(-1);
        intelCurrent(1);
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_5__.renderAll)();
      }
    }
  });
  let toolTip = document.createElement("span");
  if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type != "Fortified") {
    toolTip.textContent = "Spend 2 Settlement Points to gain 1 Intelligence";
  } else {
    toolTip.textContent = "Spend 1 Settlement Point to gain 1 Intelligence";
  }
  toolTip.classList.add("tooltiptext");
  spBuy.appendChild(toolTip);
  valRow.appendChild(spBuy);
  wrapper.appendChild(valRow);
  let bonus = document.createElement("span");
  let i = "";
  if (safety.intelB >= 0) {
    i = "+";
  } else {
    i = "-";
  }
  bonus.textContent = " " + i + safety.intelB;
  bonus.style = "font-size: 14px";
  bonus.classList.add("text-center");
  label.appendChild(bonus);
}
function garBox() {
  let wrapper = document.querySelector("#garBox");
  wrapper.innerHTML = "";
  let label = document.createElement("div");
  label.textContent = "Garrison";
  label.classList.add("flexRow", "center", "gap");
  wrapper.appendChild(label);
  let valRow = document.createElement("div");
  valRow.classList.add("flexRow");
  let value = document.createElement("div");
  value.textContent = safety.garC;
  value.style = "text-align: center; font-size: 22px";
  valRow.appendChild(value);
  let max = document.createElement("div");
  garMax();
  max.textContent = "/" + " " + safety.garM;
  max.style = "font-size: 16px; align-self: end;";
  max.classList.add("text-center");
  valRow.appendChild(max);
  let spBuy = document.createElement("button");
  spBuy.classList.add("tooltip");
  spBuy.textContent = "+";
  spBuy.style = "border-radius: 50%; font-size: 12px; align-self: end; margin-left: 4px";
  spBuy.addEventListener("click", () => {
    if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type != "Fortified") {
      if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.settlementPoints > 2) {
        (0,_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlementPoints)(-3);
        garCurrent(1);
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_5__.renderAll)();
      }
    } else {
      if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.settlementPoints > 1) {
        (0,_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlementPoints)(-2);
        garCurrent(1);
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_5__.renderAll)();
      }
    }
  });
  let toolTip = document.createElement("span");
  if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type != "Fortified") {
    toolTip.textContent = "Spend 3 Settlement Points to gain 1 Garrison";
  } else {
    toolTip.textContent = "Spend 2 Settlement Points to gain 1 Garrison";
  }
  toolTip.classList.add("tooltiptext");
  spBuy.appendChild(toolTip);
  valRow.appendChild(spBuy);
  wrapper.appendChild(valRow);
  let bonus = document.createElement("span");
  let i = "";
  if (safety.garB >= 0) {
    i = "+";
  } else {
    i = "-";
  }
  bonus.textContent = " " + i + safety.garB;
  bonus.style = "font-size: 14px";
  bonus.classList.add("text-center");
  label.appendChild(bonus);
}
let safActions = [{
  name: "Build Barricades",
  id: "buildBarricade",
  type: "defensive infrastructure",
  description: "A party member can attempt a Crafting or Athletics check to construct barricades in and around the settlement. This costs 5gp +2 per proficiency rank multiplied by the Settlement Level per use. This cannot increase Defensive Infrastructure above its max."
}, {
  name: "Construct Traps",
  id: "buildTraps",
  type: "defensive infrastructure",
  description: "A party member can attempt a Thievery or Crafting Check to create traps to protect from potential attackers. This costs 5gp +2 per proficiency rank multiplied by the Settlement Level per use. This cannot increase Defensive Infrastructure above its max."
}, {
  name: "Erect Wards",
  id: "erectWards",
  type: "defensive infrastructure",
  description: "A party member can attempt an Arcane, Nature, Occult, or Religion check to erect magical alarms and traps to deter attackers or intruders. This cannot increase Defensive Infrastructure above its max."
}, {
  name: "Scout Area",
  id: "scoutArea",
  type: "intelligence",
  description: "A party member can attempt a Nature, Perception, or Survival check to find potential dangers in the surrounding area."
}, {
  name: "Ear to the Ground",
  id: "earToGround",
  type: "intelligence",
  description: "A party member can attempt a Society or Stealth check to pick up on rumors and scuttlebutt in the settlement, possibly learning of any insider threats."
}, {
  name: "Train Citizens",
  id: "trainCitizens",
  type: "garrison",
  description: "A party member can train forces to be better suited for combat. This can only be done once per character level and requires you to be at least an expert in at least one weapon category. Make a Follow the Expert roll for the settlement, using its level and Safety Score divided by 5 as bonuses, plus 2/3/4 depending on your proficiency rating."
}];
function showSafAction(item) {
  let wrapper = document.querySelector("#setStatus");
  wrapper.innerHTML = "";
  let header = document.createElement("div");
  header.style = "display: flex; justify-content: center; width: 100%; padding: 1rem; background: rgba(200,200,230,.5); box-sizing: border-box; border-radius: .5rem .5rem 0 0;";
  let spacer = document.createElement("div");
  spacer.innerHTML = "&nbsp;";
  spacer.style = "width: 25%;";
  header.appendChild(spacer);
  let title = document.createElement("div");
  title.textContent = item.name;
  title.style = "display: flex; justify-content: center; align-items: center; width: 50%";
  header.appendChild(title);
  let backBox = document.createElement("div");
  backBox.style = "width: 25%; display: flex; justify-content: center; align-items: center;";
  let backBtn = document.createElement("button");
  backBtn.textContent = "Back";
  backBtn.style = "border-radius: 1rem;";
  backBtn.addEventListener("click", () => {
    (0,_renderActionsArea__WEBPACK_IMPORTED_MODULE_4__["default"])();
  });
  backBox.appendChild(backBtn);
  header.appendChild(backBox);
  wrapper.appendChild(header);
  let content = document.createElement("div");
  content.style = "font-size: 16px; padding: 1rem";
  content.textContent = item.description;
  wrapper.appendChild(content);
}


/***/ }),

/***/ "./src/settlementManager.js":
/*!**********************************!*\
  !*** ./src/settlementManager.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createNewSettlement: () => (/* binding */ createNewSettlement),
/* harmony export */   settlementList: () => (/* reexport safe */ _storage__WEBPACK_IMPORTED_MODULE_10__.settlementList),
/* harmony export */   swapButtonRender: () => (/* binding */ swapButtonRender)
/* harmony export */ });
/* harmony import */ var _buildingsStats__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./buildingsStats */ "./src/buildingsStats.js");
/* harmony import */ var _compileEvent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./compileEvent */ "./src/compileEvent.js");
/* harmony import */ var _economyStats__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./economyStats */ "./src/economyStats.js");
/* harmony import */ var _pageRenders__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pageRenders */ "./src/pageRenders.js");
/* harmony import */ var _projectBoxRender__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./projectBoxRender */ "./src/projectBoxRender.js");
/* harmony import */ var _renderDeployed__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./renderDeployed */ "./src/renderDeployed.js");
/* harmony import */ var _renderNotes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./renderNotes */ "./src/renderNotes.js");
/* harmony import */ var _renderUpgrades__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./renderUpgrades */ "./src/renderUpgrades.js");
/* harmony import */ var _safetyStats__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./safetyStats */ "./src/safetyStats.js");
/* harmony import */ var _settlementStats__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./settlementStats */ "./src/settlementStats.js");
/* harmony import */ var _storage__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./storage */ "./src/storage.js");
/* harmony import */ var _survivalStats__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./survivalStats */ "./src/survivalStats.js");
/* harmony import */ var _weekLog__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./weekLog */ "./src/weekLog.js");













let loadOption = "none";
function swapButtonRender() {
  let wrapper = document.querySelector("body");
  let swap = document.createElement("button");
  swap.textContent = "Change Settlements";
  swap.style = "position: absolute; top: 0; left: 0; border-radius: 1rem";
  swap.addEventListener("click", () => {
    openSettlementSwap();
  });
  wrapper.appendChild(swap);
}
function openSettlementSwap() {
  let wrapper = document.querySelector("body");
  let overlay = document.createElement("div");
  overlay.id = "changeOverlay";
  overlay.style = "background: rgba(0,0,0,.5); height: 100vh; width: 100vw; position: absolute; top: 0; left: 0; z-index: 1";
  overlay.addEventListener("click", () => {
    document.querySelector("#changeOverlay").remove();
    document.querySelector("#changeBox").remove();
  });
  wrapper.appendChild(overlay);
  let box = document.createElement("div");
  box.style = "width: 60rem; height: 30rem; position: absolute; top: calc(50% - 15rem); left: calc(50% - 30rem); z-index: 1; background: aliceblue; border-radius: 1rem; border: 2px solid rgba(0,0,0,.5)";
  box.id = "changeBox";
  let header = document.createElement("div");
  header.classList.add("subHeader");
  header.style = "border-radius: 1rem 1rem 0 0; padding: 1rem";
  let backBox = document.createElement("div");
  backBox.style = "width: 25%; display: flex; justify-content: center; align-items: center";
  let backBtn = document.createElement("button");
  backBtn.textContent = "Back";
  backBtn.style = "border-radius: 1rem";
  backBtn.addEventListener("click", () => {
    document.querySelector("#changeOverlay").remove();
    document.querySelector("#changeBox").remove();
  });
  backBox.appendChild(backBtn);
  header.appendChild(backBox);
  let textBox = document.createElement("div");
  textBox.textContent = "Change Settlements";
  textBox.style = "display: flex; justify-content: center; align-items: center; font-size: 22px; width: 50%";
  header.appendChild(textBox);
  let newBox = document.createElement("div");
  newBox.style = "width: 25%;";
  header.appendChild(newBox);
  box.appendChild(header);
  let displayArea = document.createElement("div");
  displayArea.style = "display: flex; flex-wrap: wrap; width: 100%";
  displayArea.id = "settlementChangeArea";
  box.appendChild(displayArea);
  wrapper.appendChild(box);
  settlementChangeArea();
}
function settlementChangeArea() {
  let displayArea = document.querySelector("#settlementChangeArea");
  displayArea.innerHTML = "";
  let chooseRow = document.createElement("div");
  chooseRow.classList.add("flexRow", "center", "gap");
  chooseRow.style = "width: 100%; padding: 2rem";
  let selectLabel = document.createElement("div");
  selectLabel.textContent = "Select Settlement";
  chooseRow.appendChild(selectLabel);
  let selectorBox = document.createElement("div");
  let selector = document.createElement("select");
  selector.style = "width: 100%";
  let selectOption = document.createElement("option");
  selectOption.value = "none";
  selectOption.label = "-Select-";
  selector.appendChild(selectOption);
  Object.keys(_storage__WEBPACK_IMPORTED_MODULE_10__.settlementList).forEach(item => {
    let town = _storage__WEBPACK_IMPORTED_MODULE_10__.settlementList[item];
    let option = document.createElement("option");
    option.value = town["Settlement Data"].name;
    option.label = town["Settlement Data"].name;
    selector.appendChild(option);
  });
  let newOption = document.createElement("option");
  newOption.value = "create";
  newOption.label = "-Create New-";
  selector.appendChild(newOption);
  selectorBox.appendChild(selector);
  chooseRow.appendChild(selectorBox);
  displayArea.appendChild(chooseRow);
  selector.value = loadOption;
  let inputRow = document.createElement("div");
  inputRow.classList.add("flexRow", "center", "gap");
  inputRow.style = "align-items: center; width: 100%; margin: 0 2rem 2rem";
  let inputLabel = document.createElement("div");
  inputLabel.textContent = "New Settlement Name:";
  inputRow.appendChild(inputLabel);
  let input = document.createElement("input");
  input.style = "width: 25%";
  inputRow.appendChild(input);
  let buttonRow = document.createElement("div");
  buttonRow.classList.add("flexRow", "center");
  buttonRow.style = "gap: 4rem; width: 100%; padding: 0 2rem";
  let createBox = document.createElement("div");
  let createBtn = document.createElement("button");
  createBtn.textContent = "Create";
  createBtn.addEventListener("click", () => {
    let newSettlement = input.value;
    createNewSettlement(newSettlement);
    let set = _storage__WEBPACK_IMPORTED_MODULE_10__.settlementList[input.value];
    (0,_settlementStats__WEBPACK_IMPORTED_MODULE_9__.setSettlement)(set["Settlement Data"]);
    (0,_survivalStats__WEBPACK_IMPORTED_MODULE_11__.setSurvival)(set["Survival Data"]);
    (0,_safetyStats__WEBPACK_IMPORTED_MODULE_8__.setSafety)(set["Safety Data"]);
    (0,_economyStats__WEBPACK_IMPORTED_MODULE_2__.setEconomy)(set["Economy Data"]);
    (0,_buildingsStats__WEBPACK_IMPORTED_MODULE_0__.setBuildings)(set["Building Data"]);
    (0,_projectBoxRender__WEBPACK_IMPORTED_MODULE_4__.setProjects)(set["Project Data"]);
    (0,_renderDeployed__WEBPACK_IMPORTED_MODULE_5__.setDeployed)(set["Deployed Data"]);
    (0,_renderNotes__WEBPACK_IMPORTED_MODULE_6__.setNotes)(set["Notes Data"]);
    (0,_renderUpgrades__WEBPACK_IMPORTED_MODULE_7__.setSelectedUpgrades)(set["Selected Upgrades Data"]);
    (0,_renderUpgrades__WEBPACK_IMPORTED_MODULE_7__.setSelectedLevels)(set["Selected Levels Data"]);
    (0,_renderUpgrades__WEBPACK_IMPORTED_MODULE_7__.setNonselectedUpgrades)(set["Nonselected Upgrades Data"]);
    (0,_compileEvent__WEBPACK_IMPORTED_MODULE_1__.setCount)(set["Project Count Data"]);
    (0,_weekLog__WEBPACK_IMPORTED_MODULE_12__.setWeekLog)(set["Week Log Data"]);
    (0,_weekLog__WEBPACK_IMPORTED_MODULE_12__.setChangeLog)(set["Change Log Data"]);
    document.querySelector("body").innerHTML = "";
    (0,_pageRenders__WEBPACK_IMPORTED_MODULE_3__.refreshPage)();
    loadOption = "none";
  });
  createBox.appendChild(createBtn);
  let switchBox = document.createElement("div");
  let switchBtn = document.createElement("button");
  switchBtn.textContent = "Switch";
  switchBtn.addEventListener("click", () => {
    (0,_storage__WEBPACK_IMPORTED_MODULE_10__.saveSettlement)([_settlementStats__WEBPACK_IMPORTED_MODULE_9__.settlement.name]);
    let set = _storage__WEBPACK_IMPORTED_MODULE_10__.settlementList[selector.value];
    (0,_settlementStats__WEBPACK_IMPORTED_MODULE_9__.setSettlement)(set["Settlement Data"]);
    (0,_survivalStats__WEBPACK_IMPORTED_MODULE_11__.setSurvival)(set["Survival Data"]);
    (0,_safetyStats__WEBPACK_IMPORTED_MODULE_8__.setSafety)(set["Safety Data"]);
    (0,_economyStats__WEBPACK_IMPORTED_MODULE_2__.setEconomy)(set["Economy Data"]);
    (0,_buildingsStats__WEBPACK_IMPORTED_MODULE_0__.setBuildings)(set["Building Data"]);
    (0,_projectBoxRender__WEBPACK_IMPORTED_MODULE_4__.setProjects)(set["Project Data"]);
    (0,_renderDeployed__WEBPACK_IMPORTED_MODULE_5__.setDeployed)(set["Deployed Data"]);
    (0,_renderNotes__WEBPACK_IMPORTED_MODULE_6__.setNotes)(set["Notes Data"]);
    (0,_renderUpgrades__WEBPACK_IMPORTED_MODULE_7__.setSelectedUpgrades)(set["Selected Upgrades Data"]);
    (0,_renderUpgrades__WEBPACK_IMPORTED_MODULE_7__.setSelectedLevels)(set["Selected Levels Data"]);
    (0,_renderUpgrades__WEBPACK_IMPORTED_MODULE_7__.setNonselectedUpgrades)(set["Nonselected Upgrades Data"]);
    (0,_compileEvent__WEBPACK_IMPORTED_MODULE_1__.setCount)(set["Project Count Data"]);
    (0,_weekLog__WEBPACK_IMPORTED_MODULE_12__.setWeekLog)(set["Week Log Data"]);
    (0,_weekLog__WEBPACK_IMPORTED_MODULE_12__.setChangeLog)(set["Change Log Data"]);
    document.querySelector("body").innerHTML = "";
    (0,_pageRenders__WEBPACK_IMPORTED_MODULE_3__.refreshPage)();
    loadOption = "none";
  });
  switchBox.appendChild(switchBtn);
  let resetBox = document.createElement("div");
  let resetBtn = document.createElement("button");
  resetBtn.textContent = "Reset";
  resetBtn.addEventListener("click", () => {
    let answer3 = confirm(`Are you sure you want to reset ${selector.value}?`);
    if (answer3 == true) {
      resetSettlement(selector.value);
      document.querySelector("body").innerHTML = "";
      (0,_pageRenders__WEBPACK_IMPORTED_MODULE_3__.refreshPage)();
      location.reload();
      loadOption = "none";
    }
  });
  resetBox.appendChild(resetBtn);
  let deleteBox = document.createElement("div");
  let deleteBtn = document.createElement("button");
  deleteBtn.textContent = "Delete";
  deleteBtn.addEventListener("click", () => {
    let answer4 = confirm("Are you sure you want to delete this Settlement?");
    if (answer4 == true) {
      delete _storage__WEBPACK_IMPORTED_MODULE_10__.settlementList[selector.value];
      if (Object.keys(_storage__WEBPACK_IMPORTED_MODULE_10__.settlementList).length == 0) {
        let response = prompt("Enter new Settlement Name");
        createNewSettlement(response);
      }
      let item = Object.keys(_storage__WEBPACK_IMPORTED_MODULE_10__.settlementList)[0];
      let set = _storage__WEBPACK_IMPORTED_MODULE_10__.settlementList[item];
      (0,_settlementStats__WEBPACK_IMPORTED_MODULE_9__.setSettlement)(set["Settlement Data"]);
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_11__.setSurvival)(set["Survival Data"]);
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_8__.setSafety)(set["Safety Data"]);
      (0,_economyStats__WEBPACK_IMPORTED_MODULE_2__.setEconomy)(set["Economy Data"]);
      (0,_buildingsStats__WEBPACK_IMPORTED_MODULE_0__.setBuildings)(set["Building Data"]);
      (0,_projectBoxRender__WEBPACK_IMPORTED_MODULE_4__.setProjects)(set["Project Data"]);
      (0,_renderDeployed__WEBPACK_IMPORTED_MODULE_5__.setDeployed)(set["Deployed Data"]);
      (0,_renderNotes__WEBPACK_IMPORTED_MODULE_6__.setNotes)(set["Notes Data"]);
      (0,_renderUpgrades__WEBPACK_IMPORTED_MODULE_7__.setSelectedUpgrades)(set["Selected Upgrades Data"]);
      (0,_renderUpgrades__WEBPACK_IMPORTED_MODULE_7__.setSelectedLevels)(set["Selected Levels Data"]);
      (0,_renderUpgrades__WEBPACK_IMPORTED_MODULE_7__.setNonselectedUpgrades)(set["Nonselected Upgrades Data"]);
      (0,_compileEvent__WEBPACK_IMPORTED_MODULE_1__.setCount)(set["Project Count Data"]);
      (0,_weekLog__WEBPACK_IMPORTED_MODULE_12__.setWeekLog)(set["Week Log Data"]);
      (0,_weekLog__WEBPACK_IMPORTED_MODULE_12__.setChangeLog)(set["Change Log Data"]);
      loadOption = "none";
      document.querySelector("body").innerHTML = "";
      (0,_pageRenders__WEBPACK_IMPORTED_MODULE_3__.refreshPage)();
      openSettlementSwap();
    }
  });
  deleteBox.appendChild(deleteBtn);
  let box = document.querySelector("#changeBox");
  box.appendChild(displayArea);
  selector.addEventListener("change", () => {
    loadOption = selector.value;
    if (selector.value === _settlementStats__WEBPACK_IMPORTED_MODULE_9__.settlement.name) {
      settlementChangeArea();
      buttonRow.appendChild(resetBox);
      buttonRow.appendChild(deleteBox);
      displayArea.appendChild(buttonRow);
    } else if (selector.value === "create") {
      settlementChangeArea();
      buttonRow.appendChild(createBox);
      displayArea.appendChild(inputRow);
      displayArea.appendChild(buttonRow);
    } else if (selector.value === "none") {
      settlementChangeArea();
    }
  });
}
function createNewSettlement(inputName) {
  let settlementCount = Object.keys(_storage__WEBPACK_IMPORTED_MODULE_10__.settlementList).length;
  settlementCount++;
  let newName = "Settlement " + settlementCount;
  if (inputName == "") {
    inputName = newName;
  }
  _storage__WEBPACK_IMPORTED_MODULE_10__.settlementList[inputName] = {
    "Settlement Data": {
      name: inputName,
      level: 3,
      currentHealth: 100,
      maxHealthBase: 100,
      maxHealthBonus: 0,
      settlementPoints: 0,
      weeksPassed: 0,
      drought: false,
      type: 0,
      vault: 385,
      notes: ""
    },
    "Survival Data": {
      Base: 0,
      Adjusted: 0,
      Rating: 0,
      Bonus: 0,
      foodB: 0,
      foodC: 9,
      foodM: 0,
      supB: 0,
      supC: 5,
      supM: 0,
      medB: 0,
      medC: 3,
      medM: 0
    },
    "Safety Data": {
      Base: 0,
      Adjusted: 0,
      Rating: 0,
      Bonus: 0,
      status: "",
      diB: 0,
      diC: 2,
      diM: 0,
      intelB: 0,
      intelC: 2,
      intelM: 0,
      garB: 0,
      garC: 3,
      garM: 0
    },
    "Economy Data": {
      Base: 0,
      Adjusted: 0,
      Rating: 0,
      status: "",
      Bonus: 0,
      tradeB: 0,
      tradeC: 6,
      tradeM: 0,
      prodB: 0,
      prodC: 4,
      prodM: 0,
      taxInc: 0,
      taxDec: 0
    },
    "Building Data": [{
      name: "Walls",
      id: "wa",
      level: 0,
      status: "You haven't built any walls yet.",
      level0: {
        name: "No Walls",
        desc: "Having no walls is the default settlement configuration.",
        prod: "N/A",
        level: "N/A"
      },
      level1: {
        name: "Pallisade Walls",
        desc: "Pallisade walls are a great first line of defense against unorganized attacks or attacks from mindless creatures. They increase Defensive Infrastructure Bonus by +1 and Settlement Max Health by +5.",
        prod: 14,
        level: 2,
        rewards: {
          di: 1,
          maxHealth: 5
        },
        status: "You have Pallisade Walls, granting you a Defense Bonus of +1 and Max Health bonus of +5",
        gold: 350,
        supplies: 8
      },
      level2: {
        name: "Stone Walls",
        desc: "Stone Walls are a significant improvement over Pallisade Walls, proving difficult for all but the most militant of attackers. They increase Defensive Infrastructure Bonus by +1 and increase Settlement Max Health by +10.",
        prod: 21,
        level: 6,
        rewards: {
          di: 1,
          maxHealth: 10
        },
        status: "You have Stone Walls, granting you a total Defense Bonus of +2 and total Max Health Bonus of +15 ",
        gold: 1200,
        supplies: 10
      },
      level3: {
        name: "Reinforced Stone Walls",
        desc: "Reinforced Stone Walls are the epitome of static settlement protection. They increase Defensive Infrastructure and Intelligence bonuses by +1 and increase Settlement Max Health by +20.",
        prod: 28,
        level: 10,
        rewards: {
          di: 1,
          intel: 1,
          maxHealth: 20
        },
        status: "You have Reinforced Stone Walls, granting you a total Defense Bonus of +3, an Intelligence Bonus of +1, and a Max Health Bonus of +35.",
        gold: 3200,
        supplies: 20
      }
    }, {
      name: "Wells",
      id: "we",
      level: 0,
      status: "You haven't built any wells yet.",
      level0: {
        name: "No Well",
        desc: "Having no well is the default settlement configuration.",
        prod: "N/A",
        level: "N/A"
      },
      level1: {
        name: "Simple Well",
        desc: "Building a simple Well reduces the Health damage from being without water for a week from 25 to 20; it also reduces the impact of Drought Events by 1.",
        prod: 7,
        level: 1,
        rewards: {},
        status: "You have a Simple Well, reducing weekly health loss from a lack of water from 25 to 20; Drought Event Impacts reduced by 1",
        gold: 100,
        supplies: 2
      },
      level2: {
        name: "Simple Well Network",
        desc: "Building a Simple Well Network expands the capacity of groundwater access. It further reduces the Health damage from being without water for a week from 20 to 15 and also reduces the impact of Drought Events by 2.",
        prod: 10,
        level: 5,
        rewards: {},
        status: "You have a Simple Well Network, reducing weekly health loss from a lack of water from 20 - 15; Drought Event Impacts reduced by 2",
        gold: 200,
        supplies: 6
      },
      level3: {
        name: "Evaporation Collectors",
        desc: "Building Evaporation Collectors provides much better water retention for the well network. This upgrade ensures the settlement always has access to water and futher decreases the impact from Drought Events by 3.",
        prod: 14,
        level: 8,
        rewards: {},
        status: "You have Evaporation Collectors, removing health loss from a lack of water; Drought Impact Events reduced by 4",
        gold: 800,
        supplies: 14
      }
    }, {
      name: "Network",
      id: "ne",
      level: 0,
      status: "You haven't built an Intelligence Network yet.",
      level0: {
        name: "No Intelligence Network",
        desc: "Having no Intelligence Network is the default settlement configuration.",
        prod: "N/A",
        level: "N/A"
      },
      level1: {
        name: "Community Watch Hub",
        desc: "Building a Community Watch Hub is a solid start to improving leadership's knowledge of internal affairs - particularly those things that aren't generally made public. It provides and Intelligence Bonus of +1.",
        prod: 10,
        level: 3,
        rewards: {
          intel: 1
        },
        status: "You have a Community Watch Hub, increasing your Intelligence Bonus by +1",
        gold: 150,
        supplies: 2,
        intelligence: 2
      },
      level2: {
        name: "Planted Merchants",
        desc: "Funding Planted Merchants provides a much wider berth of knowledge about the goings on in and around town. It provides an Intelligence Bonus of +1 and prevents you from losing Intelligence every week.",
        prod: 18,
        level: 7,
        rewards: {
          intel: 1
        },
        status: "You have Planted Merchants, increasing your Intelligence Bonus by +2 and preventing weekly Intel loss.",
        gold: 900,
        supplies: 6,
        intelligence: 4
      },
      level3: {
        name: "Sensitive Compartmented Information Facility (SCIF)",
        desc: "Building a SCIF ensures intelligence remains the sole property of the leadership of the settlement. It Increase Intelligence Bonus by +2 and allows you to convert Garrison into Intelligence.",
        prod: 21,
        level: 11,
        rewards: {
          intel: 2
        },
        status: "You have a SCIF, increasing your Intelligence Bonus by +4, preventing weekly Intel Loss, and unlocking the 'Active ISR' Action",
        gold: 3000,
        supplies: 15,
        intelligence: 7
      }
    }, {
      name: "Barracks",
      id: "ba",
      level: 0,
      status: "You haven't upgraded the Barracks yet.",
      level0: {
        name: "Standard Barracks",
        desc: "Having a standard Barracks is the default settlement configuration.",
        prod: "N/A",
        level: "N/A"
      },
      level1: {
        name: "Kitchen",
        desc: "Building a Kitchen ensures garrisoned forces are well fed at all times and can support more strenuous training exercises. This upgrade unlocks Militia Cavalry and Militia Pikemen, as well as the 'Feed the Troops' action, which allows you to convert Food into Garrison at a 6-1 rate. Finally, it grants a Garrison Bonus of +1.",
        prod: 7,
        level: 2,
        rewards: {
          gar: 1
        },
        status: "You have built a Kitchen, increasing your Garrison Bonus by +1. See Troop Info for unlocks; 'Feed the Troops' Action",
        gold: 300,
        supplies: 4,
        food: 4
      },
      level2: {
        name: "Training Ground",
        desc: "Building a Training Ground allows garrisoned forces to complete regular training exercises in a variety of circumstances. It unlocks Guard Infantry, Guard Archers, Guard Pikemen, and Guard Cavalry troop and provides a Garrison Bonus of +1.",
        prod: 10,
        level: 6,
        rewards: {
          gar: 1
        },
        status: "You have a Training Ground, increasing Garrison Bonus by +2. See Troop Info for unlocks; 'Feed the Troops' Action",
        gold: 900,
        supplies: 10,
        "medical capacity": 4
      },
      level3: {
        name: "War Room",
        desc: "Building a War Room allows garrisoned units to study battles, engage in theoretical wartime discussions, and maintain tactical capabilities on larger scales. It unlocks Soldier Infantry, Longbowmen, Phalanx, and Cannon troops and provides a Garrison Bonus of +1.",
        prod: 20,
        level: 11,
        rewards: {
          gar: 1
        },
        status: "You have a War Room, increasing your Garrison Bonus by +4. See Troop Info for unlocks; 'Feed the Troops' Action",
        gold: 3100,
        supplies: 16,
        intelligence: 4
      }
    }, {
      name: "Granary",
      id: "gr",
      level: 0,
      status: "You haven't built a Granary yet.",
      level0: {
        name: "No Granary",
        desc: "Having no Granary is the default settlement configuration.",
        prod: "N/A",
        level: "N/A"
      },
      level1: {
        name: "Improved Sifters",
        desc: "Building Improved Sifters allows finer flours to be separated from unrefined grains, increasing operating efficiency of the granary. This increases Food Bonus by +1, grants +2 Food points per week, and unlocks the Harvest Action, allowing you to convert Productivity into Food at a 2-1 ratio.",
        prod: 7,
        level: 2,
        rewards: {
          food: 1
        },
        status: "You have Improved Sifters, increasing your Food Bonus by +1; Food Points +2 per week; 'Harvest' Action",
        gold: 125,
        supplies: 4
      },
      level2: {
        name: "Reinforced Silos",
        desc: "Building Reinforced Silos greatly improves the settlement's capacity for storing food and ensures it remains viable for longer. This increases Food Bonus by +1 and grants a total of +4 Food points per week.",
        prod: 14,
        level: 6,
        rewards: {
          food: 1
        },
        status: "You have Reinforced Silos, increasing your Food Bonus by +2; Food Points +4 per week; 'Harvest' Action",
        gold: 700,
        supplies: 10
      },
      level3: {
        name: "Reinforced Grinder",
        desc: "Building a Reinforced Grinder greatly improves the speed with which harvested grain can be turned into a usable product. This increases Food Bonus by +2 and grants a total of +7 Food points per week.",
        prod: 16,
        level: 10,
        rewards: {
          food: 2
        },
        status: "You have Reinforced Grinder, increasing your Food Bonus by +4; Food Points +7 per week; 'Harvest' Action",
        gold: 2800,
        supplies: 15
      }
    }, {
      name: "Market",
      id: "ma",
      level: 0,
      status: "You haven't upgraded the Market yet.",
      level0: {
        name: "Standard Market",
        desc: "Having a Standard Market is the default settlement configuration.",
        prod: "N/A",
        level: "N/A"
      },
      level1: {
        name: "Legal Fence",
        desc: "Funding a Legal Fence ensures more products reach the market, driving higher trade. This increases Trade Bonus by +1, increases the sale value of goods by 2%, and decreases buy price by 5%.",
        prod: 7,
        level: 3,
        rewards: {
          trade: 1
        },
        status: "You have a Legal Fence, increasing Trade Bonus by +1; Buy at 5% discount; Sell at 2% mark-up",
        gold: 200,
        supplies: 3
      },
      level2: {
        name: "Night Market",
        desc: "Building a Night Market ensures there is always trade happening, even if its in short supply. This further increases Trade Bonus by +1, increases total sale value of goods by 5%, and decreases the total price by 10%.",
        prod: 12,
        level: 6,
        rewards: {
          trade: 1
        },
        status: "You have a Night Market, increasing Trade Bonus by +2; Buy at 10% discount; Sell at 5% mark-up",
        gold: 850,
        supplies: 8
      },
      level3: {
        name: "Auction House",
        desc: "Building an Auction House drastically improves the number of out-of-towners coming in to strike a deal. This futher increases Trade Bonus by +2, increases the total sale value of goods by 10%, and decreases total buy price by 20%. It also unlocks the 'Fire Sale' action, where you decrease each sellable component by 1d6 (roll separately for each). When you do, you gain 150% profit.",
        prod: 21,
        level: 8,
        rewards: {
          trade: 2
        },
        status: "You have an Auction House, increasing Trade Bonus by +4; Buy at 20% discount; Sell at 10% mark-up; 'Firesale' Action",
        gold: 2500,
        supplies: 12
      }
    }, {
      name: "Union",
      id: "un",
      level: 0,
      status: "You haven't unionized workers yet.",
      level0: {
        name: "No Unionized Workers",
        desc: "Having No Unionized Workers is the default settlement configuration.",
        prod: "N/A",
        level: "N/A"
      },
      level1: {
        name: "Unionize Blue Collar Workers",
        desc: "Unionizing Blue Collar Workers boosts morale for the unskilled laborers in the market, increasing productivity. This increase Productivity Bonus by +1 and reduces repair costs by 1 supply and 1 die.",
        prod: 10,
        level: 3,
        rewards: {
          prod: 1
        },
        status: "You have Unionized Blue Collar Workers, increasing Productivity Bonus by +1; Repair Supplies cost decreased by 1; Repair Gold cost reduced by 1 die;",
        gold: 175,
        supplies: 6
      },
      level2: {
        name: "Unionize White Collar Workers",
        desc: "Unionizing White Collar Workers boosts morale for the tradesmen and artisans in the community, improving overall settlement productivity. This further increases Productivity by +1 and further reduces repair costs by 1 supply and 1 die.",
        prod: 14,
        level: 6,
        rewards: {
          prod: 1
        },
        status: "You have Unionized White Collar Workers; increasing Productivity Bonus by +2; Repair Supplies cost decreased by 2; Repair Gold cost reduced by 2 die",
        gold: 1000,
        supplies: 7
      },
      level3: {
        name: "Worker Representation",
        desc: "Funding Worker Representation guarantees workers' needs are heard, understood, and met. A remarkably forward thinking decision to make, it works wonders in motivating the population to work harder. This further increases Productivity Bonus by +2 and further reduces repair costs by 2 supply and 2 die.",
        prod: 18,
        level: 8,
        rewards: {
          prod: 2
        },
        status: "You have Funded Worker Representation, increasing Productivity Bonus by +4; Repair Supplies cost decreased by 4; Repair Gold cost reduced by 2 die",
        gold: 2750,
        supplies: 12
      }
    }, {
      name: "School",
      id: "sc",
      level: 0,
      status: "You haven't upgraded the School yet.",
      level0: {
        name: "Standard School",
        desc: "Having a Standard School is the fefault settlement configuration.",
        prod: "N/A",
        level: "N/A"
      },
      level1: {
        name: "Expanded Classrooms",
        desc: "Building Expanded Classrooms makes sure more people can receive vital education simultaneously. This increases troop Lore:Warfare by +1, making it easier to issue commands to deployed troops on the battlefield. While this may seem a mior upgrade, it's also required to eventually unlocking Combat Wizards and Battlemages for deployment.",
        prod: 5,
        level: 2,
        rewards: {},
        status: "You have Expanded Classrooms, increasing Troop Lore: Warfare Bonus by +1",
        gold: 250,
        supplies: 4
      },
      level2: {
        name: "Basic Magic Curriculum",
        desc: "Writing a Basic Magic Curriculum ushers in an age of ubiquitous magical representation and application. This further increases troop Lore:Warfare by +1 and unlocks Combat Wizards for deployment.",
        prod: 10,
        level: 6,
        rewards: {},
        status: "You have a Basic Magic Curriculum, increasing Troop Lore: Warfare Bonus by +2; See Troop Info for unlocks",
        gold: 950,
        supplies: 9,
        "player character with Expert in a spell skill": 1
      },
      level3: {
        name: "Advanced Magical Theory",
        desc: "Writing Advanced Magical Theory is a taxing endeavor that calls to it the brightest minds not only in the settlement, but in the nation as a whole. This further increases troop Lore: Warfare by +2 and unlocks Battle Mages for deployment",
        prod: 21,
        level: 10,
        rewards: {},
        status: "You have Advanced Magical Theory, increasing Troop Lore: Warfare Bonus by +4; See Troop Info for unlocks",
        gold: 2850,
        supplies: 14,
        "player character with Master in a spell skill": 1
      }
    }, {
      name: "Infirmary",
      id: "in",
      level: 0,
      status: "You haven't built an Infirmary yet.",
      level0: {
        name: "No Infirmary",
        desc: "Having No Infirmary is the default settlement configuration.",
        prod: "N/A",
        level: "N/A"
      },
      level1: {
        name: "Sterilization Stations",
        desc: "Building Sterilization Stations is all one needs to establish a makeshift infirmary, allowing treatment of the sick and injured away from the filth of day-to-day living. This increases Medical Capacity Bonus by +1, increases passive settlement healing by +2, and decreases damage done to settlement health by 10% (minimum -1).",
        prod: 10,
        level: 3,
        rewards: {
          med: 1
        },
        status: "You have Sterilization Stations, increasing Medical Bonus by +1; Weekly Healing increased by +2; Damage decreased by 10% (min 1)",
        gold: 275,
        "medical capacity": 2
      },
      level2: {
        name: "Operating Rooms",
        desc: "Building Operating Rooms allows treatment of criticall ill or injured patients in clean environments to prevent infection and drastically improve prognosis. This further increases Medical Capacity Bonus by +1, further increases passive settlement healing by +2, and decreases damage to settlement health by 20% (minimum -2).",
        prod: 14,
        level: 7,
        rewards: {
          med: 1
        },
        status: "You have Operating Rooms, increasing Medical Bonus by +2; Weekly Healing increased by + 4; Damage decreased by 20% (min 1)",
        gold: 750,
        "medical capacity": 6
      },
      level3: {
        name: "Health Education",
        desc: "Funding Health Education provides baseline education and awareness to the general population. This further increases Medical Capacity by +2, further increases passive settlement healing by 4, and decreases damage to settlement health by 33% (minimum -4).",
        prod: 14,
        level: 11,
        rewards: {
          med: 2
        },
        status: "You have Health Education, increasing Medical Bonus by +4; Weekly Healing increased by +8; Damage decreased by 33% (min 1)",
        gold: 2900,
        supplies: 15,
        "medical capacity": 11
      }
    }, {
      name: "Commerce Office",
      id: "co",
      level: 0,
      status: "You haven't built a Commerce Office yet.",
      level0: {
        name: "No Commerce Office",
        desc: "Having No Commerice Office is the default settlement configuration.",
        prod: "N/A",
        level: "N/A"
      },
      level1: {
        name: "Census Office",
        desc: "Building a Census Office allows better tracking of citizens, both old and new. This increases Actual Weekly Taxes by 10% and increases the level of available items by 1.",
        prod: 12,
        level: 1,
        rewards: {},
        status: "You have a Census Office, increasing Weekly Tax Gain by 10%; Available Item Level increased by +1",
        gold: 225,
        supplies: 2
      },
      level2: {
        name: "Internal Revenue Office",
        desc: "Building an Internal Revenue Office allows better tracking of taxation for import and export trade. This increases Actual Weekly Taxes by 15% and increases the level of available items by 2 total.",
        prod: 14,
        level: 5,
        rewards: {},
        status: "You have an Internal Revenue Office, increasing Weekly Tax Gain by 15%; Available Item Level increased by +2",
        gold: 875,
        supplies: 6
      },
      level3: {
        name: "Economic Office",
        desc: "Building an Economic Office enables realtime analysis of how and where gold is moving, both in the local market and the region. This increases Actual Weekly Taxes by 25% total and increases the level of available items by 4.",
        prod: 16,
        level: 9,
        rewards: {},
        status: "You have an Economic Office, increasing Weekly Tax Gain by 25%; Available Item Level increase by +4",
        gold: 2700,
        supplies: 18
      }
    }],
    "Project Data": [],
    "Deployed Data": [],
    "Notes Data": "",
    "Selected Upgrades Data": [],
    "Selected Levels Data": [3],
    "Nonselected Upgrades Data": [],
    "Project Count Data": 0,
    "Week Log Data": {},
    "Change Log Data": {
      survival: 0,
      food: 0,
      foodB: 0,
      supplies: 0,
      suppliesB: 0,
      meds: 0,
      medsB: 0,
      safety: 0,
      di: 0,
      diB: 0,
      intel: 0,
      intelB: 0,
      gar: 0,
      garB: 0,
      economy: 0,
      trade: 0,
      tradeB: 0,
      prod: 0,
      prodB: 0,
      vault: 0,
      health: 0,
      level: 0,
      sp: 0,
      eventStart: [],
      eventEnd: [],
      week: 0
    }
  };
}
function resetSettlement(inputName) {
  let saved = inputName;
  _storage__WEBPACK_IMPORTED_MODULE_10__.settlementList[inputName] = {
    "Settlement Data": {
      name: saved,
      level: 3,
      currentHealth: 100,
      maxHealthBase: 100,
      maxHealthBonus: 0,
      settlementPoints: 0,
      weeksPassed: 0,
      drought: false,
      type: 0,
      vault: 385,
      noteS: ""
    },
    "Survival Data": {
      Base: 0,
      Adjusted: 0,
      Rating: 0,
      Bonus: 0,
      foodB: 0,
      foodC: 9,
      foodM: 0,
      supB: 0,
      supC: 5,
      supM: 0,
      medB: 0,
      medC: 3,
      medM: 0
    },
    "Safety Data": {
      Base: 0,
      Adjusted: 0,
      Rating: 0,
      Bonus: 0,
      status: "",
      diB: 0,
      diC: 2,
      diM: 0,
      intelB: 0,
      intelC: 2,
      intelM: 0,
      garB: 0,
      garC: 3,
      garM: 0
    },
    "Economy Data": {
      Base: 0,
      Adjusted: 0,
      Rating: 0,
      status: "",
      Bonus: 0,
      tradeB: 0,
      tradeC: 6,
      tradeM: 0,
      prodB: 0,
      prodC: 4,
      prodM: 0,
      taxInc: 0,
      taxDec: 0
    },
    "Building Data": [{
      name: "Walls",
      id: "wa",
      level: 0,
      status: "You haven't built any walls yet.",
      level0: {
        name: "No Walls",
        desc: "Having no walls is the default settlement configuration.",
        prod: "N/A",
        level: "N/A"
      },
      level1: {
        name: "Pallisade Walls",
        desc: "Pallisade walls are a great first line of defense against unorganized attacks or attacks from mindless creatures. They increase Defensive Infrastructure Bonus by +1 and Settlement Max Health by +5.",
        prod: 14,
        level: 2,
        rewards: {
          di: 1,
          maxHealth: 5
        },
        status: "You have Pallisade Walls, granting you a Defense Bonus of +1 and Max Health bonus of +5",
        gold: 350,
        supplies: 8
      },
      level2: {
        name: "Stone Walls",
        desc: "Stone Walls are a significant improvement over Pallisade Walls, proving difficult for all but the most militant of attackers. They increase Defensive Infrastructure Bonus by +1 and increase Settlement Max Health by +10.",
        prod: 21,
        level: 6,
        rewards: {
          di: 1,
          maxHealth: 10
        },
        status: "You have Stone Walls, granting you a total Defense Bonus of +2 and total Max Health Bonus of +15 ",
        gold: 1200,
        supplies: 10
      },
      level3: {
        name: "Reinforced Stone Walls",
        desc: "Reinforced Stone Walls are the epitome of static settlement protection. They increase Defensive Infrastructure and Intelligence bonuses by +1 and increase Settlement Max Health by +20.",
        prod: 28,
        level: 10,
        rewards: {
          di: 1,
          intel: 1,
          maxHealth: 20
        },
        status: "You have Reinforced Stone Walls, granting you a total Defense Bonus of +3, an Intelligence Bonus of +1, and a Max Health Bonus of +35.",
        gold: 3200,
        supplies: 20
      }
    }, {
      name: "Wells",
      id: "we",
      level: 0,
      status: "You haven't built any wells yet.",
      level0: {
        name: "No Well",
        desc: "Having no well is the default settlement configuration.",
        prod: "N/A",
        level: "N/A"
      },
      level1: {
        name: "Simple Well",
        desc: "Building a simple Well reduces the Health damage from being without water for a week from 25 to 20; it also reduces the impact of Drought Events by 1.",
        prod: 7,
        level: 1,
        rewards: {},
        status: "You have a Simple Well, reducing weekly health loss from a lack of water from 25 to 20; Drought Event Impacts reduced by 1",
        gold: 100,
        supplies: 2
      },
      level2: {
        name: "Simple Well Network",
        desc: "Building a Simple Well Network expands the capacity of groundwater access. It further reduces the Health damage from being without water for a week from 20 to 15 and also reduces the impact of Drought Events by 2.",
        prod: 10,
        level: 5,
        rewards: {},
        status: "You have a Simple Well Network, reducing weekly health loss from a lack of water from 20 - 15; Drought Event Impacts reduced by 2",
        gold: 200,
        supplies: 6
      },
      level3: {
        name: "Evaporation Collectors",
        desc: "Building Evaporation Collectors provides much better water retention for the well network. This upgrade ensures the settlement always has access to water and futher decreases the impact from Drought Events by 3.",
        prod: 14,
        level: 8,
        rewards: {},
        status: "You have Evaporation Collectors, removing health loss from a lack of water; Drought Impact Events reduced by 4",
        gold: 800,
        supplies: 14
      }
    }, {
      name: "Network",
      id: "ne",
      level: 0,
      status: "You haven't built an Intelligence Network yet.",
      level0: {
        name: "No Intelligence Network",
        desc: "Having no Intelligence Network is the default settlement configuration.",
        prod: "N/A",
        level: "N/A"
      },
      level1: {
        name: "Community Watch Hub",
        desc: "Building a Community Watch Hub is a solid start to improving leadership's knowledge of internal affairs - particularly those things that aren't generally made public. It provides and Intelligence Bonus of +1.",
        prod: 10,
        level: 3,
        rewards: {
          intel: 1
        },
        status: "You have a Community Watch Hub, increasing your Intelligence Bonus by +1",
        gold: 150,
        supplies: 2,
        intelligence: 2
      },
      level2: {
        name: "Planted Merchants",
        desc: "Funding Planted Merchants provides a much wider berth of knowledge about the goings on in and around town. It provides an Intelligence Bonus of +1 and prevents you from losing Intelligence every week.",
        prod: 18,
        level: 7,
        rewards: {
          intel: 1
        },
        status: "You have Planted Merchants, increasing your Intelligence Bonus by +2 and preventing weekly Intel loss.",
        gold: 900,
        supplies: 6,
        intelligence: 4
      },
      level3: {
        name: "Sensitive Compartmented Information Facility (SCIF)",
        desc: "Building a SCIF ensures intelligence remains the sole property of the leadership of the settlement. It Increase Intelligence Bonus by +2 and allows you to convert Garrison into Intelligence.",
        prod: 21,
        level: 11,
        rewards: {
          intel: 2
        },
        status: "You have a SCIF, increasing your Intelligence Bonus by +4, preventing weekly Intel Loss, and unlocking the 'Active ISR' Action",
        gold: 3000,
        supplies: 15,
        intelligence: 7
      }
    }, {
      name: "Barracks",
      id: "ba",
      level: 0,
      status: "You haven't upgraded the Barracks yet.",
      level0: {
        name: "Standard Barracks",
        desc: "Having a standard Barracks is the default settlement configuration.",
        prod: "N/A",
        level: "N/A"
      },
      level1: {
        name: "Kitchen",
        desc: "Building a Kitchen ensures garrisoned forces are well fed at all times and can support more strenuous training exercises. This upgrade unlocks Militia Cavalry and Militia Pikemen, as well as the 'Feed the Troops' action, which allows you to convert Food into Garrison at a 6-1 rate. Finally, it grants a Garrison Bonus of +1.",
        prod: 7,
        level: 2,
        rewards: {
          gar: 1
        },
        status: "You have built a Kitchen, increasing your Garrison Bonus by +1. See Troop Info for unlocks; 'Feed the Troops' Action",
        gold: 300,
        supplies: 4,
        food: 4
      },
      level2: {
        name: "Training Ground",
        desc: "Building a Training Ground allows garrisoned forces to complete regular training exercises in a variety of circumstances. It unlocks Guard Infantry, Guard Archers, Guard Pikemen, and Guard Cavalry troop and provides a Garrison Bonus of +1.",
        prod: 10,
        level: 6,
        rewards: {
          gar: 1
        },
        status: "You have a Training Ground, increasing Garrison Bonus by +2. See Troop Info for unlocks; 'Feed the Troops' Action",
        gold: 900,
        supplies: 10,
        "medical capacity": 4
      },
      level3: {
        name: "War Room",
        desc: "Building a War Room allows garrisoned units to study battles, engage in theoretical wartime discussions, and maintain tactical capabilities on larger scales. It unlocks Soldier Infantry, Longbowmen, Phalanx, and Cannon troops and provides a Garrison Bonus of +1.",
        prod: 20,
        level: 11,
        rewards: {
          gar: 1
        },
        status: "You have a War Room, increasing your Garrison Bonus by +4. See Troop Info for unlocks; 'Feed the Troops' Action",
        gold: 3100,
        supplies: 16,
        intelligence: 4
      }
    }, {
      name: "Granary",
      id: "gr",
      level: 0,
      status: "You haven't built a Granary yet.",
      level0: {
        name: "No Granary",
        desc: "Having no Granary is the default settlement configuration.",
        prod: "N/A",
        level: "N/A"
      },
      level1: {
        name: "Improved Sifters",
        desc: "Building Improved Sifters allows finer flours to be separated from unrefined grains, increasing operating efficiency of the granary. This increases Food Bonus by +1, grants +2 Food points per week, and unlocks the Harvest Action, allowing you to convert Productivity into Food at a 2-1 ratio.",
        prod: 7,
        level: 2,
        rewards: {
          food: 1
        },
        status: "You have Improved Sifters, increasing your Food Bonus by +1; Food Points +2 per week; 'Harvest' Action",
        gold: 125,
        supplies: 4
      },
      level2: {
        name: "Reinforced Silos",
        desc: "Building Reinforced Silos greatly improves the settlement's capacity for storing food and ensures it remains viable for longer. This increases Food Bonus by +1 and grants a total of +4 Food points per week.",
        prod: 14,
        level: 6,
        rewards: {
          food: 1
        },
        status: "You have Reinforced Silos, increasing your Food Bonus by +2; Food Points +4 per week; 'Harvest' Action",
        gold: 700,
        supplies: 10
      },
      level3: {
        name: "Reinforced Grinder",
        desc: "Building a Reinforced Grinder greatly improves the speed with which harvested grain can be turned into a usable product. This increases Food Bonus by +2 and grants a total of +7 Food points per week.",
        prod: 16,
        level: 10,
        rewards: {
          food: 2
        },
        status: "You have Reinforced Grinder, increasing your Food Bonus by +4; Food Points +7 per week; 'Harvest' Action",
        gold: 2800,
        supplies: 15
      }
    }, {
      name: "Market",
      id: "ma",
      level: 0,
      status: "You haven't upgraded the Market yet.",
      level0: {
        name: "Standard Market",
        desc: "Having a Standard Market is the default settlement configuration.",
        prod: "N/A",
        level: "N/A"
      },
      level1: {
        name: "Legal Fence",
        desc: "Funding a Legal Fence ensures more products reach the market, driving higher trade. This increases Trade Bonus by +1, increases the sale value of goods by 2%, and decreases buy price by 5%.",
        prod: 7,
        level: 3,
        rewards: {
          trade: 1
        },
        status: "You have a Legal Fence, increasing Trade Bonus by +1; Buy at 5% discount; Sell at 2% mark-up",
        gold: 200,
        supplies: 3
      },
      level2: {
        name: "Night Market",
        desc: "Building a Night Market ensures there is always trade happening, even if its in short supply. This further increases Trade Bonus by +1, increases total sale value of goods by 5%, and decreases the total price by 10%.",
        prod: 12,
        level: 6,
        rewards: {
          trade: 1
        },
        status: "You have a Night Market, increasing Trade Bonus by +2; Buy at 10% discount; Sell at 5% mark-up",
        gold: 850,
        supplies: 8
      },
      level3: {
        name: "Auction House",
        desc: "Building an Auction House drastically improves the number of out-of-towners coming in to strike a deal. This futher increases Trade Bonus by +2, increases the total sale value of goods by 10%, and decreases total buy price by 20%. It also unlocks the 'Fire Sale' action, where you decrease each sellable component by 1d6 (roll separately for each). When you do, you gain 150% profit.",
        prod: 21,
        level: 8,
        rewards: {
          trade: 2
        },
        status: "You have an Auction House, increasing Trade Bonus by +4; Buy at 20% discount; Sell at 10% mark-up; 'Firesale' Action",
        gold: 2500,
        supplies: 12
      }
    }, {
      name: "Union",
      id: "un",
      level: 0,
      status: "You haven't unionized workers yet.",
      level0: {
        name: "No Unionized Workers",
        desc: "Having No Unionized Workers is the default settlement configuration.",
        prod: "N/A",
        level: "N/A"
      },
      level1: {
        name: "Unionize Blue Collar Workers",
        desc: "Unionizing Blue Collar Workers boosts morale for the unskilled laborers in the market, increasing productivity. This increase Productivity Bonus by +1 and reduces repair costs by 1 supply and 1 die.",
        prod: 10,
        level: 3,
        rewards: {
          prod: 1
        },
        status: "You have Unionized Blue Collar Workers, increasing Productivity Bonus by +1; Repair Supplies cost decreased by 1; Repair Gold cost reduced by 1 die;",
        gold: 175,
        supplies: 6
      },
      level2: {
        name: "Unionize White Collar Workers",
        desc: "Unionizing White Collar Workers boosts morale for the tradesmen and artisans in the community, improving overall settlement productivity. This further increases Productivity by +1 and further reduces repair costs by 1 supply and 1 die.",
        prod: 14,
        level: 6,
        rewards: {
          prod: 1
        },
        status: "You have Unionized White Collar Workers; increasing Productivity Bonus by +2; Repair Supplies cost decreased by 2; Repair Gold cost reduced by 2 die",
        gold: 1000,
        supplies: 7
      },
      level3: {
        name: "Worker Representation",
        desc: "Funding Worker Representation guarantees workers' needs are heard, understood, and met. A remarkably forward thinking decision to make, it works wonders in motivating the population to work harder. This further increases Productivity Bonus by +2 and further reduces repair costs by 2 supply and 2 die.",
        prod: 18,
        level: 8,
        rewards: {
          prod: 2
        },
        status: "You have Funded Worker Representation, increasing Productivity Bonus by +4; Repair Supplies cost decreased by 4; Repair Gold cost reduced by 2 die",
        gold: 2750,
        supplies: 12
      }
    }, {
      name: "School",
      id: "sc",
      level: 0,
      status: "You haven't upgraded the School yet.",
      level0: {
        name: "Standard School",
        desc: "Having a Standard School is the fefault settlement configuration.",
        prod: "N/A",
        level: "N/A"
      },
      level1: {
        name: "Expanded Classrooms",
        desc: "Building Expanded Classrooms makes sure more people can receive vital education simultaneously. This increases troop Lore:Warfare by +1, making it easier to issue commands to deployed troops on the battlefield. While this may seem a mior upgrade, it's also required to eventually unlocking Combat Wizards and Battlemages for deployment.",
        prod: 5,
        level: 2,
        rewards: {},
        status: "You have Expanded Classrooms, increasing Troop Lore: Warfare Bonus by +1",
        gold: 250,
        supplies: 4
      },
      level2: {
        name: "Basic Magic Curriculum",
        desc: "Writing a Basic Magic Curriculum ushers in an age of ubiquitous magical representation and application. This further increases troop Lore:Warfare by +1 and unlocks Combat Wizards for deployment.",
        prod: 10,
        level: 6,
        rewards: {},
        status: "You have a Basic Magic Curriculum, increasing Troop Lore: Warfare Bonus by +2; See Troop Info for unlocks",
        gold: 950,
        supplies: 9,
        "player character with Expert in a spell skill": 1
      },
      level3: {
        name: "Advanced Magical Theory",
        desc: "Writing Advanced Magical Theory is a taxing endeavor that calls to it the brightest minds not only in the settlement, but in the nation as a whole. This further increases troop Lore: Warfare by +2 and unlocks Battle Mages for deployment",
        prod: 21,
        level: 10,
        rewards: {},
        status: "You have Advanced Magical Theory, increasing Troop Lore: Warfare Bonus by +4; See Troop Info for unlocks",
        gold: 2850,
        supplies: 14,
        "player character with Master in a spell skill": 1
      }
    }, {
      name: "Infirmary",
      id: "in",
      level: 0,
      status: "You haven't built an Infirmary yet.",
      level0: {
        name: "No Infirmary",
        desc: "Having No Infirmary is the default settlement configuration.",
        prod: "N/A",
        level: "N/A"
      },
      level1: {
        name: "Sterilization Stations",
        desc: "Building Sterilization Stations is all one needs to establish a makeshift infirmary, allowing treatment of the sick and injured away from the filth of day-to-day living. This increases Medical Capacity Bonus by +1, increases passive settlement healing by +2, and decreases damage done to settlement health by 10% (minimum -1).",
        prod: 10,
        level: 3,
        rewards: {
          med: 1
        },
        status: "You have Sterilization Stations, increasing Medical Bonus by +1; Weekly Healing increased by +2; Damage decreased by 10% (min 1)",
        gold: 275,
        "medical capacity": 2
      },
      level2: {
        name: "Operating Rooms",
        desc: "Building Operating Rooms allows treatment of criticall ill or injured patients in clean environments to prevent infection and drastically improve prognosis. This further increases Medical Capacity Bonus by +1, further increases passive settlement healing by +2, and decreases damage to settlement health by 20% (minimum -2).",
        prod: 14,
        level: 7,
        rewards: {
          med: 1
        },
        status: "You have Operating Rooms, increasing Medical Bonus by +2; Weekly Healing increased by + 4; Damage decreased by 20% (min 1)",
        gold: 750,
        "medical capacity": 6
      },
      level3: {
        name: "Health Education",
        desc: "Funding Health Education provides baseline education and awareness to the general population. This further increases Medical Capacity by +2, further increases passive settlement healing by 4, and decreases damage to settlement health by 33% (minimum -4).",
        prod: 14,
        level: 11,
        rewards: {
          med: 2
        },
        status: "You have Health Education, increasing Medical Bonus by +4; Weekly Healing increased by +8; Damage decreased by 33% (min 1)",
        gold: 2900,
        supplies: 15,
        "medical capacity": 11
      }
    }, {
      name: "Commerce Office",
      id: "co",
      level: 0,
      status: "You haven't built a Commerce Office yet.",
      level0: {
        name: "No Commerce Office",
        desc: "Having No Commerice Office is the default settlement configuration.",
        prod: "N/A",
        level: "N/A"
      },
      level1: {
        name: "Census Office",
        desc: "Building a Census Office allows better tracking of citizens, both old and new. This increases Actual Weekly Taxes by 10% and increases the level of available items by 1.",
        prod: 12,
        level: 1,
        rewards: {},
        status: "You have a Census Office, increasing Weekly Tax Gain by 10%; Available Item Level increased by +1",
        gold: 225,
        supplies: 2
      },
      level2: {
        name: "Internal Revenue Office",
        desc: "Building an Internal Revenue Office allows better tracking of taxation for import and export trade. This increases Actual Weekly Taxes by 15% and increases the level of available items by 2 total.",
        prod: 14,
        level: 5,
        rewards: {},
        status: "You have an Internal Revenue Office, increasing Weekly Tax Gain by 15%; Available Item Level increased by +2",
        gold: 875,
        supplies: 6
      },
      level3: {
        name: "Economic Office",
        desc: "Building an Economic Office enables realtime analysis of how and where gold is moving, both in the local market and the region. This increases Actual Weekly Taxes by 25% total and increases the level of available items by 4.",
        prod: 16,
        level: 9,
        rewards: {},
        status: "You have an Economic Office, increasing Weekly Tax Gain by 25%; Available Item Level increase by +4",
        gold: 2700,
        supplies: 18
      }
    }],
    "Project Data": [],
    "Deployed Data": [],
    "Notes Data": _renderNotes__WEBPACK_IMPORTED_MODULE_6__.userNotes,
    "Selected Upgrades Data": [],
    "Selected Levels Data": [3],
    "Nonselected Upgrades Data": [],
    "Project Count Data": 0,
    "Week Log Data": {},
    "Change Log Data": {
      survival: 0,
      food: 0,
      foodB: 0,
      supplies: 0,
      suppliesB: 0,
      meds: 0,
      medsB: 0,
      safety: 0,
      di: 0,
      diB: 0,
      intel: 0,
      intelB: 0,
      gar: 0,
      garB: 0,
      economy: 0,
      trade: 0,
      tradeB: 0,
      prod: 0,
      prodB: 0,
      vault: 0,
      health: 0,
      level: 0,
      sp: 0,
      eventStart: [],
      eventEnd: [],
      week: 0
    }
  };
}


/***/ }),

/***/ "./src/settlementStats.js":
/*!********************************!*\
  !*** ./src/settlementStats.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   baseTaxes: () => (/* binding */ baseTaxes),
/* harmony export */   health: () => (/* binding */ health),
/* harmony export */   healthPercent: () => (/* binding */ healthPercent),
/* harmony export */   levelUp: () => (/* binding */ levelUp),
/* harmony export */   maxHealth: () => (/* binding */ maxHealth),
/* harmony export */   maxScore: () => (/* binding */ maxScore),
/* harmony export */   nextWeek: () => (/* binding */ nextWeek),
/* harmony export */   setSettlement: () => (/* binding */ setSettlement),
/* harmony export */   settlement: () => (/* binding */ settlement),
/* harmony export */   settlementPoints: () => (/* binding */ settlementPoints),
/* harmony export */   spend: () => (/* binding */ spend),
/* harmony export */   vaultAdd: () => (/* binding */ vaultAdd)
/* harmony export */ });
/* harmony import */ var _buildingsStats__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./buildingsStats */ "./src/buildingsStats.js");
/* harmony import */ var _pageRenders__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pageRenders */ "./src/pageRenders.js");
/* harmony import */ var _projectBoxRender__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./projectBoxRender */ "./src/projectBoxRender.js");
/* harmony import */ var _renderProjects__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./renderProjects */ "./src/renderProjects.js");
/* harmony import */ var _safetyStats__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./safetyStats */ "./src/safetyStats.js");
/* harmony import */ var _shopInterface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./shopInterface */ "./src/shopInterface.js");
/* harmony import */ var _survivalStats__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./survivalStats */ "./src/survivalStats.js");
/* harmony import */ var _taxRender__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./taxRender */ "./src/taxRender.js");
/* harmony import */ var _weekLog__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./weekLog */ "./src/weekLog.js");









let settlement = {
  name: "Cyfehil",
  level: 3,
  currentHealth: 100,
  maxHealthBase: 100,
  maxHealthBonus: 0,
  settlementPoints: 0,
  weeksPassed: 0,
  drought: false,
  type: 0,
  vault: 385
};
function setSettlement(data) {
  settlement = data;
}
function maxScore(i) {
  return settlement.level * i;
}
function baseTaxes() {
  return (settlement.level * 1.369 * 80).toFixed(0);
}
let h1 = 0;
let h2 = 0;
let h3 = 0;
function levelUp(i) {
  settlement.level += parseInt(i);
  _weekLog__WEBPACK_IMPORTED_MODULE_8__.changeLog.level += parseInt(i);
  if (settlement.level < 5) {
    settlement.maxHealthBase = 100;
  } else if (settlement.level >= 5 && settlement.level < 10) {
    settlement.maxHealthBase = 125;
    if (h1 == 0) {
      health(25);
      h1 = 1;
    }
  } else if (settlement.level >= 10 && settlement.level < 15) {
    settlement.maxHealthBase = 150;
    if (h2 == 0) {
      health(25);
      h2 = 1;
    }
  } else if (settlement.level >= 15) {
    settlement.maxHealthBase = 200;
    if (h3 == 0) {
      health(50);
      h3 = 1;
    }
  }
  (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
}
function health(i) {
  settlement.currentHealth += parseInt(i);
  _weekLog__WEBPACK_IMPORTED_MODULE_8__.changeLog.health += parseInt(i);
}
function spend(i) {
  if (i > settlement.settlementPoints) {
    return;
  } else {
    i *= -1;
    settlementPoints(i);
    (0,_taxRender__WEBPACK_IMPORTED_MODULE_7__["default"])();
  }
}
function settlementPoints(i) {
  settlement.settlementPoints += parseInt(i);
  _weekLog__WEBPACK_IMPORTED_MODULE_8__.changeLog.sp += parseInt(i);
}
function nextWeek() {
  if ((0,_projectBoxRender__WEBPACK_IMPORTED_MODULE_2__.calcWorkers)() < 0) {
    alert("You've assigned more workers than you have available. Make sure Productivity Available is at or above 0.");
    return;
  }
  (0,_shopInterface__WEBPACK_IMPORTED_MODULE_5__.clearList)();
  (0,_shopInterface__WEBPACK_IMPORTED_MODULE_5__.shopInterface)();
  settlementPoints(settlement.level);
  settlement.weeksPassed++;
  (0,_projectBoxRender__WEBPACK_IMPORTED_MODULE_2__.weekProjects)();
  (0,_projectBoxRender__WEBPACK_IMPORTED_MODULE_2__.removeCompleted)();
  if (document.querySelector("#weekArea") != undefined) {
    (0,_weekLog__WEBPACK_IMPORTED_MODULE_8__.renderWeeks)();
  }
  if (document.querySelector("#projectBox") != undefined) {
    (0,_renderProjects__WEBPACK_IMPORTED_MODULE_3__["default"])();
  }
  switch (_buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[2].level) {
    case 0:
    case 1:
    case 1.5:
      (0,_safetyStats__WEBPACK_IMPORTED_MODULE_4__.intelCurrent)(-1);
      break;
    default:
      break;
  }
  if (_safetyStats__WEBPACK_IMPORTED_MODULE_4__.safety.intelC < 0) {
    (0,_safetyStats__WEBPACK_IMPORTED_MODULE_4__.intelCurrent)(-_safetyStats__WEBPACK_IMPORTED_MODULE_4__.safety.intelC);
  }
  (0,_survivalStats__WEBPACK_IMPORTED_MODULE_6__.foodCurrent)(-(settlement.level / 2).toFixed(0));
  switch (_buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[4].level) {
    case 0:
    case 0.5:
      break;
    case 1:
    case 1.5:
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_6__.foodCurrent)(2);
      break;
    case 2:
    case 2.5:
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_6__.foodCurrent)(4);
      break;
    case 3:
      (0,_survivalStats__WEBPACK_IMPORTED_MODULE_6__.foodCurrent)(7);
      break;
  }
  if (_survivalStats__WEBPACK_IMPORTED_MODULE_6__.survival.foodC < 0) {
    let pain = _survivalStats__WEBPACK_IMPORTED_MODULE_6__.survival.foodC * 5;
    health(pain);
    _survivalStats__WEBPACK_IMPORTED_MODULE_6__.survival.foodC = 0;
  }
  (0,_safetyStats__WEBPACK_IMPORTED_MODULE_4__.upkeep)();
  vaultAdd(baseTaxes());
  if (_survivalStats__WEBPACK_IMPORTED_MODULE_6__.survival.foodC > 0) {
    recoverHealth();
  }
  (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
  (0,_taxRender__WEBPACK_IMPORTED_MODULE_7__["default"])();
  if (document.querySelector("#projectBox") != undefined) {
    (0,_projectBoxRender__WEBPACK_IMPORTED_MODULE_2__.projectBoxRender)();
  }
  (0,_weekLog__WEBPACK_IMPORTED_MODULE_8__.trackChange)();
  if (document.querySelector("#weekArea") != undefined) {
    (0,_weekLog__WEBPACK_IMPORTED_MODULE_8__.renderWeeks)();
  }
}
function maxHealth(i) {
  settlement.maxHealthBonus += parseInt(i);
}
function recoverHealth() {
  let i = _buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings[8].level;
  if (settlement.drought === true) {
    return;
  }
  switch (i) {
    case 0:
    case 0.5:
      health(2);
      break;
    case 1:
    case 1.5:
      health(4);
      break;
    case 2:
    case 2.5:
      health(6);
      break;
    case 3:
      health(10);
      break;
    default:
      health(0);
      break;
  }
  if (settlement.currentHealth > parseInt(settlement.maxHealthBase + settlement.maxHealthBonus)) {
    settlement.currentHealth = parseInt(settlement.maxHealthBase + settlement.maxHealthBonus);
  }
}
function vaultAdd(i) {
  settlement.vault += parseInt(i);
  _weekLog__WEBPACK_IMPORTED_MODULE_8__.changeLog.vault += parseInt(i);
}
function healthPercent() {
  return (settlement.currentHealth / (settlement.maxHealthBase + settlement.maxHealthBonus)).toFixed(2);
}


/***/ }),

/***/ "./src/shopInterface.js":
/*!******************************!*\
  !*** ./src/shopInterface.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   clearList: () => (/* binding */ clearList),
/* harmony export */   shopInterface: () => (/* binding */ shopInterface)
/* harmony export */ });
/* harmony import */ var _economyStats__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./economyStats */ "./src/economyStats.js");
/* harmony import */ var _pageRenders__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pageRenders */ "./src/pageRenders.js");
/* harmony import */ var _safetyStats__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./safetyStats */ "./src/safetyStats.js");
/* harmony import */ var _settlementStats__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./settlementStats */ "./src/settlementStats.js");
/* harmony import */ var _shopWindow__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./shopWindow */ "./src/shopWindow.js");
/* harmony import */ var _survivalStats__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./survivalStats */ "./src/survivalStats.js");
/* harmony import */ var _taxRender__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./taxRender */ "./src/taxRender.js");







function shopInterface() {
  ////////FOOD ROW////////
  let wrapper = document.querySelector("#shopWrapper");
  wrapper.innerHTML = "";
  let shopWrapper = document.createElement("div");
  let foodRow = document.createElement("div");
  foodRow.classList.add("shopRow");
  let foodLabel = document.createElement("div");
  foodLabel.textContent = "Food:";
  foodLabel.classList.add("shopLabel");
  foodRow.appendChild(foodLabel);
  let foodBSBox = document.createElement("div");
  foodBSBox.classList.add("bsBox");
  let foodDec = document.createElement("button");
  foodDec.textContent = "<";
  foodDec.classList.add("shopBtn");
  let foodValue = document.createElement("div");
  foodValue.textContent = shoppingList.food;
  let foodInc = document.createElement("button");
  foodInc.textContent = ">";
  foodInc.classList.add("shopBtn");
  foodDec.addEventListener("click", () => {
    if (_shopWindow__WEBPACK_IMPORTED_MODULE_4__.shopStatus == 0) {
      if (shoppingList.food > 0) {
        shoppingList.food--;
        shoppingList.value -= foodCost();
        shopInterface();
        return;
      }
    } else {
      if (shoppingList.food > 0) {
        _survivalStats__WEBPACK_IMPORTED_MODULE_5__.survival.foodC++;
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
        shoppingList.food--;
        shoppingList.value -= foodProfit();
        shopInterface();
        return;
      }
    }
  });
  foodInc.addEventListener("click", () => {
    if (_shopWindow__WEBPACK_IMPORTED_MODULE_4__.shopStatus == 0) {
      if (shoppingList.value + foodCost() < _settlementStats__WEBPACK_IMPORTED_MODULE_3__.settlement.vault) {
        shoppingList.food++;
        shoppingList.value += foodCost();
        shopInterface();
      }
    } else if (_survivalStats__WEBPACK_IMPORTED_MODULE_5__.survival.foodC > 0) {
      _survivalStats__WEBPACK_IMPORTED_MODULE_5__.survival.foodC--;
      shoppingList.food++;
      shoppingList.value += foodProfit();
      (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
      shopInterface();
    }
  }), foodBSBox.appendChild(foodDec);
  foodBSBox.appendChild(foodValue);
  foodBSBox.appendChild(foodInc);
  foodRow.appendChild(foodBSBox);
  shopWrapper.appendChild(foodRow);

  ////////SUPPLIES ROW////////

  let supRow = document.createElement("div");
  supRow.classList.add("shopRow");
  let supLabel = document.createElement("div");
  supLabel.textContent = "Supplies:";
  supLabel.classList.add("shopLabel");
  supRow.appendChild(supLabel);
  let supBSBox = document.createElement("div");
  supBSBox.classList.add("bsBox");
  let supDec = document.createElement("button");
  supDec.textContent = "<";
  supDec.classList.add("shopBtn");
  let supValue = document.createElement("div");
  supValue.textContent = shoppingList.sup;
  let supInc = document.createElement("button");
  supInc.textContent = ">";
  supInc.classList.add("shopBtn");
  supDec.addEventListener("click", () => {
    if (_shopWindow__WEBPACK_IMPORTED_MODULE_4__.shopStatus == 0) {
      if (shoppingList.sup > 0) {
        shoppingList.sup--;
        shoppingList.value -= supCost();
        shopInterface();
        return;
      }
    } else {
      if (shoppingList.sup > 0) {
        _survivalStats__WEBPACK_IMPORTED_MODULE_5__.survival.supC++;
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
        shoppingList.sup--;
        shoppingList.value -= supProfit();
        shopInterface();
        return;
      }
    }
  });
  supInc.addEventListener("click", () => {
    if (_shopWindow__WEBPACK_IMPORTED_MODULE_4__.shopStatus == 0) {
      if (shoppingList.value + supCost() < _settlementStats__WEBPACK_IMPORTED_MODULE_3__.settlement.vault) {
        shoppingList.sup++;
        shoppingList.value += supCost();
        shopInterface();
      }
    } else {
      if (_survivalStats__WEBPACK_IMPORTED_MODULE_5__.survival.supC > 0) {
        _survivalStats__WEBPACK_IMPORTED_MODULE_5__.survival.supC--;
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
        shoppingList.sup++;
        shoppingList.value += supProfit();
        shopInterface();
      }
    }
  }), supBSBox.appendChild(supDec);
  supBSBox.appendChild(supValue);
  supBSBox.appendChild(supInc);
  supRow.appendChild(supBSBox);
  shopWrapper.appendChild(supRow);

  ////////MED ROW////////

  let medRow = document.createElement("div");
  medRow.classList.add("shopRow");
  let medLabel = document.createElement("div");
  medLabel.textContent = "Medicine:";
  medLabel.classList.add("shopLabel");
  medRow.appendChild(medLabel);
  let medBSBox = document.createElement("div");
  medBSBox.classList.add("bsBox");
  let medDec = document.createElement("button");
  medDec.textContent = "<";
  medDec.classList.add("shopBtn");
  let medValue = document.createElement("div");
  medValue.textContent = shoppingList.med;
  let medInc = document.createElement("button");
  medInc.textContent = ">";
  medInc.classList.add("shopBtn");
  medDec.addEventListener("click", () => {
    if (_shopWindow__WEBPACK_IMPORTED_MODULE_4__.shopStatus == 0) {
      if (shoppingList.med > 0) {
        shoppingList.med--;
        shoppingList.value -= medCost();
        shopInterface();
        return;
      }
    } else {
      if (shoppingList.med > 0) {
        _survivalStats__WEBPACK_IMPORTED_MODULE_5__.survival.medC++;
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
        shoppingList.med--;
        shoppingList.value -= medProfit();
        shopInterface();
        return;
      }
    }
  });
  medInc.addEventListener("click", () => {
    if (_shopWindow__WEBPACK_IMPORTED_MODULE_4__.shopStatus == 0) {
      if (shoppingList.value + medCost() < _settlementStats__WEBPACK_IMPORTED_MODULE_3__.settlement.vault) {
        shoppingList.med++;
        shoppingList.value += medCost();
        shopInterface();
      }
    } else {
      if (_survivalStats__WEBPACK_IMPORTED_MODULE_5__.survival.medC > 0) {
        _survivalStats__WEBPACK_IMPORTED_MODULE_5__.survival.medC--;
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
        shoppingList.med++;
        shoppingList.value += medProfit();
        shopInterface();
      }
    }
  }), medBSBox.appendChild(medDec);
  medBSBox.appendChild(medValue);
  medBSBox.appendChild(medInc);
  medRow.appendChild(medBSBox);
  shopWrapper.appendChild(medRow);

  /////////SCOUT ROW////////

  let scoutRow = document.createElement("div");
  scoutRow.classList.add("shopRow");
  let scoutLabel = document.createElement("div");
  scoutLabel.textContent = "Scouts:";
  scoutLabel.classList.add("shopLabel");
  scoutRow.appendChild(scoutLabel);
  let scoutBSBox = document.createElement("div");
  scoutBSBox.classList.add("bsBox");
  let scoutDec = document.createElement("button");
  scoutDec.textContent = "<";
  scoutDec.classList.add("shopBtn");
  let scoutValue = document.createElement("div");
  scoutValue.textContent = shoppingList.scout;
  let scoutInc = document.createElement("button");
  scoutInc.textContent = ">";
  scoutInc.classList.add("shopBtn");
  scoutDec.addEventListener("click", () => {
    if (_shopWindow__WEBPACK_IMPORTED_MODULE_4__.shopStatus == 0) {
      if (shoppingList.scout > 0) {
        shoppingList.scout--;
        shoppingList.value -= scoutCost();
        shopInterface();
        return;
      }
    } else {
      if (shoppingList.scout > 0) {
        _safetyStats__WEBPACK_IMPORTED_MODULE_2__.safety.intelC++;
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
        shoppingList.scout--;
        shoppingList.value -= scoutProfit();
        shopInterface();
        return;
      }
    }
  });
  scoutInc.addEventListener("click", () => {
    if (_shopWindow__WEBPACK_IMPORTED_MODULE_4__.shopStatus == 0) {
      if (shoppingList.value + scoutCost() < _settlementStats__WEBPACK_IMPORTED_MODULE_3__.settlement.vault) {
        shoppingList.scout++;
        shoppingList.value += scoutCost();
        shopInterface();
      }
    } else {
      if (_safetyStats__WEBPACK_IMPORTED_MODULE_2__.safety.intelC > 0) {
        _safetyStats__WEBPACK_IMPORTED_MODULE_2__.safety.intelC--;
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
        shoppingList.scout++;
        shoppingList.value += scoutProfit();
        shopInterface();
      }
    }
  }), scoutBSBox.appendChild(scoutDec);
  scoutBSBox.appendChild(scoutValue);
  scoutBSBox.appendChild(scoutInc);
  scoutRow.appendChild(scoutBSBox);
  shopWrapper.appendChild(scoutRow);

  ////////GUARDS ROW////////

  let garRow = document.createElement("div");
  garRow.classList.add("shopRow");
  let garLabel = document.createElement("div");
  garLabel.textContent = "Guards:";
  garLabel.classList.add("shopLabel");
  garRow.appendChild(garLabel);
  let garBSBox = document.createElement("div");
  garBSBox.classList.add("bsBox");
  let garDec = document.createElement("button");
  garDec.textContent = "<";
  garDec.classList.add("shopBtn");
  let garValue = document.createElement("div");
  garValue.textContent = shoppingList.gar;
  let garInc = document.createElement("button");
  garInc.textContent = ">";
  garInc.classList.add("shopBtn");
  garDec.addEventListener("click", () => {
    if (_shopWindow__WEBPACK_IMPORTED_MODULE_4__.shopStatus == 0) {
      if (shoppingList.gar > 0) {
        shoppingList.gar--;
        shoppingList.value -= garCost();
        shopInterface();
        return;
      }
    } else {
      if (shoppingList.gar > 0) {
        _safetyStats__WEBPACK_IMPORTED_MODULE_2__.safety.garC++;
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
        shoppingList.gar--;
        shoppingList.value -= garProfit();
        shopInterface();
        return;
      }
    }
  });
  garInc.addEventListener("click", () => {
    if (_shopWindow__WEBPACK_IMPORTED_MODULE_4__.shopStatus == 0) {
      if (shoppingList.value + garCost() < _settlementStats__WEBPACK_IMPORTED_MODULE_3__.settlement.vault) {
        shoppingList.gar++;
        shoppingList.value += garCost();
        shopInterface();
      }
    } else {
      if (_safetyStats__WEBPACK_IMPORTED_MODULE_2__.safety.garC > 0) {
        _safetyStats__WEBPACK_IMPORTED_MODULE_2__.safety.garC--;
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
        shoppingList.gar++;
        shoppingList.value += garProfit();
        shopInterface();
      }
    }
  }), garBSBox.appendChild(garDec);
  garBSBox.appendChild(garValue);
  garBSBox.appendChild(garInc);
  garRow.appendChild(garBSBox);
  shopWrapper.appendChild(garRow);

  /////WAGON ROW////

  let wagonRow = document.createElement("div");
  wagonRow.classList.add("shopRow");
  let wagonLabel = document.createElement("div");
  wagonLabel.textContent = "Wagons:";
  wagonLabel.classList.add("shopLabel");
  wagonRow.appendChild(wagonLabel);
  let wagonBSBox = document.createElement("div");
  wagonBSBox.classList.add("bsBox");
  let wagonDec = document.createElement("button");
  wagonDec.textContent = "<";
  wagonDec.classList.add("shopBtn");
  let wagonValue = document.createElement("div");
  wagonValue.textContent = shoppingList.wagon;
  let wagonInc = document.createElement("button");
  wagonInc.textContent = ">";
  wagonInc.classList.add("shopBtn");
  wagonDec.addEventListener("click", () => {
    if (_shopWindow__WEBPACK_IMPORTED_MODULE_4__.shopStatus == 0) {
      if (shoppingList.wagon > 0) {
        shoppingList.wagon--;
        shoppingList.value -= wagonCost();
        shopInterface();
        return;
      }
    } else {
      if (shoppingList.wagon > 0) {
        _economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.tradeC++;
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
        shoppingList.wagon--;
        shoppingList.value -= wagonProfit();
        shopInterface();
        return;
      }
    }
  });
  wagonInc.addEventListener("click", () => {
    if (_shopWindow__WEBPACK_IMPORTED_MODULE_4__.shopStatus == 0) {
      if (shoppingList.value + wagonCost() < _settlementStats__WEBPACK_IMPORTED_MODULE_3__.settlement.vault) {
        shoppingList.wagon++;
        shoppingList.value += wagonCost();
        shopInterface();
      }
    } else {
      if (_economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.tradeC > 0) {
        _economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.tradeC--;
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
        shoppingList.wagon++;
        shoppingList.value += wagonProfit();
        shopInterface();
      }
    }
  }), wagonBSBox.appendChild(wagonDec);
  wagonBSBox.appendChild(wagonValue);
  wagonBSBox.appendChild(wagonInc);
  wagonRow.appendChild(wagonBSBox);
  shopWrapper.appendChild(wagonRow);

  ////////TOOLS ROW////////

  let toolsRow = document.createElement("div");
  toolsRow.classList.add("shopRow");
  let toolsLabel = document.createElement("div");
  toolsLabel.textContent = "Tools:";
  toolsLabel.classList.add("shopLabel");
  toolsRow.appendChild(toolsLabel);
  let toolsBSBox = document.createElement("div");
  toolsBSBox.classList.add("bsBox");
  let toolsDec = document.createElement("button");
  toolsDec.textContent = "<";
  toolsDec.classList.add("shopBtn");
  let toolsValue = document.createElement("div");
  toolsValue.textContent = shoppingList.tools;
  let toolsInc = document.createElement("button");
  toolsInc.textContent = ">";
  toolsInc.classList.add("shopBtn");
  toolsDec.addEventListener("click", () => {
    if (_shopWindow__WEBPACK_IMPORTED_MODULE_4__.shopStatus == 0) {
      if (shoppingList.tools > 0) {
        shoppingList.tools--;
        shoppingList.value -= toolsCost();
        shopInterface();
        return;
      }
    } else {
      if (shoppingList.tools > 0) {
        _economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.prodC++;
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
        shoppingList.tools--;
        shoppingList.value -= toolsProfit();
        shopInterface();
        return;
      }
    }
  });
  toolsInc.addEventListener("click", () => {
    if (_shopWindow__WEBPACK_IMPORTED_MODULE_4__.shopStatus == 0) {
      if (shoppingList.value + toolsCost() < _settlementStats__WEBPACK_IMPORTED_MODULE_3__.settlement.vault) {
        shoppingList.tools++;
        shoppingList.value += toolsCost();
        shopInterface();
      }
    } else {
      if (_economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.prodC > 0) {
        _economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.prodC--;
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
        shoppingList.tools++;
        shoppingList.value += toolsProfit();
        shopInterface();
      }
    }
  }), toolsBSBox.appendChild(toolsDec);
  toolsBSBox.appendChild(toolsValue);
  toolsBSBox.appendChild(toolsInc);
  toolsRow.appendChild(toolsBSBox);
  shopWrapper.appendChild(toolsRow);

  ////////BUY SELL INTERFACE////////
  let bsRow = document.createElement("div");
  bsRow.classList.add("bsRow", "subHeader", "center");
  let cxBtn = document.createElement("button");
  cxBtn.style = "width: 20%; margin: 1rem; border-radius: .5rem; text-align: center; font-size: 15px";
  cxBtn.id = "shopCXBtn";
  cxBtn.textContent = "Clear";
  cxBtn.addEventListener("click", () => {
    cancelTrade();
  });
  bsRow.appendChild(cxBtn);
  let tradeValue = document.createElement("div");
  tradeValue.id = "tradeValue";
  if (_shopWindow__WEBPACK_IMPORTED_MODULE_4__.shopStatus == 0) {
    tradeValue.classList.add("buy");
  } else if (_shopWindow__WEBPACK_IMPORTED_MODULE_4__.shopStatus == 1) {
    tradeValue.classList.add("sell");
  }
  tradeValue.textContent = shoppingList.value;
  bsRow.appendChild(tradeValue);
  let buysellBtn = document.createElement("button");
  buysellBtn.style = "height: 100%; width: 20%; margin: 1rem; border-radius: .5rem; font-size: 15px";
  if (_shopWindow__WEBPACK_IMPORTED_MODULE_4__.shopStatus == 0) {
    buysellBtn.textContent = "Buy";
  } else {
    buysellBtn.textContent = "Sell";
  }
  buysellBtn.addEventListener("click", () => {
    confirmTrade();
  });
  bsRow.appendChild(buysellBtn);
  shopWrapper.appendChild(bsRow);
  wrapper.appendChild(shopWrapper);
}
let shoppingList = {
  food: 0,
  sup: 0,
  med: 0,
  scout: 0,
  gar: 0,
  wagon: 0,
  tools: 0,
  value: 0
};
function cancelTrade() {
  clearList();
  shopInterface();
}
function confirmTrade() {
  if (_shopWindow__WEBPACK_IMPORTED_MODULE_4__.shopStatus == 0) {
    (0,_survivalStats__WEBPACK_IMPORTED_MODULE_5__.foodCurrent)(shoppingList.food);
    (0,_survivalStats__WEBPACK_IMPORTED_MODULE_5__.supCurrent)(shoppingList.sup);
    (0,_survivalStats__WEBPACK_IMPORTED_MODULE_5__.medCurrent)(shoppingList.med);
    (0,_safetyStats__WEBPACK_IMPORTED_MODULE_2__.intelCurrent)(shoppingList.scout);
    (0,_safetyStats__WEBPACK_IMPORTED_MODULE_2__.garCurrent)(shoppingList.gar);
    (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.tradeCurrent)(shoppingList.wagon);
    (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.prodCurrent)(shoppingList.tools);
    (0,_settlementStats__WEBPACK_IMPORTED_MODULE_3__.vaultAdd)(-shoppingList.value);
    zeroList();
    (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
    (0,_taxRender__WEBPACK_IMPORTED_MODULE_6__["default"])();
    shopInterface();
  } else {
    if (_shopWindow__WEBPACK_IMPORTED_MODULE_4__.shopStatus == 1) {
      (0,_settlementStats__WEBPACK_IMPORTED_MODULE_3__.vaultAdd)(shoppingList.value);
      zeroList();
      (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
      (0,_taxRender__WEBPACK_IMPORTED_MODULE_6__["default"])();
      shopInterface();
    }
  }
}
function zeroList() {
  shoppingList.food = 0;
  shoppingList.sup = 0;
  shoppingList.med = 0;
  shoppingList.scout = 0;
  shoppingList.gar = 0;
  shoppingList.wagon = 0;
  shoppingList.tools = 0;
  shoppingList.value = 0;
}
function clearList() {
  if (_shopWindow__WEBPACK_IMPORTED_MODULE_4__.shopStatus == 1) {
    _survivalStats__WEBPACK_IMPORTED_MODULE_5__.survival.foodC += shoppingList.food;
    _survivalStats__WEBPACK_IMPORTED_MODULE_5__.survival.supC += shoppingList.sup;
    _survivalStats__WEBPACK_IMPORTED_MODULE_5__.survival.medC += shoppingList.med;
    _safetyStats__WEBPACK_IMPORTED_MODULE_2__.safety.intelC += shoppingList.scout;
    _safetyStats__WEBPACK_IMPORTED_MODULE_2__.safety.garC += shoppingList.gar;
    _economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.tradeC += shoppingList.wagon;
    _economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.prodC += shoppingList.tools;
  }
  zeroList();
  (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
}
function foodCost() {
  return parseInt((_settlementStats__WEBPACK_IMPORTED_MODULE_3__.settlement.level * 5).toFixed(0));
}
function foodProfit() {
  return parseInt((_settlementStats__WEBPACK_IMPORTED_MODULE_3__.settlement.level * 2.5).toFixed(0));
}
function supCost() {
  return parseInt((_settlementStats__WEBPACK_IMPORTED_MODULE_3__.settlement.level * 15).toFixed(0));
}
function supProfit() {
  return parseInt((_settlementStats__WEBPACK_IMPORTED_MODULE_3__.settlement.level * 7.5).toFixed(0));
}
function medCost() {
  return parseInt((_settlementStats__WEBPACK_IMPORTED_MODULE_3__.settlement.level * 25).toFixed(0));
}
function medProfit() {
  return parseInt((_settlementStats__WEBPACK_IMPORTED_MODULE_3__.settlement.level * 12.5).toFixed(0));
}
function scoutCost() {
  return parseInt((_settlementStats__WEBPACK_IMPORTED_MODULE_3__.settlement.level * 20).toFixed(0));
}
function scoutProfit() {
  return parseInt((_settlementStats__WEBPACK_IMPORTED_MODULE_3__.settlement.level * 10).toFixed(0));
}
function garCost() {
  return parseInt((_settlementStats__WEBPACK_IMPORTED_MODULE_3__.settlement.level * 40).toFixed(0));
}
function garProfit() {
  return parseInt((_settlementStats__WEBPACK_IMPORTED_MODULE_3__.settlement.level * 20).toFixed(0));
}
function wagonCost() {
  return parseInt((_settlementStats__WEBPACK_IMPORTED_MODULE_3__.settlement.level * 30).toFixed(0));
}
function wagonProfit() {
  return parseInt((_settlementStats__WEBPACK_IMPORTED_MODULE_3__.settlement.level * 15).toFixed(0));
}
function toolsCost() {
  return parseInt((_settlementStats__WEBPACK_IMPORTED_MODULE_3__.settlement.level * 18).toFixed(0));
}
function toolsProfit() {
  return parseInt((_settlementStats__WEBPACK_IMPORTED_MODULE_3__.settlement.level * 9).toFixed(0));
}


/***/ }),

/***/ "./src/shopWindow.js":
/*!***************************!*\
  !*** ./src/shopWindow.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   shopStatus: () => (/* binding */ shopStatus),
/* harmony export */   shopWindow: () => (/* binding */ shopWindow)
/* harmony export */ });
/* harmony import */ var _settlementStats__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./settlementStats */ "./src/settlementStats.js");
/* harmony import */ var _shopInterface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shopInterface */ "./src/shopInterface.js");
/* harmony import */ var _survivalStats__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./survivalStats */ "./src/survivalStats.js");



function shopWindow() {
  let wrapper = document.querySelector("#buyBox");
  wrapper.id = "buyBox";
  let header = document.createElement("div");
  header.textContent = "Management Shop";
  header.classList.add("header");
  header.style = "border-radius: .5rem .5rem 0 0";
  wrapper.appendChild(header);

  ////////BUY/SELL SWITCHER////////
  let buySell = document.createElement("div");
  buySell.id = "buySell";
  let buy = document.createElement("button");
  buy.textContent = "Buy";
  buy.id = "buyMode";
  buy.classList.add("buybuy");
  let sell = document.createElement("button");
  sell.textContent = "Sell";
  sell.id = "sellMode";
  sell.classList.add("sellbuy");
  buy.addEventListener("click", () => {
    buy.classList.add("buybuy");
    buy.classList.remove("buysell");
    sell.classList.remove("sellsell");
    sell.classList.add("sellbuy");
    (0,_shopInterface__WEBPACK_IMPORTED_MODULE_1__.clearList)();
    shopStatus = 0;
    (0,_shopInterface__WEBPACK_IMPORTED_MODULE_1__.shopInterface)();
    document.querySelector("#tradeValue").classList.remove("sell");
    document.querySelector("#tradeValue").classList.add("buy");
    shopWrapper.classList.add("buy");
    shopWrapper.classList.remove("sell");
  });
  sell.addEventListener("click", () => {
    sell.classList.add("sellsell");
    sell.classList.remove("sellbuy");
    buy.classList.remove("buybuy");
    buy.classList.add("buysell");
    (0,_shopInterface__WEBPACK_IMPORTED_MODULE_1__.clearList)();
    shopStatus = 1;
    (0,_shopInterface__WEBPACK_IMPORTED_MODULE_1__.shopInterface)();
    document.querySelector("#tradeValue").classList.add("sell");
    document.querySelector("#tradeValue").classList.remove("buy");
    shopWrapper.classList.remove("buy");
    shopWrapper.classList.add("sell");
  });
  buySell.appendChild(buy);
  buySell.appendChild(sell);
  wrapper.appendChild(buySell);
  let shopWrapper = document.createElement("div");
  shopWrapper.id = "shopWrapper";
  shopWrapper.classList.add("buy");
  wrapper.appendChild(shopWrapper);
  (0,_shopInterface__WEBPACK_IMPORTED_MODULE_1__.shopInterface)();
  document.querySelector("#tradeValue").classList.add("buy");
}
let shopStatus = 0;


/***/ }),

/***/ "./src/showBldgUpgrade.js":
/*!********************************!*\
  !*** ./src/showBldgUpgrade.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ showUpgrade)
/* harmony export */ });
/* harmony import */ var _compileEvent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compileEvent */ "./src/compileEvent.js");
/* harmony import */ var _pageRenders__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pageRenders */ "./src/pageRenders.js");
/* harmony import */ var _projectBoxRender__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./projectBoxRender */ "./src/projectBoxRender.js");
/* harmony import */ var _renderBuildings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./renderBuildings */ "./src/renderBuildings.js");
/* harmony import */ var _safetyStats__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./safetyStats */ "./src/safetyStats.js");
/* harmony import */ var _settlementStats__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./settlementStats */ "./src/settlementStats.js");
/* harmony import */ var _survivalStats__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./survivalStats */ "./src/survivalStats.js");
/* harmony import */ var _taxRender__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./taxRender */ "./src/taxRender.js");
/* harmony import */ var _weekLog__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./weekLog */ "./src/weekLog.js");









function showUpgrade(building, lvl) {
  let wrapper = document.querySelector("#contentArea");
  wrapper.innerHTML = "";
  wrapper.style = "height: 100%";
  let failCount = 0;
  let upgLevel = "level" + lvl;
  let source = building[upgLevel];
  let headerBar = document.createElement("div");
  headerBar.classList.add("subHeader");
  let backBtnBox = document.createElement("div");
  backBtnBox.style = "display: flex; justify-content: start; width: 25%";
  let backBtn = document.createElement("button");
  backBtn.textContent = "Go Back";
  backBtn.style = "margin-left: 2rem";
  backBtn.addEventListener("click", _renderBuildings__WEBPACK_IMPORTED_MODULE_3__.renderBuildings);
  backBtnBox.appendChild(backBtn);
  headerBar.appendChild(backBtnBox);
  let title = document.createElement("div");
  title.textContent = source.name;
  title.style = "font-size: 20px; display: flex; align-items: center; justify-content: center; width: 50%;";
  headerBar.appendChild(title);
  let spacer = document.createElement("div");
  spacer.innerHTML = "&nbsp;";
  spacer.style = "width: 25%;";
  headerBar.appendChild(spacer);
  wrapper.appendChild(headerBar);
  let warning = document.createElement("div");
  let mainStats = document.createElement("div");
  mainStats.classList.add("flexRow");
  mainStats.style = "justify-content: space-around; padding: 1rem;";
  let minLevelBox = document.createElement("div");
  minLevelBox.classList.add("flexRow", "gap");
  minLevelBox.classList.add(checkVal("level", source.level));
  if (minLevelBox.classList.contains("fail")) {
    failCount++;
  }
  let levelLabel = document.createElement("div");
  levelLabel.textContent = "Minimum Settlement Level:";
  levelLabel.style = "font-size: 18px;";
  minLevelBox.appendChild(levelLabel);
  let levelValue = document.createElement("div");
  levelValue.textContent = source.level;
  levelValue.style = "font-size: 18px;";
  minLevelBox.appendChild(levelValue);
  mainStats.appendChild(minLevelBox);
  let prodBox = document.createElement("div");
  prodBox.classList.add("flexRow", "gap");
  let prodLabel = document.createElement("div");
  prodLabel.textContent = "Productivity Required:";
  prodLabel.style = "font-size: 18px";
  prodBox.appendChild(prodLabel);
  let prodValue = document.createElement("div");
  prodValue.textContent = source.prod;
  prodValue.style = "font-size: 18px";
  prodBox.appendChild(prodValue);
  mainStats.appendChild(prodBox);
  wrapper.appendChild(mainStats);
  let descBox = document.createElement("div");
  if (building.level >= lvl) {
    warning.textContent = "You've already built this upgrade.";
    failCount++;
    warning.style = "font-size: 20px; text-align: center; color: green; margin-top: 2rem";
    wrapper.appendChild(warning);
  } else if (building.level == lvl - 0.5) {
    warning.textContent = "You're already building this upgrade.";
    failCount++;
    warning.style = "font-size: 20px; text-align: center; color: red; margin-top: 2rem";
    wrapper.appendChild(warning);
  } else if (building.level + 1 < lvl) {
    warning.textContent = "You need to build previous upgrades first.";
    failCount++;
    warning.style = "font-size: 20px; text-align: center; color: red; margin-top: 2rem";
    wrapper.appendChild(warning);
  }
  descBox.textContent += source.desc;
  descBox.style = "padding: 4rem 12rem; font-size: 18px; text-align: center";
  wrapper.appendChild(descBox);
  let reqHeader = document.createElement("div");
  reqHeader.textContent = "Requirements";
  reqHeader.classList.add("flexRow", "center");
  reqHeader.style = "font-size: 20px; margin-bottom: 2rem";
  wrapper.appendChild(reqHeader);
  let reqBox = document.createElement("div");
  reqBox.classList.add("flexCol", "gap", "center");
  let keys = Object.keys(source);
  let vals = Object.values(source);
  for (let i = 6; i < keys.length; i++) {
    let reqRow = document.createElement("div");
    reqRow.classList.add("flexRow", "gap", "center", "reqRow");
    let num = document.createElement("div");
    num.textContent = vals[i];
    num.style = "font-size: 18px";
    let item = document.createElement("div");
    item.textContent = keys[i];
    item.style = "font-size: 18px";
    reqRow.appendChild(num);
    reqRow.appendChild(item);
    reqRow.classList.add(checkVal(keys[i], vals[i]));
    if (reqRow.classList.contains("fail")) {
      failCount++;
    }
    reqBox.appendChild(reqRow);
  }
  wrapper.appendChild(reqBox);
  let btnBox = document.createElement("div");
  btnBox.classList.add("flexRow");
  btnBox.style = "justify-content: center; gap: 6rem; margin-top: 6rem";
  if (failCount > 0) {} else {
    let confirm = document.createElement("button");
    confirm.textContent = "Confirm Upgrade";
    confirm.addEventListener("click", () => {
      confirmUpgrade(building, source);
    });
    btnBox.appendChild(confirm);
  }
  wrapper.appendChild(btnBox);
}
function checkVal(key, val) {
  switch (key) {
    case "gold":
      if (_settlementStats__WEBPACK_IMPORTED_MODULE_5__.settlement.vault < val) {
        return "fail";
      }
      break;
    case "level":
      if (_settlementStats__WEBPACK_IMPORTED_MODULE_5__.settlement.level < val) {
        return "fail";
      }
      break;
    case "supplies":
      if (_survivalStats__WEBPACK_IMPORTED_MODULE_6__.survival.supC < val) {
        return "fail";
      }
      break;
    case "intelligence":
      if (_safetyStats__WEBPACK_IMPORTED_MODULE_4__.safety.intelC < val) {
        return "fail";
      }
      break;
    case "food":
      if (_survivalStats__WEBPACK_IMPORTED_MODULE_6__.survival.foodC < val) {
        return "fail";
      }
      break;
    case "medical capacity":
      if (_survivalStats__WEBPACK_IMPORTED_MODULE_6__.survival.medC < val) {
        return "fail";
      }
      break;
    default:
      return;
  }
}
function confirmUpgrade(e, upg) {
  e.level += 0.5;
  (0,_renderBuildings__WEBPACK_IMPORTED_MODULE_3__.renderBuildings)();
  let keys = Object.keys(upg);
  let vals = Object.values(upg);
  for (let i = 6; i < keys.length; i++) {
    switch (keys[i]) {
      case "gold":
        (0,_settlementStats__WEBPACK_IMPORTED_MODULE_5__.vaultAdd)(-vals[i]);
        break;
      case "supplies":
        (0,_survivalStats__WEBPACK_IMPORTED_MODULE_6__.supCurrent)(-vals[i]);
        break;
      case "intelligence":
        (0,_safetyStats__WEBPACK_IMPORTED_MODULE_4__.intelCurrent)(-vals[i]);
        break;
      case "food":
        (0,_survivalStats__WEBPACK_IMPORTED_MODULE_6__.foodCurrent)(-vals[i]);
        break;
      case "medical capacity":
        (0,_survivalStats__WEBPACK_IMPORTED_MODULE_6__.medCurrent)(-vals[i]);
        break;
    }
  }
  (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
  (0,_taxRender__WEBPACK_IMPORTED_MODULE_7__["default"])();
  let proj = {};
  proj.name = upg.name;
  proj.duration = upg.prod;
  proj.totalDuration = upg.prod;
  proj.start = _settlementStats__WEBPACK_IMPORTED_MODULE_5__.settlement.weeksPassed;
  proj.end = -1;
  proj.type = "building";
  proj.count = _compileEvent__WEBPACK_IMPORTED_MODULE_0__.count;
  proj.id = e.id;
  proj.details = upg.desc;
  proj.workers = 0;
  proj.impactItems = [];
  proj.impactVals = [];
  proj.costItems = [], proj.costVals = [], proj.hide = true;
  (0,_compileEvent__WEBPACK_IMPORTED_MODULE_0__.countUp)();
  _projectBoxRender__WEBPACK_IMPORTED_MODULE_2__.projectArray.push(proj);
  _weekLog__WEBPACK_IMPORTED_MODULE_8__.changeLog.eventStart.push(proj);
}

/***/ }),

/***/ "./src/storage.js":
/*!************************!*\
  !*** ./src/storage.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   checkStorage: () => (/* binding */ checkStorage),
/* harmony export */   saveSettlement: () => (/* binding */ saveSettlement),
/* harmony export */   setStorage: () => (/* binding */ setStorage),
/* harmony export */   settlementList: () => (/* binding */ settlementList)
/* harmony export */ });
/* harmony import */ var _buildingsStats__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./buildingsStats */ "./src/buildingsStats.js");
/* harmony import */ var _compileEvent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./compileEvent */ "./src/compileEvent.js");
/* harmony import */ var _economyStats__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./economyStats */ "./src/economyStats.js");
/* harmony import */ var _projectBoxRender__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./projectBoxRender */ "./src/projectBoxRender.js");
/* harmony import */ var _renderDeployed__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./renderDeployed */ "./src/renderDeployed.js");
/* harmony import */ var _renderNotes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./renderNotes */ "./src/renderNotes.js");
/* harmony import */ var _renderUpgrades__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./renderUpgrades */ "./src/renderUpgrades.js");
/* harmony import */ var _safetyStats__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./safetyStats */ "./src/safetyStats.js");
/* harmony import */ var _settlementStats__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./settlementStats */ "./src/settlementStats.js");
/* harmony import */ var _survivalStats__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./survivalStats */ "./src/survivalStats.js");
/* harmony import */ var _weekLog__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./weekLog */ "./src/weekLog.js");











function storageAvailable(type) {
  let storage;
  try {
    storage = window[type];
    const x = "__storage_test__";
    storage.setItem(x, x);
    storage.removeItem(x);
    return true;
  } catch (e) {
    return e instanceof DOMException && (
    // everything except Firefox
    e.code === 22 ||
    // Firefox
    e.code === 1014 ||
    // test name field too, because code might not be present
    // everything except Firefox
    e.name === "QuotaExceededError" ||
    // Firefox
    e.name === "NS_ERROR_DOM_QUOTA_REACHED") &&
    // acknowledge QuotaExceededError only if there's something already stored
    storage && storage.length !== 0;
  }
}
let settlementList = {};
function saveSettlement(data) {
  settlementList[data] = {
    "Settlement Data": _settlementStats__WEBPACK_IMPORTED_MODULE_8__.settlement,
    "Survival Data": _survivalStats__WEBPACK_IMPORTED_MODULE_9__.survival,
    "Safety Data": _safetyStats__WEBPACK_IMPORTED_MODULE_7__.safety,
    "Economy Data": _economyStats__WEBPACK_IMPORTED_MODULE_2__.economy,
    "Building Data": _buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings,
    "Project Data": _projectBoxRender__WEBPACK_IMPORTED_MODULE_3__.projectArray,
    "Deployed Data": _renderDeployed__WEBPACK_IMPORTED_MODULE_4__.deployedArray,
    "Notes Data": _renderNotes__WEBPACK_IMPORTED_MODULE_5__.userNotes,
    "Selected Upgrades Data": _renderUpgrades__WEBPACK_IMPORTED_MODULE_6__.selectedUpgrades,
    "Selected Levels Data": _renderUpgrades__WEBPACK_IMPORTED_MODULE_6__.selectedLevels,
    "Nonselected Upgrades Data": _renderUpgrades__WEBPACK_IMPORTED_MODULE_6__.nonselectedUpgrades,
    "Project Count Data": _compileEvent__WEBPACK_IMPORTED_MODULE_1__.count,
    "Week Log Data": _weekLog__WEBPACK_IMPORTED_MODULE_10__.weekLog,
    "Change Log Data": _weekLog__WEBPACK_IMPORTED_MODULE_10__.changeLog
  };
}
function checkSettlement() {
  if (Object.keys(settlementList).length < 1) {
    settlementList[_settlementStats__WEBPACK_IMPORTED_MODULE_8__.settlement.name] = {
      "Settlement Data": _settlementStats__WEBPACK_IMPORTED_MODULE_8__.settlement,
      "Survival Data": _survivalStats__WEBPACK_IMPORTED_MODULE_9__.survival,
      "Safety Data": _safetyStats__WEBPACK_IMPORTED_MODULE_7__.safety,
      "Economy Data": _economyStats__WEBPACK_IMPORTED_MODULE_2__.economy,
      "Building Data": _buildingsStats__WEBPACK_IMPORTED_MODULE_0__.buildings,
      "Project Data": _projectBoxRender__WEBPACK_IMPORTED_MODULE_3__.projectArray,
      "Deployed Data": _renderDeployed__WEBPACK_IMPORTED_MODULE_4__.deployedArray,
      "Notes Data": _renderNotes__WEBPACK_IMPORTED_MODULE_5__.userNotes,
      "Selected Upgrades Data": _renderUpgrades__WEBPACK_IMPORTED_MODULE_6__.selectedUpgrades,
      "Selected Levels Data": _renderUpgrades__WEBPACK_IMPORTED_MODULE_6__.selectedLevels,
      "Nonselected Upgrades Data": _renderUpgrades__WEBPACK_IMPORTED_MODULE_6__.nonselectedUpgrades,
      "Project Count Data": _compileEvent__WEBPACK_IMPORTED_MODULE_1__.count,
      "Week Log Data": _weekLog__WEBPACK_IMPORTED_MODULE_10__.weekLog,
      "Change Log Data": _weekLog__WEBPACK_IMPORTED_MODULE_10__.changeLog
    };
  }
}
function setStorage() {
  checkSettlement();
  localStorage.setItem("settlementList", JSON.stringify(settlementList));
}
function checkStorage() {
  if (storageAvailable("localStorage")) {
    if (!localStorage.getItem("settlementList")) {
      setStorage();
    } else {
      loadStorage();
    }
  } else {
    alert("fuck no");
  }
}
function loadStorage() {
  let settlementListData = JSON.parse(localStorage.getItem("settlementList"));
  settlementList = settlementListData;
  let name = Object.keys(settlementList)[0];
  let set = settlementList[name];
  (0,_settlementStats__WEBPACK_IMPORTED_MODULE_8__.setSettlement)(set["Settlement Data"]);
  (0,_survivalStats__WEBPACK_IMPORTED_MODULE_9__.setSurvival)(set["Survival Data"]);
  (0,_safetyStats__WEBPACK_IMPORTED_MODULE_7__.setSafety)(set["Safety Data"]);
  (0,_economyStats__WEBPACK_IMPORTED_MODULE_2__.setEconomy)(set["Economy Data"]);
  (0,_buildingsStats__WEBPACK_IMPORTED_MODULE_0__.setBuildings)(set["Building Data"]);
  (0,_projectBoxRender__WEBPACK_IMPORTED_MODULE_3__.setProjects)(set["Project Data"]);
  (0,_renderDeployed__WEBPACK_IMPORTED_MODULE_4__.setDeployed)(set["Deployed Data"]);
  (0,_renderNotes__WEBPACK_IMPORTED_MODULE_5__.setNotes)(set["Notes Data"]);
  (0,_renderUpgrades__WEBPACK_IMPORTED_MODULE_6__.setSelectedUpgrades)(set["Selected Upgrades Data"]);
  (0,_renderUpgrades__WEBPACK_IMPORTED_MODULE_6__.setSelectedLevels)(set["Selected Levels Data"]);
  (0,_renderUpgrades__WEBPACK_IMPORTED_MODULE_6__.setNonselectedUpgrades)(set["Nonselected Upgrades Data"]);
  (0,_compileEvent__WEBPACK_IMPORTED_MODULE_1__.setCount)(set["Project Count Data"]);
  (0,_weekLog__WEBPACK_IMPORTED_MODULE_10__.setWeekLog)(set["Week Log Data"]);
  (0,_weekLog__WEBPACK_IMPORTED_MODULE_10__.setChangeLog)(set["Change Log Data"]);
}


/***/ }),

/***/ "./src/survivalStats.js":
/*!******************************!*\
  !*** ./src/survivalStats.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   foodBonus: () => (/* binding */ foodBonus),
/* harmony export */   foodBox: () => (/* binding */ foodBox),
/* harmony export */   foodCurrent: () => (/* binding */ foodCurrent),
/* harmony export */   foodMax: () => (/* binding */ foodMax),
/* harmony export */   medBonus: () => (/* binding */ medBonus),
/* harmony export */   medBox: () => (/* binding */ medBox),
/* harmony export */   medCurrent: () => (/* binding */ medCurrent),
/* harmony export */   medMax: () => (/* binding */ medMax),
/* harmony export */   setSurvival: () => (/* binding */ setSurvival),
/* harmony export */   showSurAction: () => (/* binding */ showSurAction),
/* harmony export */   supBonus: () => (/* binding */ supBonus),
/* harmony export */   supCurrent: () => (/* binding */ supCurrent),
/* harmony export */   supMax: () => (/* binding */ supMax),
/* harmony export */   suppliesBox: () => (/* binding */ suppliesBox),
/* harmony export */   suppliesModifier: () => (/* binding */ suppliesModifier),
/* harmony export */   surActions: () => (/* binding */ surActions),
/* harmony export */   surExplain: () => (/* binding */ surExplain),
/* harmony export */   survival: () => (/* binding */ survival),
/* harmony export */   survivalBonus: () => (/* binding */ survivalBonus),
/* harmony export */   survivalRating: () => (/* binding */ survivalRating)
/* harmony export */ });
/* harmony import */ var _settlementStats__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./settlementStats */ "./src/settlementStats.js");
/* harmony import */ var _safetyStats__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./safetyStats */ "./src/safetyStats.js");
/* harmony import */ var _economyStats__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./economyStats */ "./src/economyStats.js");
/* harmony import */ var _weekLog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./weekLog */ "./src/weekLog.js");
/* harmony import */ var _renderActionsArea__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./renderActionsArea */ "./src/renderActionsArea.js");
/* harmony import */ var _pageRenders__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pageRenders */ "./src/pageRenders.js");






let survival = {
  Base: 0,
  Adjusted: 0,
  Rating: 0,
  Bonus: 0,
  foodB: 0,
  foodC: 9,
  foodM: 0,
  supB: 0,
  supC: 5,
  supM: 0,
  medB: 0,
  medC: 3,
  medM: 0
};
function setSurvival(data) {
  survival = data;
}
function survivalRating() {
  let a = 0;
  let b = 0;
  let c = 0;
  if (survival.foodC > survival.foodM) {
    a = survival.foodM;
  } else a = survival.foodC;
  if (survival.supC > survival.supM) {
    b = survival.supM;
  } else b = survival.supC;
  if (survival.medC > survival.medM) {
    c = survival.medM;
  } else c = survival.medC;
  survival.Base = ((a + b + c) / _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.level * (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.currentHealth / (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.maxHealthBase + _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.maxHealthBonus))).toFixed(1);
  if (survival.Base <= 1) {
    survival.Rating = "Dying";
  } else if (survival.Base > 1 && survival.Base <= 3.9) {
    survival.Rating = "Endangered";
  } else if (survival.Base >= 4 && survival.Base <= 4.9) {
    survival.Rating = "Desperate";
  } else if (survival.Base >= 5 && survival.Base <= 6.9) {
    survival.Rating = "Stable";
  } else if (survival.Base >= 7 && survival.Base <= 7.9) {
    survival.Rating = "Developing";
  } else if (survival.Base >= 8 && survival.Base <= 9.4) {
    survival.Rating = "Blossoming";
  } else if (survival.Base >= 9.5) {
    survival.Rating = "Flourishing";
  }
  return survival.Rating;
}
function surExplain() {
  if (survival.Rating == "Dying") {
    return "(Safety Score -90%; Shops Closed; Troop Health -33%)";
  } else if (survival.Rating == "Endangered") {
    return "(Safety Score -20%; Troop Health - 15%)";
  } else if (survival.Rating == "Desperate") {
    return "(Safety Score -10%; Troop Health -5%)";
  } else if (survival.Rating == "Stable") {
    return "(Safety Score +0%; Troop Health +0%)";
  } else if (survival.Rating == "Developing") {
    return "(Safety Score +0%; Troop Health +5%)";
  } else if (survival.Rating == "Blossoming") {
    return "(Safety Score +10%; Troop Health +10%)";
  } else if (survival.Rating == "Flourishing") {
    return "(Safety Score +20%; Troop Health +20%)";
  }
}
function survivalBonus(i) {
  survival.Bonus += parseInt(i);
  _weekLog__WEBPACK_IMPORTED_MODULE_3__.changeLog.survival += parseInt(i);
  foodCurrent(i);
  supCurrent(i);
  medCurrent(i);
  foodMax();
  supMax();
  medMax();
}
function foodBonus(i) {
  survival.foodB += parseInt(i);
  _weekLog__WEBPACK_IMPORTED_MODULE_3__.changeLog.foodB += parseInt(i);
  foodCurrent(i);
  foodMax();
}
function foodCurrent(i) {
  survival.foodC += parseInt(i);
  _weekLog__WEBPACK_IMPORTED_MODULE_3__.changeLog.food += parseInt(i);
}
function foodMax() {
  survival.foodM = _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.level * 5 + survival.Bonus + survival.foodB;
}
function supBonus(i) {
  survival.supB += parseInt(i);
  _weekLog__WEBPACK_IMPORTED_MODULE_3__.changeLog.suppliesB += parseInt(i);
  supCurrent(i);
  supMax();
}
function supCurrent(i) {
  survival.supC += parseInt(i);
  _weekLog__WEBPACK_IMPORTED_MODULE_3__.changeLog.supplies += parseInt(i);
}
function supMax() {
  survival.supM = _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.level * 3 + survival.Bonus + survival.supB;
}
function medBonus(i) {
  survival.medB += parseInt(i);
  _weekLog__WEBPACK_IMPORTED_MODULE_3__.changeLog.medsB += parseInt(i);
  medCurrent(i);
  medMax();
}
function medCurrent(i) {
  survival.medC += parseInt(i);
  _weekLog__WEBPACK_IMPORTED_MODULE_3__.changeLog.meds += parseInt(i);
}
function medMax() {
  survival.medM = _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.level * 2 + survival.Bonus + survival.medB;
}
function suppliesModifier() {
  let i = 0;
  switch (_economyStats__WEBPACK_IMPORTED_MODULE_2__.economy.Rating) {
    case "Struggling":
      i = -3;
      break;
    case "Fragile":
      i = -2;
      break;
    case "Stagnant":
      i = -1;
      break;
    case "Growing":
    case "Prosperous":
      i = 0;
      break;
    case "Thriving":
      i = 1;
      break;
    case "Golden Era":
      i = 3;
      break;
  }
  return i;
}
function foodBox() {
  let wrapper = document.querySelector("#foodBox");
  wrapper.innerHTML = "";
  let label = document.createElement("div");
  label.textContent = "Food";
  label.classList.add("flexRow", "center", "gap");
  wrapper.appendChild(label);
  let valRow = document.createElement("div");
  valRow.classList.add("flexRow");
  let value = document.createElement("div");
  value.textContent = survival.foodC;
  value.style = "text-align: center; font-size: 22px";
  valRow.appendChild(value);
  let max = document.createElement("div");
  foodMax();
  max.textContent = "/" + " " + survival.foodM;
  max.style = "font-size: 16px; align-self: end;";
  max.classList.add("text-center");
  valRow.appendChild(max);
  let spBuy = document.createElement("button");
  spBuy.classList.add("tooltip");
  spBuy.textContent = "+";
  spBuy.style = "border-radius: 50%; font-size: 12px; align-self: end; margin-left: 4px";
  spBuy.addEventListener("click", () => {
    if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type != "Fortified") {
      if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.settlementPoints > 0) {
        (0,_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlementPoints)(-1);
        foodCurrent(1);
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_5__.renderAll)();
      }
    } else {
      if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.settlementPoints > 1) {
        (0,_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlementPoints)(-2);
        foodCurrent(1);
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_5__.renderAll)();
      }
    }
  });
  let toolTip = document.createElement("span");
  if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type != "Fortified") {
    toolTip.textContent = "Spend 1 Settlement Point to gain 1 Food";
  } else {
    toolTip.textContent = "Spend 2 Settlement Points to gain 1 Food";
  }
  toolTip.classList.add("tooltiptext");
  spBuy.appendChild(toolTip);
  valRow.appendChild(spBuy);
  wrapper.appendChild(valRow);
  let bonus = document.createElement("span");
  let i = "";
  if (survival.foodB >= 0) {
    i = "+";
  } else {
    i = "-";
  }
  bonus.textContent = " " + i + survival.foodB;
  bonus.style = "font-size: 14px";
  bonus.classList.add("text-center");
  label.appendChild(bonus);
}
function suppliesBox() {
  let wrapper = document.querySelector("#suppliesBox");
  wrapper.innerHTML = "";
  let label = document.createElement("div");
  label.textContent = "Supplies";
  label.classList.add("flexRow", "center", "gap");
  wrapper.appendChild(label);
  let valRow = document.createElement("div");
  valRow.classList.add("flexRow");
  let value = document.createElement("div");
  value.textContent = survival.supC;
  value.style = "text-align: center; font-size: 22px";
  valRow.appendChild(value);
  let max = document.createElement("div");
  supMax();
  max.textContent = "/" + " " + survival.supM;
  max.style = "font-size: 16px; align-self: end";
  max.classList.add("text-center");
  valRow.appendChild(max);
  let spBuy = document.createElement("button");
  spBuy.classList.add("tooltip");
  spBuy.textContent = "+";
  spBuy.style = "border-radius: 50%; font-size: 12px; align-self: end; margin-left: 4px";
  spBuy.addEventListener("click", () => {
    if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "" || _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "Mercantile") {
      if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.settlementPoints > 1) {
        (0,_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlementPoints)(-2);
        supCurrent(1);
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_5__.renderAll)();
      }
    } else if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "Survivalist") {
      if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.settlementPoints > 0) {
        (0,_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlementPoints)(-1);
        supCurrent(1);
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_5__.renderAll)();
      }
    } else if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "Fortified") {
      if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.settlementPoints > 2) {
        (0,_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlementPoints)(-3);
        supCurrent(1);
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_5__.renderAll)();
      }
    }
  });
  let toolTip = document.createElement("span");
  if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "" || _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "Mercantile") {
    toolTip.textContent = "Spend 2 Settlement Points to gain 1 Supply";
  } else if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "Survivalist") {
    toolTip.textContent = "Spend 1 Settlement Point to gain 1 Supply";
  } else if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "Fortified") {
    toolTip.textContent = "Spend 3 Settlement Points to gain 1 Supply";
  }
  toolTip.classList.add("tooltiptext");
  spBuy.appendChild(toolTip);
  valRow.appendChild(spBuy);
  wrapper.appendChild(valRow);
  let bonus = document.createElement("span");
  let i = "";
  if (survival.supB >= 0) {
    i = "+";
  } else {
    i = "-";
  }
  bonus.textContent = " " + i + survival.supB;
  bonus.style = "font-size: 14px";
  bonus.classList.add("text-center");
  label.appendChild(bonus);
}
function medBox() {
  let wrapper = document.querySelector("#medBox");
  wrapper.innerHTML = "";
  let label = document.createElement("div");
  label.textContent = "Medical";
  label.classList.add("flexRow", "center", "gap");
  wrapper.appendChild(label);
  let valRow = document.createElement("div");
  valRow.classList.add("flexRow");
  let value = document.createElement("div");
  value.textContent = survival.medC;
  value.style = "text-align: center; font-size: 22px";
  valRow.appendChild(value);
  let max = document.createElement("div");
  medMax();
  max.textContent = "/" + " " + survival.medM;
  max.style = "font-size: 16px; align-self: end;";
  max.classList.add("text-center");
  valRow.appendChild(max);
  let spBuy = document.createElement("button");
  spBuy.classList.add("tooltip");
  spBuy.textContent = "+";
  spBuy.style = "border-radius: 50%; font-size: 12px; align-self: end; margin-left: 4px";
  spBuy.addEventListener("click", () => {
    if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "" || _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "Mercantile" || _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "Fortified") {
      if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.settlementPoints > 2) {
        (0,_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlementPoints)(-3);
        medCurrent(1);
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_5__.renderAll)();
      }
    } else if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "Survivalist") {
      if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.settlementPoints > 1) {
        (0,_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlementPoints)(-2);
        medCurrent(1);
        (0,_pageRenders__WEBPACK_IMPORTED_MODULE_5__.renderAll)();
      }
    }
  });
  let toolTip = document.createElement("span");
  if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "" || _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "Mercantile" || _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "Fortified") {
    toolTip.textContent = "Spend 3 Settlement Points to gain 1 Medical Capacity";
  } else if (_settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.type == "Survivalist") {
    toolTip.textContent = "Spend 2 Settlement Points to gain 1 Medical Capacity";
  }
  toolTip.classList.add("tooltiptext");
  spBuy.appendChild(toolTip);
  valRow.appendChild(spBuy);
  wrapper.appendChild(valRow);
  let bonus = document.createElement("span");
  let i = "";
  if (survival.medB >= 0) {
    i = "+";
  } else {
    i = "-";
  }
  bonus.textContent = " " + i + survival.medB;
  bonus.style = "font-size: 14px";
  bonus.classList.add("text-center");
  label.appendChild(bonus);
}
let surActions = [{
  name: "Forage for Food",
  id: "forageFood",
  type: "food",
  description: "A party memeber can attempt a Nature or Survival check to forage for fruits and vegetables. DC may be affected by the current season or ongoing events."
}, {
  name: "Hunt for Food",
  id: "huntFood",
  type: "food",
  description: "A party memeber can attempt a Perception or Survival check to hunt animals for food. DC may be affected by the current season or ongoing events."
}, {
  name: "Discover Water",
  id: "discoverWater",
  type: "water",
  description: "A party member can attempt a Nature or Survival check to find a source of water."
}, {
  name: "Gather Materials",
  id: "gatherMaterials",
  type: "supplies",
  description: "A party member can attempt an Athletics, Survival, or Nature check to gather raw materials for use in the settlement."
}, {
  name: "Clean the Streets",
  id: "cleanStreets",
  type: "medical capacity",
  description: "A party member can attempt an Athletics, Diplomacy, Intimidation, or Society check to clean or encourage others to clean the streets, decreasing the likelihood of disease spreading through the population."
}, {
  name: "Treat Sick/Injured",
  id: "treatSick",
  type: "medical capacity",
  description: "A party member can attempt a Medicine, Nature, Occult, or Religion check to treat the sick and injured in the settlement. This action affects settlement health, but cannot increase it above its maximum (or override other ongoing effects)."
}];
function showSurAction(item) {
  let wrapper = document.querySelector("#setStatus");
  wrapper.innerHTML = "";
  let header = document.createElement("div");
  header.style = "display: flex; justify-content: center; width: 100%; background: rgba(200,200,230,.5); padding: 1rem; box-sizing: border-box; border-radius: .5rem .5rem 0 0;";
  let spacer = document.createElement("div");
  spacer.innerHTML = "&nbsp;";
  spacer.style = "width: 25%;";
  header.appendChild(spacer);
  let title = document.createElement("div");
  title.textContent = item.name;
  title.style = "display: flex; justify-content: center; align-items: center; width: 50%;";
  header.appendChild(title);
  let backBox = document.createElement("div");
  backBox.style = "width: 25%; display: flex; justify-content: center; align-items: center;";
  let backBtn = document.createElement("button");
  backBtn.textContent = "Back";
  backBtn.style = "border-radius: 1rem;";
  backBtn.addEventListener("click", () => {
    (0,_renderActionsArea__WEBPACK_IMPORTED_MODULE_4__["default"])();
  });
  backBox.appendChild(backBtn);
  header.appendChild(backBox);
  wrapper.appendChild(header);
  let content = document.createElement("div");
  content.style = "font-size: 16px; padding: 1rem";
  content.textContent = item.description;
  wrapper.appendChild(content);
}


/***/ }),

/***/ "./src/taxRender.js":
/*!**************************!*\
  !*** ./src/taxRender.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ taxRender)
/* harmony export */ });
/* harmony import */ var _economyStats__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./economyStats */ "./src/economyStats.js");
/* harmony import */ var _pageRenders__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pageRenders */ "./src/pageRenders.js");
/* harmony import */ var _settlementStats__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./settlementStats */ "./src/settlementStats.js");



function taxRender() {
  let wrapper = document.querySelector("#taxBox");
  wrapper.innerHTML = "";
  wrapper.style = "justify-content: start";
  let header = document.createElement("div");
  header.textContent = "Taxes and Items";
  header.classList.add("header");
  header.style = "border-radius: .5rem .5rem 0 0";
  wrapper.appendChild(header);
  let baseTaxBox = document.createElement("div");
  baseTaxBox.classList.add("taxRow");
  let baseTaxLabel = document.createElement("div");
  baseTaxLabel.classList.add("taxLabel");
  baseTaxLabel.textContent = "Base Taxes:";
  baseTaxBox.appendChild(baseTaxLabel);
  let baseTaxValue = document.createElement("div");
  baseTaxValue.textContent = (0,_settlementStats__WEBPACK_IMPORTED_MODULE_2__.baseTaxes)();
  baseTaxValue.classList.add("taxValue");
  baseTaxValue.style = "justify-content: center";
  baseTaxBox.appendChild(baseTaxValue);
  let taxIncBox = document.createElement("div");
  taxIncBox.classList.add("taxRow");
  let taxIncLabel = document.createElement("div");
  taxIncLabel.classList.add("taxLabel");
  taxIncLabel.textContent = "Increase %";
  taxIncBox.appendChild(taxIncLabel);
  let taxIncValBox = document.createElement("div");
  taxIncValBox.classList.add("taxValue");
  let taxIncDec = document.createElement("button");
  taxIncDec.textContent = "<";
  taxIncDec.classList.add("taxChngBtn");
  let taxIncVal = document.createElement("div");
  taxIncVal.textContent = _economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.taxInc;
  taxIncVal.id = "taxIncVal";
  let taxIncInc = document.createElement("button");
  taxIncInc.classList.add("taxChngBtn");
  taxIncInc.textContent = ">";
  taxIncDec.addEventListener("click", () => {
    if (_economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.taxInc > 0) {
      _economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.taxInc -= 5;
      (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
    }
  });
  taxIncInc.addEventListener("click", () => {
    if (_economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.taxInc <= 95) {
      _economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.taxInc += 5;
      _economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.taxDec = 0;
      (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
    }
    if (_economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.Adjusted < 0) {
      _economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.taxInc -= 5;
      (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
    }
  });
  taxIncValBox.appendChild(taxIncDec);
  taxIncValBox.appendChild(taxIncVal);
  taxIncValBox.appendChild(taxIncInc);
  taxIncBox.appendChild(taxIncValBox);
  let taxDecBox = document.createElement("div");
  taxDecBox.classList.add("taxRow");
  let taxDecLabel = document.createElement("div");
  taxDecLabel.classList.add("taxLabel");
  taxDecLabel.textContent = "Decrease %";
  taxDecBox.appendChild(taxDecLabel);
  let taxDecValBox = document.createElement("div");
  taxDecValBox.classList.add("taxValue");
  let taxDecDec = document.createElement("button");
  taxDecDec.textContent = "<";
  taxDecDec.classList.add("taxChngBtn");
  let taxDecVal = document.createElement("div");
  taxDecVal.id = "taxDecVal";
  taxDecVal.textContent = _economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.taxDec;
  let taxDecInc = document.createElement("button");
  taxDecInc.classList.add("taxChngBtn");
  taxDecInc.textContent = ">";
  taxDecDec.addEventListener("click", () => {
    if (_economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.taxDec > 0) {
      _economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.taxDec -= 5;
      (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
    }
  });
  taxDecInc.addEventListener("click", () => {
    if (_economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.taxDec <= 95) {
      _economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.taxDec += 5;
      _economyStats__WEBPACK_IMPORTED_MODULE_0__.economy.taxInc = 0;
      (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.renderAll)();
    }
  });
  taxDecValBox.appendChild(taxDecDec);
  taxDecValBox.appendChild(taxDecVal);
  taxDecValBox.appendChild(taxDecInc);
  taxDecBox.appendChild(taxDecValBox);
  let aTaxesBox = document.createElement("div");
  aTaxesBox.classList.add("taxRow");
  let aTaxesLabel = document.createElement("div");
  aTaxesLabel.textContent = "Actual Taxes:";
  aTaxesLabel.style = "font-size: 16px";
  aTaxesLabel.classList.add("taxLabel");
  aTaxesBox.appendChild(aTaxesLabel);
  let aTaxesValue = document.createElement("div");
  aTaxesValue.textContent = (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.actualTaxes)();
  aTaxesValue.classList.add("taxValue");
  aTaxesValue.style = "justify-content: center";
  aTaxesBox.appendChild(aTaxesValue);
  let cItemBox = document.createElement("div");
  cItemBox.classList.add("taxRow");
  let cItemLabel = document.createElement("div");
  cItemLabel.textContent = "Common Lvl:";
  cItemLabel.classList.add("taxLabel");
  cItemLabel.style = "font-size: 15px";
  cItemBox.appendChild(cItemLabel);
  let cItemVal = document.createElement("div");
  cItemVal.textContent = (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.commonItem)();
  cItemVal.classList.add("taxValue");
  cItemVal.style = "justify-content: center";
  cItemBox.appendChild(cItemVal);
  let uItemBox = document.createElement("div");
  uItemBox.classList.add("taxRow");
  let uItemLabel = document.createElement("div");
  uItemLabel.textContent = "Uncommon Lvl:";
  uItemLabel.classList.add("taxLabel");
  uItemLabel.style = "font-size: 15px;";
  uItemBox.appendChild(uItemLabel);
  let uItemVal = document.createElement("div");
  uItemVal.textContent = (0,_economyStats__WEBPACK_IMPORTED_MODULE_0__.uncommonItem)();
  uItemVal.classList.add("taxValue");
  uItemVal.style = "justify-content: center";
  uItemBox.appendChild(uItemVal);
  let splitter = document.createElement("div");
  splitter.classList.add("header");
  splitter.textContent = "Tax Vault";
  splitter.style = "border-radius: 0";
  let taxVaultBox = document.createElement("div");
  taxVaultBox.classList.add("taxRow");
  let taxVaultLabel = document.createElement("div");
  taxVaultLabel.classList.add("taxLabel");
  taxVaultLabel.textContent = "Tax Vault";
  taxVaultBox.appendChild(taxVaultLabel);
  let taxVaultValue = document.createElement("div");
  taxVaultValue.textContent = _settlementStats__WEBPACK_IMPORTED_MODULE_2__.settlement.vault;
  taxVaultValue.classList.add("taxValue");
  taxVaultValue.style = "justify-content: center";
  taxVaultBox.appendChild(taxVaultValue);
  let levelBox = document.createElement("div");
  levelBox.classList.add("taxRow");
  let levelLabel = document.createElement("div");
  levelLabel.classList.add("taxLabel");
  levelLabel.textContent = "Level Up Cost";
  levelBox.appendChild(levelLabel);
  let levelValue = document.createElement("div");
  levelValue.classList.add("taxValue");
  levelValue.textContent = (0,_pageRenders__WEBPACK_IMPORTED_MODULE_1__.levelCost)();
  levelBox.appendChild(levelValue);
  wrapper.appendChild(baseTaxBox);
  wrapper.appendChild(taxIncBox);
  wrapper.appendChild(taxDecBox);
  wrapper.appendChild(aTaxesBox);
  wrapper.appendChild(cItemBox);
  wrapper.appendChild(uItemBox);
  wrapper.appendChild(splitter);
  wrapper.appendChild(taxVaultBox);
  wrapper.appendChild(levelBox);
}

/***/ }),

/***/ "./src/weekLog.js":
/*!************************!*\
  !*** ./src/weekLog.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   changeLog: () => (/* binding */ changeLog),
/* harmony export */   renderWeeks: () => (/* binding */ renderWeeks),
/* harmony export */   setChangeLog: () => (/* binding */ setChangeLog),
/* harmony export */   setWeekLog: () => (/* binding */ setWeekLog),
/* harmony export */   trackChange: () => (/* binding */ trackChange),
/* harmony export */   weekLog: () => (/* binding */ weekLog)
/* harmony export */ });
/* harmony import */ var _settlementStats__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./settlementStats */ "./src/settlementStats.js");

let weekLog = {};
function setWeekLog(data) {
  weekLog = data;
}
function setChangeLog(data) {
  changeLog = data;
}
let changeLog = {
  survival: 0,
  food: 0,
  foodB: 0,
  supplies: 0,
  suppliesB: 0,
  meds: 0,
  medsB: 0,
  safety: 0,
  di: 0,
  diB: 0,
  intel: 0,
  intelB: 0,
  gar: 0,
  garB: 0,
  economy: 0,
  trade: 0,
  tradeB: 0,
  prod: 0,
  prodB: 0,
  vault: 0,
  health: 0,
  level: 0,
  sp: 0,
  eventStart: [],
  eventEnd: [],
  week: 0
};
function trackChange() {
  changeLog.week = _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.weeksPassed;
  let index = "week" + _settlementStats__WEBPACK_IMPORTED_MODULE_0__.settlement.weeksPassed;
  let events = changeLog;
  weekLog[index] = events;
  clearChangeLog();
}
function renderWeeks() {
  let bigArea = document.querySelector("#contentArea");
  bigArea.innerHTML = "";
  let wrapper = document.createElement("div");
  wrapper.id = "weekArea";
  let header = document.createElement("div");
  header.classList.add("subHeader");
  header.textContent = "Weekly Logs";
  wrapper.appendChild(header);
  let logArea = document.createElement("div");
  logArea.style = "overflow: auto; display: flex; flex-direction: column-reverse; box-sizing: border-box; max-height: 700px";
  if (Object.keys(weekLog).length == 0) {
    logArea.textContent = "You don't have any weekly logs yet.";
    logArea.style = "display: flex; justify-content: center; align-items: center; font-size: 16px; text-align: center";
  } else {
    for (let i = 1; i < Object.keys(weekLog).length + 1; i++) {
      let index = "week" + i;
      let week = weekLog[index];
      let row = document.createElement("div");
      row.style = "display: flex; justify-content:center; margin: .25rem";
      let title = document.createElement("button");
      title.style = "width: 75%;";
      title.textContent = `Week ${week.week} Log`;
      row.appendChild(title);
      title.addEventListener("click", () => {
        displayWeek(week);
      });
      logArea.appendChild(row);
    }
  }
  wrapper.appendChild(logArea);
  bigArea.appendChild(wrapper);
  logArea.scrollTop = -99999;
}
function clearChangeLog() {
  changeLog = {
    survival: 0,
    food: 0,
    foodB: 0,
    supplies: 0,
    suppliesB: 0,
    meds: 0,
    medsB: 0,
    safety: 0,
    di: 0,
    diB: 0,
    intel: 0,
    intelB: 0,
    gar: 0,
    garB: 0,
    economy: 0,
    trade: 0,
    tradeB: 0,
    prod: 0,
    prodB: 0,
    vault: 0,
    health: 0,
    level: 0,
    sp: 0,
    eventStart: [],
    eventEnd: [],
    week: 0
  };
}
function displayWeek(week) {
  let wrapper = document.querySelector("#contentArea");
  wrapper.innerHTML = "";
  let headerBox = document.createElement("div");
  headerBox.classList.add("flexRow", "center");
  headerBox.style = "background: rgba(200,200,230,.5);";
  let backBox = document.createElement("div");
  backBox.classList.add("flexRow", "center", "gap");
  backBox.style = "width: 25%";
  let back = document.createElement("button");
  back.style = "border-radius: 1rem;";
  back.textContent = "Go Back";
  back.addEventListener("click", renderWeeks);
  backBox.appendChild(back);
  headerBox.appendChild(backBox);
  let header = document.createElement("div");
  header.classList.add("subHeader");
  header.style = "width: 50%; background: none";
  header.textContent = `Week ${week.week} Log`;
  headerBox.appendChild(header);
  let spacer = document.createElement("div");
  spacer.style = "width: 25%";
  headerBox.appendChild(spacer);
  wrapper.appendChild(headerBox);
  let content = document.createElement("div");
  content.classList.add("flexRow");
  let logBox = document.createElement("div");
  logBox.classList.add("flexCol", "gap");
  logBox.style = "width: 50%; box-sizing: border-box; align-self: start";
  let changesHeader = document.createElement("div");
  changesHeader.textContent = "Changes";
  changesHeader.style = "background: rgba(40,40,40,.2)";
  changesHeader.classList.add("subHeader");
  logBox.appendChild(changesHeader);
  let log = document.createElement("div");
  log.classList.add("flexCol", "center", "gap");
  log.id = "log";
  if (week.survival != 0) {
    log.appendChild(addLog(week.survival, "Survival Bonus"));
  }
  if (week.food != 0) {
    log.appendChild(addLog(week.food, "Food"));
  }
  if (week.foodB != 0) {
    log.appendChild(addLog(week.foodB, "Food Modifier"));
  }
  if (week.supplies != 0) {
    log.appendChild(addLog(week.supplies, "Supplies"));
  }
  if (week.suppliesB != 0) {
    log.appendChild(addLog(week.suppliesB, "Supplies Modifier"));
  }
  if (week.meds != 0) {
    log.appendChild(addLog(week.meds, "Medical Capacity"));
  }
  if (week.medsB != 0) {
    log.appendChild(addLog(week.medsB, "Medical Capacity Modifier"));
  }
  if (week.safety != 0) {
    log.appendChild(addLog(week.safety, "Safety Bonus"));
  }
  if (week.di != 0) {
    log.appendChild(addLog(week.di, "Defensive Infrastructure"));
  }
  if (week.diB != 0) {
    log.appendChild(addLog(week.diB, "Defensive Infrastructure Modifier"));
  }
  if (week.intel != 0) {
    log.appendChild(addLog(week.intel, "Intelligence"));
  }
  if (week.intelB != 0) {
    log.appendChild(addLog(week.intelB, "Intelligence Modifier"));
  }
  if (week.gar != 0) {
    log.appendChild(addLog(week.gar, "Garrison"));
  }
  if (week.garB != 0) {
    log.appendChild(addLog(week.garB, "Garrison Modifier"));
  }
  if (week.economy != 0) {
    log.appendChild(addLog(week.economy, "Economy Bonus"));
  }
  if (week.trade != 0) {
    log.appendChild(addLog(week.trade, "Trade"));
  }
  if (week.tradeB != 0) {
    log.appendChild(addLog(week.tradeB, "Trade Modifier"));
  }
  if (week.prod != 0) {
    log.appendChild(addLog(week.prod, "Productivity"));
  }
  if (week.prodB != 0) {
    log.appendChild(addLog(week.prodB, "Productivity Modifier"));
  }
  if (week.vault != 0) {
    log.appendChild(addLog(week.vault, "Tax Vault"));
  }
  if (week.health != 0) {
    log.appendChild(addLog(week.health, "Settlement Health"));
  }
  if (week.level != 0) {
    log.appendChild(addLog(week.level, "Settlement Level"));
  }
  if (week.sp != 0) {
    log.appendChild(addLog(week.sp, "Settlement Points"));
  }
  logBox.appendChild(log);
  content.appendChild(logBox);
  let bigBox = document.createElement("div");
  bigBox.style = "width: 50%; box-sizing: border-box; align-self: start;";
  let eventStartHeader = document.createElement("div");
  eventStartHeader.classList.add("subHeader");
  eventStartHeader.style = "background: rgba(40,40,40,.2)";
  eventStartHeader.textContent = "Events";
  bigBox.appendChild(eventStartHeader);
  let eventBox = document.createElement("div");
  eventBox.classList.add("flexCol", "gap");
  eventBox.style = "box-sizing: border-box; align-self: start; height: 705px; overflow-y: scroll; scrollbar-width: 50%; border-left: 1px solid rgba(0,0,0.1);";
  bigBox.appendChild(eventBox);
  if (week.eventStart.length > 0) {
    let started = document.createElement("div");
    started.textContent = "Events Started This Week";
    started.style = "font-size: 20px";
    started.classList.add("flexRow", "center");
    eventBox.appendChild(started);
    let example = document.createElement("div");
    example.style = "display: grid; grid-template-columns: 1fr 1fr 1fr; place-items: center;";
    let title = document.createElement("div");
    title.textContent = "Title";
    example.appendChild(title);
    let duration = document.createElement("div");
    duration.textContent = "Duration";
    example.appendChild(duration);
    let impacts = document.createElement("div");
    impacts.textContent = "Impacts";
    example.appendChild(impacts);
    eventBox.appendChild(example);
    let events = document.createElement("div");
    events.classList.add("flexCol", "gap");
    let eventStartLog = document.createElement("div");
    eventStartLog.id = "eventStartLog";
    week.eventStart.forEach(proj => {
      eventStartLog.appendChild(renderProjSummary(week, proj));
    });
    events.appendChild(eventStartLog);
    eventBox.appendChild(events);
  }
  if (week.eventEnd.length > 0) {
    let ended = document.createElement("div");
    ended.textContent = "Events Ended This Week";
    ended.style = "font-size: 20px";
    ended.classList.add("flexRow", "center");
    eventBox.appendChild(ended);
    let example2 = document.createElement("div");
    example2.style = "display: grid; grid-template-columns: 1fr 1fr 1fr; place-items: center;";
    let title2 = document.createElement("div");
    title2.textContent = "Title";
    example2.appendChild(title2);
    let duration2 = document.createElement("div");
    duration2.textContent = "Duration";
    example2.appendChild(duration2);
    let impacts2 = document.createElement("div");
    impacts2.textContent = "Impacts";
    example2.appendChild(impacts2);
    eventBox.appendChild(example2);
    let endLog = document.createElement("div");
    endLog.classList.add("flexCol", "gap");
    week.eventEnd.forEach(proj => {
      endLog.appendChild(renderProjSummaryEnd(week, proj));
    });
    eventBox.appendChild(endLog);
  }
  content.appendChild(bigBox);
  wrapper.appendChild(content);
}
function renderProjSummary(week, proj) {
  if (proj.end - proj.start == 1) {
    return document.createElement("div");
  }
  let row = document.createElement("div");
  row.classList.add("eventStartRow");

  ///////////////////////////////////

  let box1 = document.createElement("div");
  box1.classList.add("flexRow");
  let expand = document.createElement("button");
  expand.style = "background: none; border: none";
  if (proj.hide == true) {
    expand.innerHTML = "&#8680;";
  } else if (proj.hide == false) {
    expand.innerHTML = "&#8681;";
  }
  expand.addEventListener("click", () => {
    if (proj.hide == true) {
      proj.hide = false;
      displayWeek(week);
    } else {
      proj.hide = true;
      displayWeek(week);
    }
  });
  box1.appendChild(expand);
  let title = document.createElement("div");
  title.textContent = proj.name;
  box1.appendChild(title);
  row.appendChild(box1);

  //////////////////////////////////

  let box2 = document.createElement("div");
  box2.classList.add("flexRow", "center", "gap");
  let timeLabel = document.createElement("div");
  let timeValue = document.createElement("div");
  if (proj.type == "Active" || proj.type == "building" || proj.type == "Active-Fix") {
    timeLabel.textContent = "Productivity:";
    timeValue.textContent = proj.totalDuration;
  } else if (proj.type == "Passive") {
    timeLabel.textContent = "Weeks:";
    timeValue.textContent = proj.totalDuration;
  } else if (proj.type == "Indefinite") {
    timeLabel.textContent = "Unknown";
    timeValue.textContent = "";
  } else if (proj.type == "Immediate") {
    timeLabel.textContent = "Immediate Event";
    timeValue.textContent = "";
  }
  box2.appendChild(timeLabel);
  box2.appendChild(timeValue);
  row.appendChild(box2);
  let box3 = document.createElement("div");
  box3.classList.add("flexCol", "center", "gap");
  for (let i = 0; i < proj.impactItems.length; i++) {
    let iRow = document.createElement("div");
    iRow.classList.add("flexRow", "center", "gap");
    let iValue = document.createElement("div");
    iValue.textContent = proj.impactVals[i];
    iRow.appendChild(iValue);
    let iTitle = document.createElement("div");
    iTitle.textContent = proj.impactItems[i];
    iRow.appendChild(iTitle);
    box3.appendChild(iRow);
  }
  row.appendChild(box3);
  if (proj.hide == false) {
    let descBox = document.createElement("div");
    descBox.style = "grid-area: 2/1/3/4";
    let descHeader = document.createElement("div");
    descHeader.textContent = "Event Description";
    descHeader.classList.add("flexRow", "center");
    descBox.appendChild(descHeader);
    let descArea = document.createElement("div");
    descArea.textContent = proj.details;
    descBox.appendChild(descArea);
    row.appendChild(descBox);
  }
  return row;
}
function renderProjSummaryEnd(week, proj) {
  if (proj.type == "Immediate") {
    return document.createElement("div");
  }
  let row = document.createElement("div");
  row.classList.add("eventStartRow");

  ///////////////////////////////////

  let box1 = document.createElement("div");
  box1.classList.add("flexRow");
  let expand = document.createElement("button");
  expand.style = "background: none; border : none";
  if (proj.hide == true) {
    expand.innerHTML = "&#8680;";
  } else if (proj.hide == false) {
    expand.innerHTML = "&#8681;";
  }
  expand.addEventListener("click", () => {
    if (proj.hide == true) {
      proj.hide = false;
      displayWeek(week);
    } else {
      proj.hide = true;
      displayWeek(week);
    }
  });
  box1.appendChild(expand);
  let title = document.createElement("div");
  title.textContent = proj.name;
  box1.appendChild(title);
  row.appendChild(box1);

  //////////////////////////////////

  let box2 = document.createElement("div");
  box2.classList.add("flexRow", "center", "gap");
  let timeLabel = document.createElement("div");
  let timeValue = document.createElement("div");
  timeLabel.textContent = "Total Weeks:";
  timeValue.textContent = proj.end - proj.start;
  box2.appendChild(timeLabel);
  box2.appendChild(timeValue);
  row.appendChild(box2);
  let box3 = document.createElement("div");
  box3.classList.add("flexCol", "center", "gap");
  for (let i = 0; i < proj.impactItems.length; i++) {
    let iRow = document.createElement("div");
    iRow.classList.add("flexRow", "center", "gap");
    let iValue = document.createElement("div");
    iValue.textContent = proj.impactVals[i];
    iRow.appendChild(iValue);
    let iTitle = document.createElement("div");
    iTitle.textContent = proj.impactItems[i];
    iRow.appendChild(iTitle);
    box3.appendChild(iRow);
  }
  row.appendChild(box3);
  if (proj.hide == false) {
    let descBox = document.createElement("div");
    descBox.style = "grid-area: 2/1/3/4";
    let descHeader = document.createElement("div");
    descHeader.textContent = "Event Description";
    descHeader.classList.add("flexRow", "center");
    descBox.appendChild(descHeader);
    let descArea = document.createElement("div");
    descArea.textContent = proj.details;
    descBox.appendChild(descArea);
    row.appendChild(descBox);
  }
  return row;
}
function addLog(value, name) {
  let row = document.createElement("div");
  row.style = "display: flex; justify-content: start; align-items: center; gap: 4px; padding-left: 2rem; box-sizing: border-box; width: 100%";
  let label = document.createElement("div");
  label.textContent = name;
  row.appendChild(label);
  let val = document.createElement("div");
  val.textContent = value;
  row.appendChild(val);
  if (value < 0) {
    label.textContent = name + " decreased by";
  } else {
    if (value > 0) {
      label.textContent = name + " increased by";
    }
  }
  return row;
}
function addItem(name, value) {}


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/style.css":
/*!*************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/style.css ***!
  \*************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/getUrl.js */ "./node_modules/css-loader/dist/runtime/getUrl.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);
// Imports



var ___CSS_LOADER_URL_IMPORT_0___ = new URL(/* asset import */ __webpack_require__(/*! ../Luminari-Regular.woff */ "./Luminari-Regular.woff"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_1___ = new URL(/* asset import */ __webpack_require__(/*! ./militia_infantry-1706207528.png */ "./src/militia_infantry-1706207528.png"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_2___ = new URL(/* asset import */ __webpack_require__(/*! ./militia_archers-1706210077.png */ "./src/militia_archers-1706210077.png"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_3___ = new URL(/* asset import */ __webpack_require__(/*! ./militia_pikemen-1706216953.png */ "./src/militia_pikemen-1706216953.png"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_4___ = new URL(/* asset import */ __webpack_require__(/*! ./militia_cavalry-1706216960.png */ "./src/militia_cavalry-1706216960.png"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_5___ = new URL(/* asset import */ __webpack_require__(/*! ./guard_infantry-1706642232.png */ "./src/guard_infantry-1706642232.png"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_6___ = new URL(/* asset import */ __webpack_require__(/*! ./guard_archers-1706643899.png */ "./src/guard_archers-1706643899.png"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_7___ = new URL(/* asset import */ __webpack_require__(/*! ./guard_spearmen-1706642492.png */ "./src/guard_spearmen-1706642492.png"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_8___ = new URL(/* asset import */ __webpack_require__(/*! ./guard_cavalry-1706642216.png */ "./src/guard_cavalry-1706642216.png"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_9___ = new URL(/* asset import */ __webpack_require__(/*! ./soldiers-1706642896.png */ "./src/soldiers-1706642896.png"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_10___ = new URL(/* asset import */ __webpack_require__(/*! ./longbowmen-1706643607.png */ "./src/longbowmen-1706643607.png"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_11___ = new URL(/* asset import */ __webpack_require__(/*! ./sword-cross.png */ "./src/sword-cross.png"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_12___ = new URL(/* asset import */ __webpack_require__(/*! ./shield.png */ "./src/shield.png"), __webpack_require__.b);
var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
var ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___);
var ___CSS_LOADER_URL_REPLACEMENT_1___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_1___);
var ___CSS_LOADER_URL_REPLACEMENT_2___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_2___);
var ___CSS_LOADER_URL_REPLACEMENT_3___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_3___);
var ___CSS_LOADER_URL_REPLACEMENT_4___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_4___);
var ___CSS_LOADER_URL_REPLACEMENT_5___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_5___);
var ___CSS_LOADER_URL_REPLACEMENT_6___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_6___);
var ___CSS_LOADER_URL_REPLACEMENT_7___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_7___);
var ___CSS_LOADER_URL_REPLACEMENT_8___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_8___);
var ___CSS_LOADER_URL_REPLACEMENT_9___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_9___);
var ___CSS_LOADER_URL_REPLACEMENT_10___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_10___);
var ___CSS_LOADER_URL_REPLACEMENT_11___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_11___);
var ___CSS_LOADER_URL_REPLACEMENT_12___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_12___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `@font-face {
  font-family: "fantasy";
  src: url(${___CSS_LOADER_URL_REPLACEMENT_0___});
}

* {
  font-family: "fantasy";
  font-size: 16px;
}

.body {
  position: relative;
  cursor:progress
}

textarea {
  width: 97.75%;
  height: 89.5%;
  margin: 1rem;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
}

.flexRow {
  display: flex;
  align-items: center;
}

.flexCol {
  display: flex;
  flex-direction: column;
  align-content: center;
}

.text-center {
  text-align: center;
  width: 100%;
}

.gap {
  gap: 0.33rem;
}

.center {
  justify-content: center;
  align-items: center;
}

.box1 {
  margin: 0 1rem 1rem 1rem;
  padding: 0.5rem;
  height: 90px;
  background: aliceblue;
  border-radius: 0.5rem;
  box-shadow: 0 0 1rem black;
}

.box1a {
  margin: 0 1rem 1rem 1rem;
  padding: 0.5rem;
  height: 120px;
  background: aliceblue;
  border-radius: 0.5rem;
  box-shadow: 0 0 1rem black;
  justify-content: center;
}

.box2 {
  margin: 0 1rem 1rem 1rem;
  background: aliceblue;
  height: 500px;
  border-radius: 0.5rem;
  box-shadow: 0 0 1rem black;
}

.box3 {
  margin: 0 1rem 1rem 1rem;
  background: aliceblue;
  border-radius: 0.5rem;
  box-shadow: 0 0 1rem black;
}

.box4 {
  width: 11.111%;
}

#contentBox {
  grid-column: 3/4;
  grid-row: 1/-1;
  display: flex;
  flex-direction: column;
  margin: 0 1rem 1rem 1rem;
  background: aliceblue;
  border-radius: 0.5rem;
  box-shadow: 0 0 1rem black;
  justify-content: start;
}

#currentHealth {
  width: 15%;
  background: none;
  border: none;
}

button {
  font-family: "fantasy";
}

#settlementName {
  font-size: 24px;
  border: none;
  background: none;
  text-align: center;
  width: 85%;
}

#settlementName::placeholder {
  background: rgba(25, 25, 200, 0.3);
}

.valBall {
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 1rem;
  background: rgba(200, 200, 230, 1);
  border: 1px solid black;
  height: 35px;
  width: 35px;
}

.header {
  height: 10%;
  font-size: 22px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(200, 200, 230, 0.5);
  padding: 0.5rem;
  border-radius: 0.5rem;
}

.subHeader {
  height: 5%;
  font-size: 22px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(200, 200, 230, 0.5);
  padding: 0.5rem;
}

/*//////////////////Tax Styling///////////////////////////*/

.taxRow {
  display: flex;
  height: 10%;
}

.taxLabel,
.taxValue {
  width: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.taxLabel {
  justify-content: start;
  padding-left: 1rem;
  box-sizing: border-box;
}

.taxChngBtn {
  border: none;
  background: none;
}

/*//////////////////////Shop Styling////////////////////////////////////*/

#buySell {
  display: flex;
  height: 10%;
}

#buyMode,
#sellMode {
  width: 50%;
  border: none;
}

#buyMode {
  border-right: 1px solid black;
}

#sellMode {
  border-left: 1px solid black;
}

.shopRow {
  display: flex;
  height: 45px;
}

.shopLabel {
  width: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.bsBox {
  width: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.shopBtn {
  border: none;
  background: none;
}

.bsRow {
  display: flex;
  height: 12.5%;
}

.buybuy {
  background: rgba(20, 120, 20, 0.2);
  color: rgba(0, 80, 0, 1);
}

#buyMode.buysell {
  background: rgba(100, 100, 100, 0.3);
  color: rgba(20, 180, 20, 0.5);
  border-bottom: 2px solid black;
}

#sellMode.sellbuy {
  background: rgba(100, 100, 100, 0.3);
  color: rgba(180, 20, 20, 0.5);
  border-bottom: 2px solid black;
}

.sellsell {
  background: rgba(180, 20, 20, 0.2);
  color: rgba(80, 0, 0, 1);
}

.buy {
  background: rgba(20, 120, 20, 0.05);
}

.sell {
  background: rgba(180, 20, 20, 0.05);
}

#tradeValue {
  border: 6px solid lavender;
  width: 40%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 22px;
  box-sizing: border-box;
}

#tradeValue.buy {
  background: rgba(20, 120, 20, 0.2);
}

#tradeValue.sell {
  background: rgba(180, 20, 20, 0.2);
}

/*///////////////////////CONTENT BOX STYLING//////////////////////////*/

.contentBtn {
  padding-top: 2rem;
}

.contentBtn1 {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1rem;
  border-right: 1px solid black;
}

.contentBtn2 {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1rem;
}

/*//////////////////PROJECT STYLING/////////////////////*/

#newProjBtn {
  border-radius: 0.5rem;
}

#projectBox {
  overflow-y: scroll;
  -ms-overflow-style: none;
  scrollbar-width: none;
  margin: 0rem 1rem 1rem 1rem;
  height: 82%;
  border-radius: 1rem;
  box-sizing: border-box;
  -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */
  -moz-box-sizing: border-box; /* Firefox, other Gecko */
  background: rgba(211, 211, 211, 0.3);
}

#projectBox::-webkit-scrollbar {
  display: none;
}

.eventRow {
  padding: 0.5rem 1rem;
  margin: 0.5rem 1rem;
  border-radius: 1rem;
  display: flex;
  align-items: start;
  flex-wrap: wrap;
  box-sizing: border-box;
  border: 1px solid rgba(230, 160, 100, 1);
  padding-top: 1.25rem;
  padding-bottom: 1.25rem;
  background: aliceblue;
}

.expandBtn {
  background: none;
  border: none;
}

.durationBox {
  display: flex;
  gap: 1rem;
  align-items: start;
  justify-content: start;
}

.workerBox {
  display: flex;
  justify-content: center;
  align-items: start;
}

.changeWorkerBtn {
  background: none;
  border: none;
}

.eventImpactBox {
  display: flex;
  flex-direction: column;
  justify-content: start;
}

.endBtn {
  border: none;
  background: none;
}

.descBox {
  display: block;
}

.descBox.hidden {
  display: none;
}

/*///////////////NEW EVENT STYLING///////////////////*/

.newEventHalfRow {
  width: calc(50% - 4rem);
  margin-left: 5rem;
  display: grid;
  grid-template-columns: 1fr 5fr;
}

.newEventHalfRow2 {
  width: calc(50% - 4rem);
  margin-left: 2rem;
  display: flex;
}

/*//////////////////////////BLDG STYLING///////////////////////*/

.fail {
  color: red;
}

/*///////////////////////UPGRADE STYLING///////////////////////*/
.upgBtn {
  border-radius: 1rem;
  padding: 0.5rem 1rem;
}

/*//////////////////// WEEK STYLING/////////////////*/
#log > div {
  width: 100%;
}

.eventStartRow {
  padding: 0.5rem 1rem;
  border-radius: 1rem;
  margin-right: 1rem;
  margin-left: 1rem;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  width: calc(100% -2rem);
  box-sizing: border-box;
  border: 1px solid rgba(100, 100, 130, 1);
  align-items: start;
  justify-content: start;
  padding-top: 1.25rem;
  padding-bottom: 1.25rem;
  background: aliceblue;
  margin-bottom: 1rem;
}

/*/////////////TROOP STYLING ///////////////*/

.troopDisplayBox {
  background-size: contain;
  background-repeat: no-repeat;
  overflow: scroll;
  height: 1000px;
  scrollbar-width: none;
  position: relative;
  margin: 1rem;
}

#militiaInfantry {
  background-image: url(${___CSS_LOADER_URL_REPLACEMENT_1___});
}

#militiaArchers {
  background-image: url(${___CSS_LOADER_URL_REPLACEMENT_2___});
}

#militiaPikemen {
  background-image: url(${___CSS_LOADER_URL_REPLACEMENT_3___});
}

#militiaCavalry {
  background-image: url(${___CSS_LOADER_URL_REPLACEMENT_4___});
}

#guardInfantry {
  background-image: url(${___CSS_LOADER_URL_REPLACEMENT_5___});
}

#guardArchers {
  background-image: url(${___CSS_LOADER_URL_REPLACEMENT_6___});
}

#guardSpearmen {
  background-image: url(${___CSS_LOADER_URL_REPLACEMENT_7___});
}

#guardCavalry {
  background-image: url(${___CSS_LOADER_URL_REPLACEMENT_8___});
}

#soldiers {
  background-image: url(${___CSS_LOADER_URL_REPLACEMENT_9___});
}

#longbowmen {
  background-image: url(${___CSS_LOADER_URL_REPLACEMENT_10___});
}

/*/////////////////GLOSSARY STYLING///////////////*/
#glossary {
  position: absolute;
  z-index: 1;
  top: 2rem;
  left: 3rem;
  height: 72.5rem;
  width: 50rem;
  background-color: aliceblue;
  border-radius: 0.5rem;
  box-shadow: 0 0 2rem black;
}

.troopRow {
  display: grid;
  grid-template-columns: 2fr 1fr 1fr 1fr 1fr 1fr;
  place-items: center;
  margin-bottom: 1rem;
}

/*/////////////////RATING BOX////////////////*/
.rateRow {
  display: grid;
  grid-template-columns: 1.6fr 0.75fr 3fr;
  margin-top: 1rem;
  padding-left: 1rem;
}

.intelOff {
  background-image: url(${___CSS_LOADER_URL_REPLACEMENT_11___});
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  position: relative;
}

.intelDef {
  background-image: url(${___CSS_LOADER_URL_REPLACEMENT_12___});
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  position: relative;
}

/*//////////////TOOLTIP STYLING///////////////////////*/
.tooltip {
  position: relative;
  display: inline-block;
}

/* Tooltip text */
.tooltip .tooltiptext {
  visibility: hidden;
  width: 200px;
  background-color: black;
  color: #fff;
  text-align: center;
  padding: 5px 0;
  border-radius: 6px;

  /* Position the tooltip text - see examples below! */
  position: absolute;
  z-index: 1;
}

/* Show the tooltip text when you mouse over the tooltip container */
.tooltip:hover .tooltiptext {
  visibility: visible;
  top: 18px;
  right: 105%;
  transition-delay: 0.33s;
}
`, "",{"version":3,"sources":["webpack://./src/style.css"],"names":[],"mappings":"AAAA;EACE,sBAAsB;EACtB,4CAAoC;AACtC;;AAEA;EACE,sBAAsB;EACtB,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB;AACF;;AAEA;EACE,aAAa;EACb,aAAa;EACb,YAAY;EACZ,8BAA8B;EAC9B,2BAA2B;EAC3B,sBAAsB;AACxB;;AAEA;;EAEE,wBAAwB;AAC1B;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,qBAAqB;AACvB;;AAEA;EACE,kBAAkB;EAClB,WAAW;AACb;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,wBAAwB;EACxB,eAAe;EACf,YAAY;EACZ,qBAAqB;EACrB,qBAAqB;EACrB,0BAA0B;AAC5B;;AAEA;EACE,wBAAwB;EACxB,eAAe;EACf,aAAa;EACb,qBAAqB;EACrB,qBAAqB;EACrB,0BAA0B;EAC1B,uBAAuB;AACzB;;AAEA;EACE,wBAAwB;EACxB,qBAAqB;EACrB,aAAa;EACb,qBAAqB;EACrB,0BAA0B;AAC5B;;AAEA;EACE,wBAAwB;EACxB,qBAAqB;EACrB,qBAAqB;EACrB,0BAA0B;AAC5B;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,gBAAgB;EAChB,cAAc;EACd,aAAa;EACb,sBAAsB;EACtB,wBAAwB;EACxB,qBAAqB;EACrB,qBAAqB;EACrB,0BAA0B;EAC1B,sBAAsB;AACxB;;AAEA;EACE,UAAU;EACV,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,eAAe;EACf,YAAY;EACZ,gBAAgB;EAChB,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,kCAAkC;AACpC;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,mBAAmB;EACnB,kCAAkC;EAClC,uBAAuB;EACvB,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,WAAW;EACX,eAAe;EACf,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,oCAAoC;EACpC,eAAe;EACf,qBAAqB;AACvB;;AAEA;EACE,UAAU;EACV,eAAe;EACf,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,oCAAoC;EACpC,eAAe;AACjB;;AAEA,2DAA2D;;AAE3D;EACE,aAAa;EACb,WAAW;AACb;;AAEA;;EAEE,UAAU;EACV,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,sBAAsB;EACtB,kBAAkB;EAClB,sBAAsB;AACxB;;AAEA;EACE,YAAY;EACZ,gBAAgB;AAClB;;AAEA,yEAAyE;;AAEzE;EACE,aAAa;EACb,WAAW;AACb;;AAEA;;EAEE,UAAU;EACV,YAAY;AACd;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE,4BAA4B;AAC9B;;AAEA;EACE,aAAa;EACb,YAAY;AACd;;AAEA;EACE,UAAU;EACV,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,UAAU;EACV,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,aAAa;AACf;;AAEA;EACE,kCAAkC;EAClC,wBAAwB;AAC1B;;AAEA;EACE,oCAAoC;EACpC,6BAA6B;EAC7B,8BAA8B;AAChC;;AAEA;EACE,oCAAoC;EACpC,6BAA6B;EAC7B,8BAA8B;AAChC;;AAEA;EACE,kCAAkC;EAClC,wBAAwB;AAC1B;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,0BAA0B;EAC1B,UAAU;EACV,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,eAAe;EACf,sBAAsB;AACxB;;AAEA;EACE,kCAAkC;AACpC;;AAEA;EACE,kCAAkC;AACpC;;AAEA,uEAAuE;;AAEvE;EACE,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,aAAa;EACb,6BAA6B;AAC/B;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,aAAa;AACf;;AAEA,yDAAyD;;AAEzD;EACE,qBAAqB;AACvB;;AAEA;EACE,kBAAkB;EAClB,wBAAwB;EACxB,qBAAqB;EACrB,2BAA2B;EAC3B,WAAW;EACX,mBAAmB;EACnB,sBAAsB;EACtB,8BAA8B,EAAE,gCAAgC;EAChE,2BAA2B,EAAE,yBAAyB;EACtD,oCAAoC;AACtC;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,oBAAoB;EACpB,mBAAmB;EACnB,mBAAmB;EACnB,aAAa;EACb,kBAAkB;EAClB,eAAe;EACf,sBAAsB;EACtB,wCAAwC;EACxC,oBAAoB;EACpB,uBAAuB;EACvB,qBAAqB;AACvB;;AAEA;EACE,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,aAAa;EACb,SAAS;EACT,kBAAkB;EAClB,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,sBAAsB;AACxB;;AAEA;EACE,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,aAAa;AACf;;AAEA,sDAAsD;;AAEtD;EACE,uBAAuB;EACvB,iBAAiB;EACjB,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,uBAAuB;EACvB,iBAAiB;EACjB,aAAa;AACf;;AAEA,gEAAgE;;AAEhE;EACE,UAAU;AACZ;;AAEA,gEAAgE;AAChE;EACE,mBAAmB;EACnB,oBAAoB;AACtB;;AAEA,qDAAqD;AACrD;EACE,WAAW;AACb;;AAEA;EACE,oBAAoB;EACpB,mBAAmB;EACnB,kBAAkB;EAClB,iBAAiB;EACjB,aAAa;EACb,kCAAkC;EAClC,uBAAuB;EACvB,sBAAsB;EACtB,wCAAwC;EACxC,kBAAkB;EAClB,sBAAsB;EACtB,oBAAoB;EACpB,uBAAuB;EACvB,qBAAqB;EACrB,mBAAmB;AACrB;;AAEA,6CAA6C;;AAE7C;EACE,wBAAwB;EACxB,4BAA4B;EAC5B,gBAAgB;EAChB,cAAc;EACd,qBAAqB;EACrB,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,yDAA0D;AAC5D;;AAEA;EACE,yDAAyD;AAC3D;;AAEA;EACE,yDAAyD;AAC3D;;AAEA;EACE,yDAAyD;AAC3D;;AAEA;EACE,yDAAwD;AAC1D;;AAEA;EACE,yDAAuD;AACzD;;AAEA;EACE,yDAAwD;AAC1D;;AAEA;EACE,yDAAuD;AACzD;;AAEA;EACE,yDAAkD;AACpD;;AAEA;EACE,0DAAoD;AACtD;;AAEA,mDAAmD;AACnD;EACE,kBAAkB;EAClB,UAAU;EACV,SAAS;EACT,UAAU;EACV,eAAe;EACf,YAAY;EACZ,2BAA2B;EAC3B,qBAAqB;EACrB,0BAA0B;AAC5B;;AAEA;EACE,aAAa;EACb,8CAA8C;EAC9C,mBAAmB;EACnB,mBAAmB;AACrB;;AAEA,8CAA8C;AAC9C;EACE,aAAa;EACb,uCAAuC;EACvC,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE,0DAA0C;EAC1C,wBAAwB;EACxB,4BAA4B;EAC5B,2BAA2B;EAC3B,kBAAkB;AACpB;;AAEA;EACE,0DAAqC;EACrC,wBAAwB;EACxB,4BAA4B;EAC5B,2BAA2B;EAC3B,kBAAkB;AACpB;;AAEA,uDAAuD;AACvD;EACE,kBAAkB;EAClB,qBAAqB;AACvB;;AAEA,iBAAiB;AACjB;EACE,kBAAkB;EAClB,YAAY;EACZ,uBAAuB;EACvB,WAAW;EACX,kBAAkB;EAClB,cAAc;EACd,kBAAkB;;EAElB,oDAAoD;EACpD,kBAAkB;EAClB,UAAU;AACZ;;AAEA,oEAAoE;AACpE;EACE,mBAAmB;EACnB,SAAS;EACT,WAAW;EACX,uBAAuB;AACzB","sourcesContent":["@font-face {\n  font-family: \"fantasy\";\n  src: url(\"../Luminari-Regular.woff\");\n}\n\n* {\n  font-family: \"fantasy\";\n  font-size: 16px;\n}\n\n.body {\n  position: relative;\n  cursor:progress\n}\n\ntextarea {\n  width: 97.75%;\n  height: 89.5%;\n  margin: 1rem;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\n\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n}\n\n.flexRow {\n  display: flex;\n  align-items: center;\n}\n\n.flexCol {\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n}\n\n.text-center {\n  text-align: center;\n  width: 100%;\n}\n\n.gap {\n  gap: 0.33rem;\n}\n\n.center {\n  justify-content: center;\n  align-items: center;\n}\n\n.box1 {\n  margin: 0 1rem 1rem 1rem;\n  padding: 0.5rem;\n  height: 90px;\n  background: aliceblue;\n  border-radius: 0.5rem;\n  box-shadow: 0 0 1rem black;\n}\n\n.box1a {\n  margin: 0 1rem 1rem 1rem;\n  padding: 0.5rem;\n  height: 120px;\n  background: aliceblue;\n  border-radius: 0.5rem;\n  box-shadow: 0 0 1rem black;\n  justify-content: center;\n}\n\n.box2 {\n  margin: 0 1rem 1rem 1rem;\n  background: aliceblue;\n  height: 500px;\n  border-radius: 0.5rem;\n  box-shadow: 0 0 1rem black;\n}\n\n.box3 {\n  margin: 0 1rem 1rem 1rem;\n  background: aliceblue;\n  border-radius: 0.5rem;\n  box-shadow: 0 0 1rem black;\n}\n\n.box4 {\n  width: 11.111%;\n}\n\n#contentBox {\n  grid-column: 3/4;\n  grid-row: 1/-1;\n  display: flex;\n  flex-direction: column;\n  margin: 0 1rem 1rem 1rem;\n  background: aliceblue;\n  border-radius: 0.5rem;\n  box-shadow: 0 0 1rem black;\n  justify-content: start;\n}\n\n#currentHealth {\n  width: 15%;\n  background: none;\n  border: none;\n}\n\nbutton {\n  font-family: \"fantasy\";\n}\n\n#settlementName {\n  font-size: 24px;\n  border: none;\n  background: none;\n  text-align: center;\n  width: 85%;\n}\n\n#settlementName::placeholder {\n  background: rgba(25, 25, 200, 0.3);\n}\n\n.valBall {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1rem;\n  background: rgba(200, 200, 230, 1);\n  border: 1px solid black;\n  height: 35px;\n  width: 35px;\n}\n\n.header {\n  height: 10%;\n  font-size: 22px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: rgba(200, 200, 230, 0.5);\n  padding: 0.5rem;\n  border-radius: 0.5rem;\n}\n\n.subHeader {\n  height: 5%;\n  font-size: 22px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: rgba(200, 200, 230, 0.5);\n  padding: 0.5rem;\n}\n\n/*//////////////////Tax Styling///////////////////////////*/\n\n.taxRow {\n  display: flex;\n  height: 10%;\n}\n\n.taxLabel,\n.taxValue {\n  width: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.taxLabel {\n  justify-content: start;\n  padding-left: 1rem;\n  box-sizing: border-box;\n}\n\n.taxChngBtn {\n  border: none;\n  background: none;\n}\n\n/*//////////////////////Shop Styling////////////////////////////////////*/\n\n#buySell {\n  display: flex;\n  height: 10%;\n}\n\n#buyMode,\n#sellMode {\n  width: 50%;\n  border: none;\n}\n\n#buyMode {\n  border-right: 1px solid black;\n}\n\n#sellMode {\n  border-left: 1px solid black;\n}\n\n.shopRow {\n  display: flex;\n  height: 45px;\n}\n\n.shopLabel {\n  width: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.bsBox {\n  width: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.shopBtn {\n  border: none;\n  background: none;\n}\n\n.bsRow {\n  display: flex;\n  height: 12.5%;\n}\n\n.buybuy {\n  background: rgba(20, 120, 20, 0.2);\n  color: rgba(0, 80, 0, 1);\n}\n\n#buyMode.buysell {\n  background: rgba(100, 100, 100, 0.3);\n  color: rgba(20, 180, 20, 0.5);\n  border-bottom: 2px solid black;\n}\n\n#sellMode.sellbuy {\n  background: rgba(100, 100, 100, 0.3);\n  color: rgba(180, 20, 20, 0.5);\n  border-bottom: 2px solid black;\n}\n\n.sellsell {\n  background: rgba(180, 20, 20, 0.2);\n  color: rgba(80, 0, 0, 1);\n}\n\n.buy {\n  background: rgba(20, 120, 20, 0.05);\n}\n\n.sell {\n  background: rgba(180, 20, 20, 0.05);\n}\n\n#tradeValue {\n  border: 6px solid lavender;\n  width: 40%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 22px;\n  box-sizing: border-box;\n}\n\n#tradeValue.buy {\n  background: rgba(20, 120, 20, 0.2);\n}\n\n#tradeValue.sell {\n  background: rgba(180, 20, 20, 0.2);\n}\n\n/*///////////////////////CONTENT BOX STYLING//////////////////////////*/\n\n.contentBtn {\n  padding-top: 2rem;\n}\n\n.contentBtn1 {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n  border-right: 1px solid black;\n}\n\n.contentBtn2 {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n}\n\n/*//////////////////PROJECT STYLING/////////////////////*/\n\n#newProjBtn {\n  border-radius: 0.5rem;\n}\n\n#projectBox {\n  overflow-y: scroll;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  margin: 0rem 1rem 1rem 1rem;\n  height: 82%;\n  border-radius: 1rem;\n  box-sizing: border-box;\n  -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n  -moz-box-sizing: border-box; /* Firefox, other Gecko */\n  background: rgba(211, 211, 211, 0.3);\n}\n\n#projectBox::-webkit-scrollbar {\n  display: none;\n}\n\n.eventRow {\n  padding: 0.5rem 1rem;\n  margin: 0.5rem 1rem;\n  border-radius: 1rem;\n  display: flex;\n  align-items: start;\n  flex-wrap: wrap;\n  box-sizing: border-box;\n  border: 1px solid rgba(230, 160, 100, 1);\n  padding-top: 1.25rem;\n  padding-bottom: 1.25rem;\n  background: aliceblue;\n}\n\n.expandBtn {\n  background: none;\n  border: none;\n}\n\n.durationBox {\n  display: flex;\n  gap: 1rem;\n  align-items: start;\n  justify-content: start;\n}\n\n.workerBox {\n  display: flex;\n  justify-content: center;\n  align-items: start;\n}\n\n.changeWorkerBtn {\n  background: none;\n  border: none;\n}\n\n.eventImpactBox {\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n}\n\n.endBtn {\n  border: none;\n  background: none;\n}\n\n.descBox {\n  display: block;\n}\n\n.descBox.hidden {\n  display: none;\n}\n\n/*///////////////NEW EVENT STYLING///////////////////*/\n\n.newEventHalfRow {\n  width: calc(50% - 4rem);\n  margin-left: 5rem;\n  display: grid;\n  grid-template-columns: 1fr 5fr;\n}\n\n.newEventHalfRow2 {\n  width: calc(50% - 4rem);\n  margin-left: 2rem;\n  display: flex;\n}\n\n/*//////////////////////////BLDG STYLING///////////////////////*/\n\n.fail {\n  color: red;\n}\n\n/*///////////////////////UPGRADE STYLING///////////////////////*/\n.upgBtn {\n  border-radius: 1rem;\n  padding: 0.5rem 1rem;\n}\n\n/*//////////////////// WEEK STYLING/////////////////*/\n#log > div {\n  width: 100%;\n}\n\n.eventStartRow {\n  padding: 0.5rem 1rem;\n  border-radius: 1rem;\n  margin-right: 1rem;\n  margin-left: 1rem;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  width: calc(100% -2rem);\n  box-sizing: border-box;\n  border: 1px solid rgba(100, 100, 130, 1);\n  align-items: start;\n  justify-content: start;\n  padding-top: 1.25rem;\n  padding-bottom: 1.25rem;\n  background: aliceblue;\n  margin-bottom: 1rem;\n}\n\n/*/////////////TROOP STYLING ///////////////*/\n\n.troopDisplayBox {\n  background-size: contain;\n  background-repeat: no-repeat;\n  overflow: scroll;\n  height: 1000px;\n  scrollbar-width: none;\n  position: relative;\n  margin: 1rem;\n}\n\n#militiaInfantry {\n  background-image: url(\"./militia_infantry-1706207528.png\");\n}\n\n#militiaArchers {\n  background-image: url(\"./militia_archers-1706210077.png\");\n}\n\n#militiaPikemen {\n  background-image: url(\"./militia_pikemen-1706216953.png\");\n}\n\n#militiaCavalry {\n  background-image: url(\"./militia_cavalry-1706216960.png\");\n}\n\n#guardInfantry {\n  background-image: url(\"./guard_infantry-1706642232.png\");\n}\n\n#guardArchers {\n  background-image: url(\"./guard_archers-1706643899.png\");\n}\n\n#guardSpearmen {\n  background-image: url(\"./guard_spearmen-1706642492.png\");\n}\n\n#guardCavalry {\n  background-image: url(\"./guard_cavalry-1706642216.png\");\n}\n\n#soldiers {\n  background-image: url(\"./soldiers-1706642896.png\");\n}\n\n#longbowmen {\n  background-image: url(\"./longbowmen-1706643607.png\");\n}\n\n/*/////////////////GLOSSARY STYLING///////////////*/\n#glossary {\n  position: absolute;\n  z-index: 1;\n  top: 2rem;\n  left: 3rem;\n  height: 72.5rem;\n  width: 50rem;\n  background-color: aliceblue;\n  border-radius: 0.5rem;\n  box-shadow: 0 0 2rem black;\n}\n\n.troopRow {\n  display: grid;\n  grid-template-columns: 2fr 1fr 1fr 1fr 1fr 1fr;\n  place-items: center;\n  margin-bottom: 1rem;\n}\n\n/*/////////////////RATING BOX////////////////*/\n.rateRow {\n  display: grid;\n  grid-template-columns: 1.6fr 0.75fr 3fr;\n  margin-top: 1rem;\n  padding-left: 1rem;\n}\n\n.intelOff {\n  background-image: url(\"./sword-cross.png\");\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  position: relative;\n}\n\n.intelDef {\n  background-image: url(\"./shield.png\");\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  position: relative;\n}\n\n/*//////////////TOOLTIP STYLING///////////////////////*/\n.tooltip {\n  position: relative;\n  display: inline-block;\n}\n\n/* Tooltip text */\n.tooltip .tooltiptext {\n  visibility: hidden;\n  width: 200px;\n  background-color: black;\n  color: #fff;\n  text-align: center;\n  padding: 5px 0;\n  border-radius: 6px;\n\n  /* Position the tooltip text - see examples below! */\n  position: absolute;\n  z-index: 1;\n}\n\n/* Show the tooltip text when you mouse over the tooltip container */\n.tooltip:hover .tooltiptext {\n  visibility: visible;\n  top: 18px;\n  right: 105%;\n  transition-delay: 0.33s;\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {



/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
module.exports = function (cssWithMappingToString) {
  var list = [];

  // return the list of modules as css string
  list.toString = function toString() {
    return this.map(function (item) {
      var content = "";
      var needLayer = typeof item[5] !== "undefined";
      if (item[4]) {
        content += "@supports (".concat(item[4], ") {");
      }
      if (item[2]) {
        content += "@media ".concat(item[2], " {");
      }
      if (needLayer) {
        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");
      }
      content += cssWithMappingToString(item);
      if (needLayer) {
        content += "}";
      }
      if (item[2]) {
        content += "}";
      }
      if (item[4]) {
        content += "}";
      }
      return content;
    }).join("");
  };

  // import a list of modules into the list
  list.i = function i(modules, media, dedupe, supports, layer) {
    if (typeof modules === "string") {
      modules = [[null, modules, undefined]];
    }
    var alreadyImportedModules = {};
    if (dedupe) {
      for (var k = 0; k < this.length; k++) {
        var id = this[k][0];
        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }
    for (var _k = 0; _k < modules.length; _k++) {
      var item = [].concat(modules[_k]);
      if (dedupe && alreadyImportedModules[item[0]]) {
        continue;
      }
      if (typeof layer !== "undefined") {
        if (typeof item[5] === "undefined") {
          item[5] = layer;
        } else {
          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");
          item[5] = layer;
        }
      }
      if (media) {
        if (!item[2]) {
          item[2] = media;
        } else {
          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");
          item[2] = media;
        }
      }
      if (supports) {
        if (!item[4]) {
          item[4] = "".concat(supports);
        } else {
          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");
          item[4] = supports;
        }
      }
      list.push(item);
    }
  };
  return list;
};

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/getUrl.js":
/*!********************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/getUrl.js ***!
  \********************************************************/
/***/ ((module) => {



module.exports = function (url, options) {
  if (!options) {
    options = {};
  }
  if (!url) {
    return url;
  }
  url = String(url.__esModule ? url.default : url);

  // If url is already wrapped in quotes, remove them
  if (/^['"].*['"]$/.test(url)) {
    url = url.slice(1, -1);
  }
  if (options.hash) {
    url += options.hash;
  }

  // Should url be wrapped?
  // See https://drafts.csswg.org/css-values-3/#urls
  if (/["'() \t\n]|(%20)/.test(url) || options.needQuotes) {
    return "\"".concat(url.replace(/"/g, '\\"').replace(/\n/g, "\\n"), "\"");
  }
  return url;
};

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/sourceMaps.js":
/*!************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/sourceMaps.js ***!
  \************************************************************/
/***/ ((module) => {



module.exports = function (item) {
  var content = item[1];
  var cssMapping = item[3];
  if (!cssMapping) {
    return content;
  }
  if (typeof btoa === "function") {
    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));
    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
    var sourceMapping = "/*# ".concat(data, " */");
    return [content].concat([sourceMapping]).join("\n");
  }
  return [content].join("\n");
};

/***/ }),

/***/ "./src/style.css":
/*!***********************!*\
  !*** ./src/style.css ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./style.css */ "./node_modules/css-loader/dist/cjs.js!./src/style.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {



var stylesInDOM = [];
function getIndexByIdentifier(identifier) {
  var result = -1;
  for (var i = 0; i < stylesInDOM.length; i++) {
    if (stylesInDOM[i].identifier === identifier) {
      result = i;
      break;
    }
  }
  return result;
}
function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];
  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var indexByIdentifier = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3],
      supports: item[4],
      layer: item[5]
    };
    if (indexByIdentifier !== -1) {
      stylesInDOM[indexByIdentifier].references++;
      stylesInDOM[indexByIdentifier].updater(obj);
    } else {
      var updater = addElementStyle(obj, options);
      options.byIndex = i;
      stylesInDOM.splice(i, 0, {
        identifier: identifier,
        updater: updater,
        references: 1
      });
    }
    identifiers.push(identifier);
  }
  return identifiers;
}
function addElementStyle(obj, options) {
  var api = options.domAPI(options);
  api.update(obj);
  var updater = function updater(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {
        return;
      }
      api.update(obj = newObj);
    } else {
      api.remove();
    }
  };
  return updater;
}
module.exports = function (list, options) {
  options = options || {};
  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];
    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDOM[index].references--;
    }
    var newLastIdentifiers = modulesToDom(newList, options);
    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];
      var _index = getIndexByIdentifier(_identifier);
      if (stylesInDOM[_index].references === 0) {
        stylesInDOM[_index].updater();
        stylesInDOM.splice(_index, 1);
      }
    }
    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {



var memo = {};

/* istanbul ignore next  */
function getTarget(target) {
  if (typeof memo[target] === "undefined") {
    var styleTarget = document.querySelector(target);

    // Special case to return head of iframe instead of iframe itself
    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
      try {
        // This will throw an exception if access to iframe is blocked
        // due to cross-origin restrictions
        styleTarget = styleTarget.contentDocument.head;
      } catch (e) {
        // istanbul ignore next
        styleTarget = null;
      }
    }
    memo[target] = styleTarget;
  }
  return memo[target];
}

/* istanbul ignore next  */
function insertBySelector(insert, style) {
  var target = getTarget(insert);
  if (!target) {
    throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
  }
  target.appendChild(style);
}
module.exports = insertBySelector;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {



/* istanbul ignore next  */
function insertStyleElement(options) {
  var element = document.createElement("style");
  options.setAttributes(element, options.attributes);
  options.insert(element, options.options);
  return element;
}
module.exports = insertStyleElement;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



/* istanbul ignore next  */
function setAttributesWithoutAttributes(styleElement) {
  var nonce =  true ? __webpack_require__.nc : 0;
  if (nonce) {
    styleElement.setAttribute("nonce", nonce);
  }
}
module.exports = setAttributesWithoutAttributes;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {



/* istanbul ignore next  */
function apply(styleElement, options, obj) {
  var css = "";
  if (obj.supports) {
    css += "@supports (".concat(obj.supports, ") {");
  }
  if (obj.media) {
    css += "@media ".concat(obj.media, " {");
  }
  var needLayer = typeof obj.layer !== "undefined";
  if (needLayer) {
    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");
  }
  css += obj.css;
  if (needLayer) {
    css += "}";
  }
  if (obj.media) {
    css += "}";
  }
  if (obj.supports) {
    css += "}";
  }
  var sourceMap = obj.sourceMap;
  if (sourceMap && typeof btoa !== "undefined") {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  }

  // For old IE
  /* istanbul ignore if  */
  options.styleTagTransform(css, styleElement, options.options);
}
function removeStyleElement(styleElement) {
  // istanbul ignore if
  if (styleElement.parentNode === null) {
    return false;
  }
  styleElement.parentNode.removeChild(styleElement);
}

/* istanbul ignore next  */
function domAPI(options) {
  if (typeof document === "undefined") {
    return {
      update: function update() {},
      remove: function remove() {}
    };
  }
  var styleElement = options.insertStyleElement(options);
  return {
    update: function update(obj) {
      apply(styleElement, options, obj);
    },
    remove: function remove() {
      removeStyleElement(styleElement);
    }
  };
}
module.exports = domAPI;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {



/* istanbul ignore next  */
function styleTagTransform(css, styleElement) {
  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css;
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild);
    }
    styleElement.appendChild(document.createTextNode(css));
  }
}
module.exports = styleTagTransform;

/***/ }),

/***/ "./Luminari-Regular.woff":
/*!*******************************!*\
  !*** ./Luminari-Regular.woff ***!
  \*******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__.p + "506cfaeeb78dd715d188.woff";

/***/ }),

/***/ "./src/guard_archers-1706643899.png":
/*!******************************************!*\
  !*** ./src/guard_archers-1706643899.png ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__.p + "790155ec0cf99b1ad8c9.png";

/***/ }),

/***/ "./src/guard_cavalry-1706642216.png":
/*!******************************************!*\
  !*** ./src/guard_cavalry-1706642216.png ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__.p + "54f52ecce86b293c05b2.png";

/***/ }),

/***/ "./src/guard_infantry-1706642232.png":
/*!*******************************************!*\
  !*** ./src/guard_infantry-1706642232.png ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__.p + "62c3e5abfeaf68a6fc46.png";

/***/ }),

/***/ "./src/guard_spearmen-1706642492.png":
/*!*******************************************!*\
  !*** ./src/guard_spearmen-1706642492.png ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__.p + "1a6228e931ac8b9edab4.png";

/***/ }),

/***/ "./src/longbowmen-1706643607.png":
/*!***************************************!*\
  !*** ./src/longbowmen-1706643607.png ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__.p + "9257445c655d33937ecd.png";

/***/ }),

/***/ "./src/militia_archers-1706210077.png":
/*!********************************************!*\
  !*** ./src/militia_archers-1706210077.png ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__.p + "f5958842e2a20b265f53.png";

/***/ }),

/***/ "./src/militia_cavalry-1706216960.png":
/*!********************************************!*\
  !*** ./src/militia_cavalry-1706216960.png ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__.p + "f41634e4d234fa5d1e62.png";

/***/ }),

/***/ "./src/militia_infantry-1706207528.png":
/*!*********************************************!*\
  !*** ./src/militia_infantry-1706207528.png ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__.p + "2b945dd29ebc1269be15.png";

/***/ }),

/***/ "./src/militia_pikemen-1706216953.png":
/*!********************************************!*\
  !*** ./src/militia_pikemen-1706216953.png ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__.p + "cde30466cf7b767e4df6.png";

/***/ }),

/***/ "./src/shield.png":
/*!************************!*\
  !*** ./src/shield.png ***!
  \************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__.p + "1f916cb8822c4b5b1d5d.png";

/***/ }),

/***/ "./src/soldiers-1706642896.png":
/*!*************************************!*\
  !*** ./src/soldiers-1706642896.png ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__.p + "4bf308861d77f7d5ee5d.png";

/***/ }),

/***/ "./src/sword-cross.png":
/*!*****************************!*\
  !*** ./src/sword-cross.png ***!
  \*****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__.p + "185765001260d8e6b63a.png";

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ var __webpack_exports__ = (__webpack_exec__("./src/index.js"));
/******/ }
]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,